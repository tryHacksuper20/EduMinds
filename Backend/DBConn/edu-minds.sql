-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Sep 29, 2024 at 03:25 PM
-- Server version: 10.4.24-MariaDB
-- PHP Version: 8.1.6

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `edu-minds`
--

-- --------------------------------------------------------

--
-- Table structure for table `courses`
--

CREATE TABLE `courses` (
  `c_id` int(11) NOT NULL,
  `title` varchar(250) NOT NULL,
  `description` varchar(500) NOT NULL,
  `imageUrl` varchar(240) NOT NULL,
  `professorName` varchar(200) NOT NULL,
  `duration` varchar(200) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `courses`
--

INSERT INTO `courses` (`c_id`, `title`, `description`, `imageUrl`, `professorName`, `duration`) VALUES
(101, 'Python', 'Python is a versatile, high-level programming language known for its simplicity, readability, and broad applicability across various fields like web development, data science, and AI.', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8E6Xlh2VtOsV4vrygfHVm6xKybmctIDBYnA&s', 'Dr. John Smith', '40 Hours'),
(102, 'Excel', 'Excel is a spreadsheet software by Microsoft used for data organization, analysis, and visualization, featuring functions, formulas, and pivot tables for efficient data management.', 'https://omtsdigest.com/wp-content/uploads/2016/02/excel-1598646848.jpeg', 'Dr. Alice Johnson', '30 Hours'),
(103, 'Data Analysis', 'Data Analysis is a multidisciplinary field that uses statistical methods, algorithms, and machine learning to extract insights and knowledge from structured and unstructured data for decision-making and predictive analysis.', 'https://www.fsm.ac.in/blog/wp-content/uploads/2022/07/FUqHEVVUsAAbZB0.jpg', 'Prof. Mark Davis', '40 Hours');

-- --------------------------------------------------------

--
-- Table structure for table `data_analytics_course`
--

CREATE TABLE `data_analytics_course` (
  `id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `level` tinyint(1) NOT NULL CHECK (`level` in (1,2,3)),
  `topic_name` varchar(255) NOT NULL,
  `video_url` varchar(255) NOT NULL,
  `articles` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `data_analytics_course`
--

INSERT INTO `data_analytics_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(1, 103, 1, 'Introduction to Data Analytics', 'https://youtu.be/5zEt1_Nkiio?si=7vL7_svQkoUsB5LG', '   {\r\n  \"title\": \"Introduction to Data Analytics\",\r\n  \"content\": {\r\n    \"introduction\": \"Data analytics is the process of analyzing raw data in order to draw meaningful insights. It plays a critical role in today\'s data-driven business environment where informed decisions can significantly affect success.\",\r\n    \"types_of_analytics\": {\r\n      \"descriptive\": \"Descriptive analytics involves summarizing historical data to understand what has happened in the past. It uses techniques such as data aggregation and data mining to provide insights.\",\r\n      \"diagnostic\": \"Diagnostic analytics digs deeper into data to understand why certain events happened. It uses drill-down, data discovery, and correlations to identify the root causes.\",\r\n      \"predictive\": \"Predictive analytics uses statistical models and machine learning algorithms to predict future outcomes based on historical data. It’s essential for forecasting trends and behaviors.\",\r\n      \"prescriptive\": \"Prescriptive analytics suggests actions that could be taken to affect desired outcomes. It goes beyond predicting future outcomes by providing actionable recommendations.\"\r\n    },\r\n    \"importance\": {\r\n      \"business_value\": \"Data analytics allows organizations to make better decisions, improve efficiency, and identify new opportunities. It can lead to improved customer satisfaction, cost savings, and competitive advantage.\",\r\n      \"personalized_experience\": \"By analyzing customer data, businesses can tailor experiences to individual preferences, leading to better customer retention and engagement.\",\r\n      \"future_trends\": \"Data analytics is crucial for predicting market trends, consumer behavior, and potential risks, allowing businesses to prepare and adapt accordingly.\"\r\n    },\r\n    \"tools_and_techniques\": {\r\n      \"excel\": \"Excel is commonly used for basic data analysis, including organizing and visualizing data. It’s user-friendly and widely accessible.\",\r\n      \"sql\": \"SQL is essential for querying relational databases, making it a powerful tool for extracting and manipulating data.\",\r\n      \"python\": \"Python is a versatile programming language used in data science for more complex data analysis tasks, such as statistical modeling and machine learning.\",\r\n      \"power_bi\": \"Power BI is a business analytics tool used to visualize data and share insights through interactive dashboards.\"\r\n    },\r\n    \"conclusion\": \"Data analytics is a transformative tool for businesses, helping them make data-driven decisions and stay competitive in an increasingly data-rich world. Whether it\'s through descriptive, diagnostic, predictive, or prescriptive methods, the insights gained from data analytics are invaluable.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(2, 103, 1, 'Excel Basic', 'https://youtu.be/FMSJXtwt6hE?si=bGYTNHXzvnJiBs9r', '', '2024-08-30 22:02:21'),
(3, 103, 2, 'Advanced Excel Part 1', 'https://youtu.be/ZmjjsfNH5nE?si=n3gnVLe08RXZjAAb', '   {\r\n  \"title\": \"Advanced Excel Part 1\",\r\n  \"content\": {\r\n    \"introduction\": \"Advanced Excel features enable users to perform more complex data analysis and visualization tasks. Mastering these tools can significantly enhance productivity and improve decision-making processes in business. This article covers key advanced features and techniques that every Excel user should know.\",\r\n    \"key_features\": {\r\n      \"pivot_tables\": \"Pivot tables are powerful tools for summarizing large datasets. They allow users to dynamically reorganize and analyze data without altering the original data set.\",\r\n      \"vlookup_and_hlookup\": \"These functions are used to search for specific data in tables. VLOOKUP allows users to look up values vertically, while HLOOKUP does so horizontally.\",\r\n      \"advanced_formulas\": {\r\n        \"nested_if\": \"Nested IF statements enable users to conduct complex logical tests. Example: =IF(A1>100, \'High\', IF(A1>50, \'Medium\', \'Low\'))\",\r\n        \"index_and_match\": \"Combining INDEX and MATCH functions allows for more flexible lookups than VLOOKUP. Example: =INDEX(B1:B10, MATCH(D1, A1:A10, 0))\"\r\n      },\r\n      \"data_validation\": \"Data validation helps maintain data integrity by restricting the type of data that can be entered in a cell, such as limiting entries to a list of options.\"\r\n    },\r\n    \"data_analysis_tools\": {\r\n      \"what-if_analysis\": {\r\n        \"goal_seek\": \"Goal Seek allows users to find the necessary input value to achieve a desired output in a formula.\",\r\n        \"scenario_manager\": \"Scenario Manager enables users to create and analyze different scenarios for their data.\"\r\n      },\r\n      \"power_query\": \"Power Query is a powerful tool for data transformation and preparation. It allows users to connect to various data sources, clean, and reshape data for analysis.\"\r\n    },\r\n    \"tips_for_advanced_users\": {\r\n      \"macros\": \"Macros automate repetitive tasks by recording a series of actions. Users can create custom functions and workflows to enhance efficiency.\",\r\n      \"advanced_charting\": \"Learn to create advanced charts such as waterfall, radar, and combo charts for more effective data visualization.\",\r\n      \"power_pivot\": \"Power Pivot allows for data modeling and advanced calculations using DAX (Data Analysis Expressions), enabling users to work with large datasets efficiently.\"\r\n    },\r\n    \"conclusion\": \"Advanced Excel features empower users to analyze data more effectively and create insightful visualizations. Mastering these tools can lead to better data-driven decisions and increased productivity. Practice using these techniques to fully leverage the power of Excel in your analysis.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(4, 103, 2, 'Advanced Excel Part 2', 'https://youtu.be/9sHGgIcHVfQ?si=Ksoxxl8MnDHl0Ev7', '   {\r\n  \"title\": \"Advanced Excel Part 2\",\r\n  \"content\": {\r\n    \"introduction\": \"In Advanced Excel Part 2, we delve deeper into powerful tools and techniques that can elevate your data analysis skills. This section focuses on advanced functionalities that can streamline your workflows and enhance your data manipulation capabilities.\",\r\n    \"advanced_data_analysis\": {\r\n      \"power_bi_integration\": \"Learn how to connect Excel to Power BI for advanced data visualizations and reporting capabilities. Power BI enables users to create interactive dashboards and gain insights from data.\",\r\n      \"data_modeling\": \"Understand how to create a data model using multiple tables, allowing you to perform complex analyses without losing performance. This includes creating relationships and utilizing DAX formulas.\",\r\n      \"array_formulas\": \"Array formulas can perform multiple calculations on one or more items in an array. For example: {=SUM(IF(A1:A10>100, B1:B10))} calculates the sum of B1:B10 for values in A1:A10 greater than 100.\"\r\n    },\r\n    \"advanced_visualization_techniques\": {\r\n      \"conditional_formatting\": \"Enhance your data presentation using conditional formatting to highlight trends and patterns. Learn to use formulas in conditional formatting for more customized rules.\",\r\n      \"sparklines\": \"Sparklines are miniature charts that fit within a cell. They provide a visual representation of data trends and can be used to summarize data series effectively.\"\r\n    },\r\n    \"automation_and_productivity\": {\r\n      \"vba_basics\": \"VBA (Visual Basic for Applications) is used for automating repetitive tasks in Excel. Learn to write simple scripts to improve efficiency and productivity.\",\r\n      \"using_tables\": \"Excel tables help manage and analyze data efficiently. Learn how to create structured tables for easier sorting, filtering, and analysis.\"\r\n    },\r\n    \"best_practices\": {\r\n      \"data_cleanup\": \"Always ensure your data is clean and formatted correctly before analysis. Use functions like TRIM, CLEAN, and TEXT to prepare your data.\",\r\n      \"documenting_your_work\": \"Document your formulas, methodologies, and any data transformations you apply. This practice aids in maintaining transparency and reproducibility.\"\r\n    },\r\n    \"conclusion\": \"Advanced Excel skills can significantly improve your ability to analyze and present data. By mastering these tools and techniques, you can unlock new levels of efficiency and insight in your data analysis workflows. Continued practice with these advanced features will prepare you for more complex analytical challenges.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(5, 103, 2, 'Power BI Part 1', 'https://youtu.be/KIlw5Up2hnk?si=PGEJa-Ik9ZfzoHd3', '   {\r\n  \"title\": \"Power BI Part 1\",\r\n  \"content\": {\r\n    \"introduction\": \"Power BI is a powerful business analytics tool that enables you to visualize your data and share insights across your organization or embed them in your app or website. In Part 1, we will explore the basics of Power BI, including its interface, features, and the fundamental concepts of data modeling.\",\r\n    \"getting_started\": {\r\n      \"installation\": \"To begin using Power BI, download the Power BI Desktop application from the Microsoft website. Follow the installation instructions to set it up on your machine.\",\r\n      \"interface_overview\": \"Power BI has a user-friendly interface that includes a ribbon for commands, a report view for designing visuals, a data view for modeling data, and a relationships view to manage data relationships.\"\r\n    },\r\n    \"data_sources\": {\r\n      \"connecting_to_data\": \"Power BI allows you to connect to a variety of data sources, including Excel, SQL Server, and cloud-based services like Azure and Salesforce. Use the \'Get Data\' option to import data from these sources.\",\r\n      \"transforming_data\": \"Power BI includes Power Query for data transformation, enabling you to clean, shape, and prepare your data for analysis. Use the Query Editor to perform operations like filtering, merging, and aggregating data.\"\r\n    },\r\n    \"data_modeling\": {\r\n      \"understanding_data_model\": \"A data model is a collection of tables and relationships that represent your data in Power BI. Understanding how to create and manage relationships between tables is crucial for effective reporting.\",\r\n      \"creating_relationships\": \"Learn to create relationships using the relationships view in Power BI. You can define one-to-many and many-to-many relationships to connect your data tables appropriately.\"\r\n    },\r\n    \"visualization_basics\": {\r\n      \"creating_visuals\": \"Power BI offers a variety of visualization options, including bar charts, line charts, and pie charts. Learn to create visuals by dragging fields onto the report canvas.\",\r\n      \"formatting_visuals\": \"Once your visuals are created, you can customize their appearance using the formatting pane. Adjust colors, labels, and tooltips to enhance clarity and aesthetics.\"\r\n    },\r\n    \"best_practices\": {\r\n      \"designing_reports\": \"When designing reports, keep user experience in mind. Use clear titles, appropriate visuals, and a logical layout to convey your data story effectively.\",\r\n      \"data_security\": \"Ensure your data is secure by managing access permissions and using row-level security if needed. Protect sensitive data while allowing users to access relevant insights.\"\r\n    },\r\n    \"conclusion\": \"In Power BI Part 1, you have learned the fundamentals of getting started with Power BI, including connecting to data sources, transforming data, and creating basic visualizations. Mastering these basics sets a solid foundation for more advanced features and analytics in future sessions.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(6, 103, 2, 'Power BI Part 2', 'https://youtu.be/O9OUqf2y4LA?si=7YYkaAyav-aGtbc3', '   \r\n  {\r\n    \"title\": \"Power BI Part 2\",\r\n    \"content\": {\r\n      \"introduction\": \"In Part 2 of our Power BI series, we will delve deeper into advanced functionalities that enhance your data analysis capabilities. We will cover topics such as DAX (Data Analysis Expressions), advanced data modeling techniques, and creating interactive reports.\",\r\n      \"dax_introduction\": {\r\n        \"what_is_dax\": \"DAX, or Data Analysis Expressions, is a formula language used in Power BI for data manipulation and analysis. It allows you to create calculated columns, measures, and custom calculations to enhance your reports.\",\r\n        \"creating_measures\": \"Measures are calculations that are performed on your data model. To create a measure, navigate to the data view, click on the \'New Measure\' button, and enter your DAX formula. For example, you can create a measure to calculate total sales by summing a sales column.\"\r\n      },\r\n      \"advanced_data_modeling\": {\r\n        \"star_schema\": \"Implementing a star schema is crucial for efficient data modeling in Power BI. A star schema consists of a central fact table surrounded by dimension tables, which enhances query performance and simplifies reporting.\",\r\n        \"using_calculated_columns\": \"Calculated columns are useful for adding new data fields to your tables based on existing data. Create them by using DAX expressions to perform row-level calculations.\"\r\n      },\r\n      \"creating_interactive_reports\": {\r\n        \"using_slicers\": \"Slicers are visual filters that allow users to interact with reports dynamically. Add slicers to your report to filter data based on user selections, enhancing user experience.\",\r\n        \"drillthrough_functionality\": \"Drillthrough allows users to navigate from summary data to detailed data. Set up drillthrough pages in your report to let users explore specific aspects of your data more thoroughly.\"\r\n      },\r\n      \"publishing_and_sharing_reports\": {\r\n        \"publishing_to_power_bi_service\": \"After creating your reports, publish them to the Power BI service for sharing and collaboration. Click on the \'Publish\' button in Power BI Desktop to upload your report.\",\r\n        \"sharing_and_permissions\": \"Manage sharing permissions in the Power BI service to control who can view or edit your reports. Use workspaces for collaboration within teams or organizations.\"\r\n      },\r\n      \"conclusion\": \"In Power BI Part 2, you learned about advanced functionalities such as DAX, data modeling best practices, and creating interactive reports. These skills will empower you to extract deeper insights from your data and share them effectively within your organization.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 22:02:21'),
(7, 103, 1, 'SQL Basic', 'https://youtu.be/lbvQmIs6OHw?si=1o-QYpRA60I-rwb_', '   \r\n  {\r\n    \"title\": \"SQL Basic\",\r\n    \"content\": {\r\n      \"introduction\": \"Structured Query Language (SQL) is a standard programming language specifically for managing and manipulating databases. Understanding SQL is essential for data analysts and data scientists, as it allows you to interact with databases and extract meaningful insights from data.\",\r\n      \"sql_syntax\": {\r\n        \"basic_queries\": \"The most fundamental operations in SQL include SELECT, INSERT, UPDATE, and DELETE. A simple SELECT query retrieves data from a database table. For example, to select all records from a table named \'Employees\', you can use the following syntax: SELECT * FROM Employees;\",\r\n        \"filtering_data\": \"You can filter query results using the WHERE clause. For instance, if you want to find employees with a specific title, you would use: SELECT * FROM Employees WHERE title = \'Manager\';\"\r\n      },\r\n      \"data_manipulation\": {\r\n        \"inserting_data\": \"To add new records to a table, you use the INSERT INTO statement. For example: INSERT INTO Employees (name, title) VALUES (\'John Doe\', \'Analyst\');\",\r\n        \"updating_data\": \"To modify existing records, use the UPDATE statement. For example, to change the title of an employee: UPDATE Employees SET title = \'Senior Analyst\' WHERE name = \'John Doe\';\",\r\n        \"deleting_data\": \"To remove records from a table, use the DELETE statement. For instance: DELETE FROM Employees WHERE name = \'John Doe\';\"\r\n      },\r\n      \"advanced_queries\": {\r\n        \"joining_tables\": \"SQL allows you to combine rows from two or more tables using JOIN clauses. For instance, to get employee names along with their department names, you can use: SELECT Employees.name, Departments.name FROM Employees JOIN Departments ON Employees.department_id = Departments.id;\",\r\n        \"grouping_data\": \"Use the GROUP BY clause to aggregate data. For example, to find the number of employees in each department: SELECT department_id, COUNT(*) FROM Employees GROUP BY department_id;\"\r\n      },\r\n      \"best_practices\": {\r\n        \"writing_clean_code\": \"Always write clear and understandable queries. Use comments to explain complex logic, and format your code for readability.\",\r\n        \"optimizing_queries\": \"To optimize performance, avoid using SELECT * in production queries. Specify only the columns you need.\"\r\n      },\r\n      \"conclusion\": \"Mastering SQL basics lays a solid foundation for advanced data manipulation and querying techniques. Practicing these fundamental concepts will enhance your ability to work with data effectively.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 22:02:21'),
(8, 103, 1, 'SQL DDL', 'https://youtu.be/GfoqC_7ZmuQ?si=sxZTYzTlKQeD3Q5U', '   \r\n  {\r\n    \"title\": \"SQL DDL\",\r\n    \"content\": {\r\n      \"introduction\": \"SQL Data Definition Language (DDL) is a subset of SQL used to define and manage all objects in a database. This includes creating, altering, and dropping tables, indexes, and other structures.\",\r\n      \"key_commands\": {\r\n        \"create_table\": {\r\n          \"description\": \"The CREATE TABLE statement is used to create a new table in the database. You can define columns, data types, and constraints during this process.\",\r\n          \"example\": \"CREATE TABLE Students (ID INT PRIMARY KEY, Name VARCHAR(100), Age INT);\"\r\n        },\r\n        \"alter_table\": {\r\n          \"description\": \"The ALTER TABLE statement modifies an existing table structure. You can add, drop, or modify columns and constraints.\",\r\n          \"example\": \"ALTER TABLE Students ADD COLUMN Email VARCHAR(255);\"\r\n        },\r\n        \"drop_table\": {\r\n          \"description\": \"The DROP TABLE statement deletes a table and its data from the database. Use this command with caution, as it cannot be undone.\",\r\n          \"example\": \"DROP TABLE Students;\"\r\n        },\r\n        \"create_index\": {\r\n          \"description\": \"The CREATE INDEX statement is used to create an index on a table, which can improve query performance by allowing faster data retrieval.\",\r\n          \"example\": \"CREATE INDEX idx_student_name ON Students(Name);\"\r\n        }\r\n      },\r\n      \"best_practices\": {\r\n        \"backup_data\": \"Always back up your data before performing DDL operations that modify the structure or delete data.\",\r\n        \"test_changes\": \"Use a development environment to test DDL changes before applying them to production databases.\",\r\n        \"use transactions\": \"When supported, use transactions to group DDL statements to ensure data integrity.\"\r\n      },\r\n      \"conclusion\": \"Understanding SQL DDL is crucial for database management. Mastering these commands allows you to create and maintain the structure of your databases effectively.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 22:02:21'),
(9, 103, 2, 'SQL DML & Order By', 'https://youtu.be/suN0rDob0FI?si=LyCUZjPIH2HsQURa', '   \r\n  {\r\n    \"title\": \"SQL DML & Order By\",\r\n    \"content\": {\r\n      \"introduction\": \"SQL DML (Data Manipulation Language) is a subset of SQL used to manage and manipulate data in existing database objects. DML includes commands that allow you to insert, update, delete, and query data. Understanding DML is essential for performing data operations effectively.\",\r\n      \"key_commands\": {\r\n        \"insert\": {\r\n          \"description\": \"The INSERT statement is used to add new records to a table. You can specify values for specific columns or insert data into all columns.\",\r\n          \"example\": \"INSERT INTO Students (ID, Name, Age) VALUES (1, \'John Doe\', 20);\"\r\n        },\r\n        \"update\": {\r\n          \"description\": \"The UPDATE statement modifies existing records in a table. You can update one or more columns based on specific conditions.\",\r\n          \"example\": \"UPDATE Students SET Age = 21 WHERE ID = 1;\"\r\n        },\r\n        \"delete\": {\r\n          \"description\": \"The DELETE statement removes records from a table. You can delete specific rows or all rows based on conditions.\",\r\n          \"example\": \"DELETE FROM Students WHERE ID = 1;\"\r\n        },\r\n        \"select\": {\r\n          \"description\": \"The SELECT statement retrieves data from one or more tables. You can specify columns and conditions for filtering results.\",\r\n          \"example\": \"SELECT * FROM Students WHERE Age > 18;\"\r\n        }\r\n      },\r\n      \"order_by_clause\": {\r\n        \"description\": \"The ORDER BY clause is used to sort the result set of a query by one or more columns. You can sort data in ascending (ASC) or descending (DESC) order.\",\r\n        \"example\": \"SELECT * FROM Students ORDER BY Name ASC;\"\r\n      },\r\n      \"best_practices\": {\r\n        \"use transactions\": \"When performing multiple DML operations, use transactions to ensure data integrity. This allows you to roll back changes if something goes wrong.\",\r\n        \"backup data\": \"Consider backing up data before performing delete operations, especially if working with large datasets.\"\r\n      },\r\n      \"conclusion\": \"Mastering SQL DML commands, including the use of the ORDER BY clause, is fundamental for data management. These commands enable you to efficiently manipulate and query data in your databases.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 22:02:21'),
(10, 103, 2, 'SQL Group By', 'https://youtu.be/oHZ8udrINbM?si=3Fq0KpAopST3wpvC', '   \r\n  {\r\n    \"title\": \"SQL Group By\",\r\n    \"content\": {\r\n      \"introduction\": \"The SQL GROUP BY clause is used in collaboration with aggregate functions to group the result set by one or more columns. It allows you to perform operations on groups of rows that share a common characteristic.\",\r\n      \"purpose\": {\r\n        \"description\": \"GROUP BY is typically used to aggregate data for reporting purposes, helping to summarize information and draw insights from datasets.\",\r\n        \"example\": \"For instance, if you want to know the total sales for each product category, you can group the sales data by the category column.\"\r\n      },\r\n      \"syntax\": {\r\n        \"basic_syntax\": \"SELECT column1, aggregate_function(column2) FROM table_name WHERE condition GROUP BY column1;\",\r\n        \"example\": \"SELECT category, SUM(sales) FROM products GROUP BY category;\"\r\n      },\r\n      \"aggregate_functions\": {\r\n        \"description\": \"Common aggregate functions used with GROUP BY include SUM(), AVG(), COUNT(), MAX(), and MIN(). These functions perform calculations on the grouped data.\",\r\n        \"examples\": {\r\n          \"sum\": \"SUM(sales) returns the total sales for each group.\",\r\n          \"avg\": \"AVG(age) returns the average age of the grouped records.\",\r\n          \"count\": \"COUNT(*) returns the number of records in each group.\"\r\n        }\r\n      },\r\n      \"having_clause\": {\r\n        \"description\": \"The HAVING clause is used to filter groups based on a condition. Unlike the WHERE clause, which filters rows, HAVING filters groups.\",\r\n        \"example\": \"SELECT category, COUNT(*) as count FROM products GROUP BY category HAVING COUNT(*) > 5;\"\r\n      },\r\n      \"best_practices\": {\r\n        \"be specific\": \"Only include columns in the SELECT statement that are either aggregated or included in the GROUP BY clause.\",\r\n        \"test with small datasets\": \"When learning, test your queries with smaller datasets to understand the output better.\"\r\n      },\r\n      \"conclusion\": \"The GROUP BY clause is a powerful tool in SQL for summarizing and analyzing data. By mastering its usage along with aggregate functions, you can gain valuable insights from your data.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 22:02:21'),
(11, 103, 2, 'SQL Joins', 'https://youtu.be/zN5soLiX0BQ?si=SMLCnT7UaiNS-zr-', '   \r\n  {\r\n    \"title\": \"SQL Joins\",\r\n    \"content\": {\r\n      \"introduction\": \"SQL Joins are used to combine rows from two or more tables based on a related column between them. They are essential for retrieving related data from multiple tables in a relational database.\",\r\n      \"types_of_joins\": {\r\n        \"inner_join\": {\r\n          \"description\": \"An INNER JOIN returns only the rows that have matching values in both tables.\",\r\n          \"syntax\": \"SELECT columns FROM table1 INNER JOIN table2 ON table1.common_column = table2.common_column;\",\r\n          \"example\": \"SELECT orders.id, customers.name FROM orders INNER JOIN customers ON orders.customer_id = customers.id;\"\r\n        },\r\n        \"left_join\": {\r\n          \"description\": \"A LEFT JOIN returns all rows from the left table and the matched rows from the right table. If there is no match, NULL values are returned for columns from the right table.\",\r\n          \"syntax\": \"SELECT columns FROM table1 LEFT JOIN table2 ON table1.common_column = table2.common_column;\",\r\n          \"example\": \"SELECT customers.name, orders.id FROM customers LEFT JOIN orders ON customers.id = orders.customer_id;\"\r\n        },\r\n        \"right_join\": {\r\n          \"description\": \"A RIGHT JOIN returns all rows from the right table and the matched rows from the left table. If there is no match, NULL values are returned for columns from the left table.\",\r\n          \"syntax\": \"SELECT columns FROM table1 RIGHT JOIN table2 ON table1.common_column = table2.common_column;\",\r\n          \"example\": \"SELECT orders.id, customers.name FROM orders RIGHT JOIN customers ON orders.customer_id = customers.id;\"\r\n        },\r\n        \"full_outer_join\": {\r\n          \"description\": \"A FULL OUTER JOIN returns all rows from both tables, with NULLs in places where there is no match.\",\r\n          \"syntax\": \"SELECT columns FROM table1 FULL OUTER JOIN table2 ON table1.common_column = table2.common_column;\",\r\n          \"example\": \"SELECT customers.name, orders.id FROM customers FULL OUTER JOIN orders ON customers.id = orders.customer_id;\"\r\n        },\r\n        \"cross_join\": {\r\n          \"description\": \"A CROSS JOIN returns the Cartesian product of the two tables, meaning it returns all possible combinations of rows.\",\r\n          \"syntax\": \"SELECT columns FROM table1 CROSS JOIN table2;\",\r\n          \"example\": \"SELECT customers.name, products.product_name FROM customers CROSS JOIN products;\"\r\n        }\r\n      },\r\n      \"best_practices\": {\r\n        \"use_on_conditions\": \"Always specify the join condition using the ON clause to avoid Cartesian products, unless a CROSS JOIN is intended.\",\r\n        \"alias_tables\": \"Use table aliases for better readability, especially when joining multiple tables.\"\r\n      },\r\n      \"conclusion\": \"SQL Joins are crucial for data analysis in relational databases. Understanding how to use different types of joins enables you to write more efficient and effective SQL queries to retrieve and analyze related data.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 22:02:21'),
(12, 103, 1, 'Python Basic', 'https://youtu.be/TlkPGxRWKhk?si=LszCLdsG2xFnc-o_', '', '2024-08-30 22:02:21'),
(13, 103, 1, 'Exploratory Data Analysis (EDA)', 'https://youtu.be/czDQqnQT3yQ?si=e63nM10aker9lUc0', '   {\r\n  \"title\": \"Exploratory Data Analysis (EDA)\",\r\n  \"content\": {\r\n    \"introduction\": \"Exploratory Data Analysis (EDA) is the process of analyzing datasets to summarize their main characteristics, often using visual methods. It is an important initial step in data analysis, helping to uncover patterns, detect anomalies, and test hypotheses.\",\r\n    \"purpose_of_eda\": {\r\n      \"data_inspection\": \"EDA involves inspecting the data to identify its structure, missing values, and outliers. This step ensures the data is clean and ready for further analysis.\",\r\n      \"data_visualization\": \"Visualization techniques such as histograms, box plots, and scatter plots are used to gain insights into the data distribution and relationships between variables.\",\r\n      \"hypothesis_generation\": \"EDA helps in forming hypotheses about the data and relationships among variables, laying the groundwork for further analysis or modeling.\",\r\n      \"data_transformation\": \"Transforming or cleaning data is often necessary to make it suitable for more complex analysis, such as machine learning or statistical modeling.\"\r\n    },\r\n    \"steps_of_eda\": {\r\n      \"data_collection\": \"Gathering relevant data from different sources, ensuring it is suitable for analysis and aligned with the objectives of the study.\",\r\n      \"data_cleaning\": \"Identifying and handling missing values, duplicate records, and outliers to improve the quality of the data.\",\r\n      \"data_visualization\": \"Creating visual representations like bar charts, line graphs, and scatter plots to explore data distribution and identify trends or correlations.\",\r\n      \"statistical_summaries\": \"Generating summary statistics such as mean, median, variance, and standard deviation to get a quantitative sense of the data.\"\r\n    },\r\n    \"importance\": {\r\n      \"understanding_data\": \"EDA provides an in-depth understanding of the data, enabling analysts to see beyond basic numbers and draw actionable insights.\",\r\n      \"decision_support\": \"It aids in making informed decisions regarding data preprocessing, feature selection, and the choice of statistical methods or models to apply.\",\r\n      \"identifying_patterns\": \"EDA helps in spotting underlying trends, patterns, and correlations, which can lead to more informed conclusions and predictions.\"\r\n    },\r\n    \"tools_and_techniques\": {\r\n      \"python\": \"Python libraries like Pandas, Matplotlib, and Seaborn are widely used for conducting EDA due to their flexibility and extensive functionality.\",\r\n      \"r_programming\": \"R is popular for EDA, particularly with its visualization packages like ggplot2 and its data manipulation capabilities through dplyr.\",\r\n      \"tableau\": \"Tableau is a data visualization tool that simplifies EDA with its drag-and-drop interface, allowing users to build interactive and insightful dashboards.\",\r\n      \"jupyter_notebooks\": \"Jupyter Notebooks are commonly used for performing EDA in an iterative manner, as they allow for combining code, visualizations, and markdown for notes in a single document.\"\r\n    },\r\n    \"conclusion\": \"Exploratory Data Analysis is an essential step in the data analysis process, providing a foundation for further data exploration, statistical modeling, and machine learning. By applying visualization, summary statistics, and pattern recognition techniques, EDA helps uncover key insights and shape the direction of deeper analysis.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(14, 103, 1, 'Data Visualization', 'https://youtu.be/Z6ToYVvEi2o?si=8FjlyDq9yft6ntW-', '    \r\n  { \r\n    \"title\": \"Data Visualization\", \r\n    \"content\": { \r\n      \"introduction\": \"Data visualization is the graphical representation of information and data. By using visual elements like charts, graphs, and maps, data visualization tools provide an accessible way to see and understand trends, outliers, and patterns in data.\", \r\n      \"importance\": { \r\n        \"understanding_data\": \"Data visualization helps to make complex data more understandable by simplifying it into visual formats.\", \r\n        \"decision_making\": \"It facilitates better decision-making by allowing stakeholders to see data-driven insights at a glance.\", \r\n        \"storytelling\": \"Effective visualization can tell a story about the data, engaging the audience and guiding them through the insights.\" \r\n      }, \r\n      \"common_tools\": { \r\n        \"tableau\": \"Tableau is a powerful data visualization tool that allows users to create interactive and shareable dashboards.\", \r\n        \"power_bi\": \"Power BI is another popular tool that provides robust analytics and visualization capabilities.\", \r\n        \"matplotlib\": \"In Python, Matplotlib is a widely used library for creating static, animated, and interactive visualizations.\" \r\n      }, \r\n      \"techniques\": { \r\n        \"bar_charts\": \"Bar charts are used to compare different categories of data. They are particularly useful for showing changes over time.\", \r\n        \"line_charts\": \"Line charts are ideal for showing trends over time and can display multiple data series.\", \r\n        \"scatter_plots\": \"Scatter plots help to identify relationships between two variables and can show clustering in data.\" \r\n      }, \r\n      \"best_practices\": { \r\n        \"keep_it_simple\": \"Avoid clutter. A clean design with a clear focus is often more effective.\", \r\n        \"choose_the_right_chart\": \"Select the appropriate type of visualization based on the data and the story you want to tell.\", \r\n        \"label_your_data\": \"Always label your axes, legends, and data points to ensure clarity.\" \r\n      }, \r\n      \"conclusion\": \"In conclusion, data visualization is a critical skill in the field of data analytics. It transforms raw data into visual formats that enhance understanding, support decision-making, and tell compelling stories.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 22:02:21'),
(15, 103, 1, 'Top 5 Data Analyst Projects for Resume', 'https://youtu.be/a16r5YaYsdE?si=nbsPtg2zJsViEeUE', '    \r\n  { \r\n    \"title\": \"Top 5 Data Analyst Projects for Resume\", \r\n    \"content\": { \r\n      \"introduction\": \"In the competitive field of data analytics, having practical projects on your resume can significantly enhance your job prospects. Showcasing real-world applications of your skills demonstrates your capability to analyze data and derive actionable insights. Here are the top five data analyst projects that can make your resume stand out.\", \r\n      \"projects\":     \r\n        { \r\n          \"title\": \"Customer Segmentation Analysis\", \r\n          \"description\": \"This project involves analyzing customer data to identify distinct segments based on purchasing behavior. Using clustering techniques, you can group customers and create tailored marketing strategies for each segment, thereby improving customer engagement and retention.\" \r\n        }, \r\n        { \r\n          \"title\": \"Sales Forecasting\", \r\n          \"description\": \"In this project, you all use historical sales data to predict future sales. Utilizing time series analysis or machine learning models, you can identify trends and seasonal patterns, which helps businesses plan inventory and budget more effectively.\" \r\n        }, \r\n        { \r\n          \"title\": \"A/B Testing for Marketing Campaigns\", \r\n          \"description\": \"Conducting A/B tests allows you to evaluate the effectiveness of different marketing strategies. By analyzing the performance of various campaigns through statistical methods, you can determine which approach yields the highest conversion rates and ROI.\" \r\n        }, \r\n        { \r\n          \"title\": \"Web Analytics Dashboard\", \r\n          \"description\": \"Creating a dashboard using tools like Tableau or Power BI to visualize website traffic, user behavior, and conversion metrics can provide valuable insights. This project showcases your ability to communicate data-driven insights effectively and your proficiency in data visualization tools.\" \r\n        }, \r\n        { \r\n          \"title\": \"Sentiment Analysis on Social Media\", \r\n          \"description\": \"In this project, you all analyze social media data to gauge public sentiment regarding a brand or product. By using natural language processing techniques, you can extract insights from customer feedback, helping businesses understand consumer perceptions and improve their strategies.\" \r\n        } \r\n        , \r\n      \"conclusion\": \"These projects not only enhance your data analytics skills but also provide concrete examples to discuss in interviews. When presenting these projects, emphasize the methodologies used, the insights gained, and the impact of your findings on business decisions. Showcasing your practical experience can significantly improve your chances of landing a data analyst position.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 22:02:21'),
(16, 103, 2, 'Data Analysis End-to-End Project for RESUME Part 1', 'https://youtu.be/1TmrFEHTg54?si=d1F7D3OwdPOv9WV7', '    \r\n  { \r\n    \"title\": \"Data Analysis End-to-End Project for RESUME Part 1\", \r\n    \"content\": { \r\n      \"introduction\": \"An end-to-end data analysis project demonstrates your ability to take a data project from inception to conclusion. It highlights your skills in data collection, cleaning, analysis, and visualization. In Part 1, we will cover the initial stages of an end-to-end data analysis project.\", \r\n      \"phases\": { \r\n        \"1. Defining the Problem\": { \r\n          \"description\": \"The first step is to clearly define the problem you want to solve or the question you want to answer. This could involve discussions with stakeholders or a review of existing data to identify gaps and opportunities.\", \r\n          \"example\": \"For instance, if you are analyzing customer data, you might define the problem as understanding the factors that influence customer churn.\" \r\n        }, \r\n        \"2. Data Collection\": { \r\n          \"description\": \"Once the problem is defined, the next step is to gather the data needed for analysis. This could involve extracting data from databases, using APIs to pull data from online sources, or even conducting surveys to collect primary data.\", \r\n          \"example\": \"You might collect sales data, customer demographics, and interaction logs to analyze customer behavior.\" \r\n        }, \r\n        \"3. Data Cleaning\": { \r\n          \"description\": \"Raw data often contains inaccuracies or inconsistencies that can skew your analysis. Data cleaning involves identifying and correcting these issues, which may include handling missing values, removing duplicates, and standardizing formats.\", \r\n          \"example\": \"You may need to remove entries with null values or correct formatting errors in date fields.\" \r\n        }, \r\n        \"4. Exploratory Data Analysis (EDA)\": { \r\n          \"description\": \"EDA involves summarizing the main characteristics of the data, often using visual methods. This step helps you understand the data distribution and identify patterns or anomalies that could inform your analysis.\", \r\n          \"example\": \"You could use visualizations like histograms and scatter plots to examine relationships between variables.\" \r\n        } \r\n      }, \r\n      \"conclusion\": \"In Part 1, we have covered the essential phases of defining the problem, collecting data, cleaning data, and performing exploratory data analysis. These foundational steps are crucial for a successful end-to-end data analysis project. In Part 2, we will delve deeper into the analysis and visualization stages.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 22:02:21'),
(17, 103, 2, 'Data Analysis End-to-End Project for RESUME Part 2', 'https://youtu.be/ze8eQpfs3_A?si=d3dQAi3UAbrGI0_U', '    \r\n  { \r\n    \"title\": \"Data Analysis End-to-End Project for RESUME Part 2\", \r\n    \"content\": { \r\n      \"introduction\": \"In Part 2 of our end-to-end data analysis project series, we will focus on the analysis, visualization, and presentation of findings. This phase is critical as it transforms raw data insights into actionable intelligence.\", \r\n      \"phases\": { \r\n        \"5. Data Analysis\": { \r\n          \"description\": \"In this phase, you will apply various analytical techniques to uncover patterns and insights in your data. This could involve statistical analysis, machine learning, or other methodologies depending on your project goals.\", \r\n          \"example\": \"For instance, you might use regression analysis to predict sales based on historical data.\" \r\n        }, \r\n        \"6. Data Visualization\": { \r\n          \"description\": \"Data visualization is essential for communicating your findings effectively. Use visual tools like charts, graphs, and dashboards to illustrate trends and insights derived from your analysis.\", \r\n          \"example\": \"You could create a dashboard in Tableau or Power BI that displays key metrics like sales performance, customer engagement, and product trends.\" \r\n        }, \r\n        \"7. Drawing Conclusions\": { \r\n          \"description\": \"After analysis and visualization, summarize the insights you’ve gained. This step involves interpreting the results in the context of the original problem and determining actionable next steps.\", \r\n          \"example\": \"If you discover that a particular customer segment has a high churn rate, you might recommend targeted retention strategies for that group.\" \r\n        }, \r\n        \"8. Presenting Findings\": { \r\n          \"description\": \"Finally, presenting your findings to stakeholders is crucial. This could involve preparing a formal report, creating a presentation, or hosting a meeting to discuss your results and recommendations.\", \r\n          \"example\": \"You could prepare a PowerPoint presentation summarizing your project methodology, key findings, and recommendations for the business.\" \r\n        } \r\n      }, \r\n      \"conclusion\": \"In Part 2, we have covered the advanced phases of data analysis, visualization, and presenting findings. These steps are essential for effectively communicating your insights and making data-driven decisions. Completing this end-to-end project showcases your skills to potential employers.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 22:02:21'),
(18, 103, 2, 'Data Analytics PowerBI Dashboard Project for Resume', 'https://youtu.be/jt0rcsCSs2s?si=lel9Syp1HH3ZFAKw', '    \r\n  { \r\n    \"title\": \"Data Analytics PowerBI Dashboard Project for Resume\", \r\n    \"content\": { \r\n      \"introduction\": \"Creating a Power BI dashboard is a powerful way to visualize data and gain insights. In this project, we will walk through the essential steps to build an interactive dashboard that can impress potential employers.\", \r\n      \"project_steps\": { \r\n        \"1. Define Objectives\": { \r\n          \"description\": \"Begin by clearly defining the objectives of your dashboard. What key metrics do you want to display? Who is your target audience? Understanding these factors will guide your design and data selection.\", \r\n          \"example\": \"For instance, if you are working for a retail company, you might want to visualize sales performance, customer demographics, and inventory levels.\" \r\n        }, \r\n        \"2. Data Collection\": { \r\n          \"description\": \"Collect the necessary data from various sources. This could include databases, Excel files, or online services. Ensure the data is clean and formatted for analysis.\", \r\n          \"example\": \"You might connect to a SQL database containing sales records or import an Excel sheet with customer information.\" \r\n        }, \r\n        \"3. Data Modeling\": { \r\n          \"description\": \"In Power BI, you need to create relationships between different data tables. This step is crucial for effective data analysis and reporting.\", \r\n          \"example\": \"If you have sales and customer tables, establish a relationship based on customer IDs.\" \r\n        }, \r\n        \"4. Designing the Dashboard\": { \r\n          \"description\": \"Use Power BI’s visualization tools to create interactive elements like charts, tables, and slicers. Design your dashboard for clarity and ease of use.\", \r\n          \"example\": \"Create a line chart to display sales trends over time and a pie chart to show sales distribution by product category.\" \r\n        }, \r\n        \"5. Adding Interactivity\": { \r\n          \"description\": \"Enhance user experience by adding interactive features such as filters and drill-down options. This allows users to explore data in more depth.\", \r\n          \"example\": \"Implement slicers for date ranges or product categories, enabling users to filter the data dynamically.\" \r\n        }, \r\n        \"6. Testing and Feedback\": { \r\n          \"description\": \"Before finalizing your dashboard, test it thoroughly. Gather feedback from users to ensure it meets their needs and expectations.\", \r\n          \"example\": \"Share your dashboard with a colleague and ask for their input on usability and functionality.\" \r\n        }, \r\n        \"7. Presentation and Sharing\": { \r\n          \"description\": \"Once the dashboard is complete, present it to stakeholders or include it in your portfolio. Highlight the insights derived from the data.\", \r\n          \"example\": \"Prepare a presentation that walks through your dashboard, explaining key metrics and insights to your audience.\" \r\n        } \r\n      }, \r\n      \"conclusion\": \"Building a Power BI dashboard project demonstrates your data analytics skills and ability to create meaningful visualizations. This project can be a standout feature on your resume, showcasing your proficiency in data analysis and visualization tools.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 22:02:21');
INSERT INTO `data_analytics_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(19, 103, 3, 'Machine Learning Fundamentals', 'https://youtu.be/5zEt1_Nkiio?si=7vL7_svQkoUsB5LG', '   {\r\n  \"title\": \"Machine Learning Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Machine learning is a subset of artificial intelligence that involves training algorithms to make predictions or decisions based on data. It is a key tool in data science for extracting insights from complex datasets.\",\r\n    \"types_of_machine_learning\": {\r\n      \"supervised_learning\": \"Supervised learning involves training models on labeled data to make predictions on new, unseen data. It is commonly used for classification and regression tasks.\",\r\n      \"unsupervised_learning\": \"Unsupervised learning involves training models on unlabeled data to discover patterns or relationships. It is often used for clustering and dimensionality reduction.\",\r\n      \"reinforcement_learning\": \"Reinforcement learning involves training models to make decisions in complex environments. It is commonly used in robotics and game playing.\",\r\n    },\r\n    \"machine_learning_algorithms\": {\r\n      \"linear_regression\": \"Linear regression is a supervised learning algorithm used for predicting continuous outcomes. It is a linear model that assumes a direct relationship between the input features and the target variable.\",\r\n      \"decision_trees\": \"Decision trees are a type of supervised learning algorithm used for classification and regression tasks. They work by recursively partitioning the data into smaller subsets based on the input features.\",\r\n      \"random_forests\": \"Random forests are an ensemble learning algorithm used for classification and regression tasks. They work by combining multiple decision trees to improve the accuracy and robustness of the model.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for classification tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for classification tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for classification tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in machine learning. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best machine learning algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyperparameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of a machine learning algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Machine learning is a powerful tool in data science for extracting insights from complex datasets. By understanding the fundamentals of machine learning, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(20, 103, 3, 'Deep Learning Fundamentals', 'https://youtu.be/FMSJXtwt6hE?si=bGYTNHXzvnJiBs9r', '   {\r\n  \"title\": \"Deep Learning Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Deep learning is a subset of machine learning that involves training artificial neural networks to make predictions or decisions based on data. It is a key tool in data science for extracting insights from complex datasets.\",\r\n    \"types_of_neural_networks\": {\r\n      \"feedforward_networks\": \"Feedforward networks are a type of neural network where the data flows only in one direction. They are commonly used for classification and regression tasks.\",\r\n      \"recurrent_neural_networks\": \"Recurrent neural networks are a type of neural network where the data flows in a loop. They are commonly used for sequence prediction tasks such as language modeling and speech recognition.\",\r\n      \"convolutional_neural_networks\": \"Convolutional neural networks are a type of neural network that uses convolutional and pooling layers to extract features from data. They are commonly used for image and video classification tasks.\", \r\n    },\r\n    \"deep_learning_algorithms\": {\r\n      \"backpropagation\": \"Backpropagation is a supervised learning algorithm used for training neural networks. It involves minimizing the error between the predicted output and the actual output.\",\r\n      \"stochastic_gradient_descent\": \"Stochastic gradient descent is an optimization algorithm used for training neural networks. It involves updating the model parameters based on the gradient of the loss function.\",\r\n      \"adam_optimizer\": \"Adam optimizer is an optimization algorithm used for training neural networks. It involves adapting the learning rate based on the magnitude of the gradient.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for classification tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for classification tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for classification tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in deep learning. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best deep learning algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyperparameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of a deep learning algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Deep learning is a powerful tool in data science for extracting insights from complex datasets. By understanding the fundamentals of deep learning, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(21, 103, 3, 'Natural Language Processing Fundamentals', 'https://youtu.be/lbvQmIs6OHw?si=1o-QYpRA60I-rwb_', '   {\r\n  \"title\": \"Natural Language Processing Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Natural language processing is a subset of artificial intelligence that involves training algorithms to process and understand human language. It is a key tool in data science for extracting insights from text data.\",\r\n    \"types_of_nlp\": {\r\n      \"text_classification\": \"Text classification is a type of NLP task that involves classifying text into predefined categories. It is commonly used for sentiment analysis and spam detection.\",\r\n      \"named_entity_recognition\": \"Named entity recognition is a type of NLP task that involves identifying and extracting named entities from text. It is commonly used for information extraction and question answering.\",\r\n      \"language_modeling\": \"Language modeling is a type of NLP task that involves predicting the next word in a sequence of text. It is commonly used for language translation and text generation.\",\r\n    },\r\n    \"nlp_algorithms\": {\r\n      \"rule_based_approach\": \"Rule-based approach is a type of NLP algorithm that involves using hand-coded rules to process and understand human language.\",\r\n      \"machine_learning_approach\": \"Machine learning approach is a type of NLP algorithm that involves training machine learning models on large datasets to process and understand human language.\",\r\n      \"deep_learning_approach\": \"Deep learning approach is a type of NLP algorithm that involves training deep neural networks on large datasets to process and understand human language.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for NLP tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for NLP tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for NLP tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in NLP. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best NLP algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyper parameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of an NLP algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Natural language processing is a powerful tool in data science for extracting insights from text data. By understanding the fundamentals of NLP, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(22, 103, 3, 'Big Data Fundamentals', 'https://youtu.be/GfoqC_7ZmuQ?si=sxZTYzTlKQeD3Q5U', '   {\r\n  \"title\": \"Big Data Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Big data refers to the large and complex datasets that are difficult to process using traditional data processing tools. It is a key tool in data science for extracting insights from large datasets.\",\r\n    \"types_of_big_data\": {\r\n      \"structured_data\": \"Structured data is a type of big data that is organized in a predefined format. It is commonly used for relational databases and data warehouses.\",\r\n      \"unstructured_data\": \"Unstructured data is a type of big data that is not organized in a predefined format. It is commonly used for text, image, and video data.\",\r\n      \"semi_structured_data\": \"Semi-structured data is a type of big data that is partially organized in a predefined format. It is commonly used for XML and JSON data.\",\r\n    },\r\n    \"big_data_technologies\": {\r\n      \"hadoop\": \"Hadoop is a big data technology that involves using a distributed computing framework to process large datasets.\",\r\n      \"spark\": \"Spark is a big data technology that involves using an in-memory computing framework to process large datasets.\",\r\n      \"no_sql_databases\": \"NoSQL databases are a type of big data technology that involves using non-relational databases to store and process large datasets.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for big data tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for big data tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for big data tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in big data. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best big data algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyperparameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of a big data algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Big data is a powerful tool in data science for extracting insights from large datasets. By understanding the fundamentals of big data, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21'),
(23, 103, 3, 'Cloud Computing Fundamentals', 'https://youtu.be/oHZ8udrINbM?si=3Fq0KpAopST3wpvC', '   {\r\n  \"title\": \"Cloud Computing Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Cloud computing refers to the delivery of computing services over the internet. It is a key tool in data science for extracting insights from large datasets.\",\r\n    \"types_of_cloud_computing\": {\r\n      \"public_cloud\": \"Public cloud is a type of cloud computing that involves using a third-party provider to deliver computing services over the internet.\",\r\n      \"private_cloud\": \"Private cloud is a type of cloud computing that involves using a private network to deliver computing services over the internet.\",\r\n      \"hybrid_cloud\": \"Hybrid cloud is a type of cloud computing that involves using a combination of public and private clouds to deliver computing services over the internet.\",\r\n    },\r\n    \"cloud_computing_technologies\": {\r\n      \"aws\": \"AWS is a cloud computing technology that involves using a suite of services to deliver computing services over the internet.\",\r\n      \"azure\": \"Azure is a cloud computing technology that involves using a suite of services to deliver computing services over the internet.\",\r\n      \"google_cloud\": \"Google Cloud is a cloud computing technology that involves using a suite of services to deliver computing services over the internet.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for cloud computing tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for cloud computing tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for cloud computing tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in cloud computing. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best cloud computing algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyperparameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of a cloud computing algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Cloud computing is a powerful tool in data science for extracting insights from large datasets. By understanding the fundamentals of cloud computing, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 22:02:21');

-- --------------------------------------------------------

--
-- Table structure for table `data_analytics_qna`
--

CREATE TABLE `data_analytics_qna` (
  `id` int(11) NOT NULL,
  `questions` varchar(255) NOT NULL,
  `option_1` varchar(255) NOT NULL,
  `option_2` varchar(255) NOT NULL,
  `option_3` varchar(255) NOT NULL,
  `option_4` varchar(255) NOT NULL,
  `correct_option` varchar(255) NOT NULL,
  `level` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `data_analytics_qna`
--

INSERT INTO `data_analytics_qna` (`id`, `questions`, `option_1`, `option_2`, `option_3`, `option_4`, `correct_option`, `level`) VALUES
(1, 'What is the primary purpose of Data Analytics?', 'To create large databases', 'To find patterns and insights in data', 'To perform complex mathematical operations', 'To store data in the cloud', 'To find patterns and insights in data', 1),
(2, 'Which of the following is NOT a typical phase in Data Analytics?', 'Data Collection', 'Data Cleaning', 'Data Analysis', 'Data Filing', 'Data Filing', 1),
(3, 'In Data Analytics, what does ETL stand for', 'Evaluate, Test, Load', 'Extract, Transform, Load', 'Estimate, Transform, List', 'Extract, Transfer, Load', 'Evaluate, Test, Load', 1),
(4, 'What is the significance of data visualization in Data Analytics?', 'It is used to store large amounts of data', 'It helps in understanding data by representing it graphically', 'It is used to speed up data processing', 'It removes duplicates from the dataset', 'It helps in understanding data by representing it graphically', 1),
(5, 'Which of the following is a common challenge in Data Analytics?', 'Lack of tools for analysis', 'Unlimited resources for data storage', 'Poor data quality and inconsistencies', 'Absence of cloud storage', 'Poor data quality and inconsistencies', 1),
(6, 'What is the main role of a Data Analyst?', 'To interpret data and provide insights to help decision-making', 'To manage hardware resources', 'To configure databases', 'To develop websites and applications', 'To interpret data and provide insights to help decision-making', 1),
(7, 'Which of the following best defines \'Predictive Analytics\'?', 'Analyzing historical data to make predictions about future events', 'Cleaning data to remove errors and outliers', 'Visualizing data trends over time', 'Summarizing large datasets into reports', 'Analyzing historical data to make predictions about future events', 1);

-- --------------------------------------------------------

--
-- Table structure for table `excel_course`
--

CREATE TABLE `excel_course` (
  `id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `level` int(11) NOT NULL,
  `topic_name` varchar(400) NOT NULL,
  `video_url` varchar(280) NOT NULL,
  `articles` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `created_at` varchar(240) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `excel_course`
--

INSERT INTO `excel_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(1, 102, 1, 'Excel Introduction', 'https://www.youtube.com/watch?v=1cRJWm2YH94', '  {\"title\": \"Excel Introduction\", \"content\": {\"introduction\": \"Learn the basics of Excel.\", \"features\": \"Explore features and interface.\", \"conclusion\": \"This is the starting point for Excel.\"}}  ', '2024-09-28 08:00:00'),
(2, 102, 1, 'Excel Functions Overview', 'https://www.youtube.com/watch?v=E-JG1-e9tDs', '  {\"title\": \"Excel Functions Overview\", \"content\": {\"introduction\": \"Get to know Excel functions.\", \"examples\": \"Review commonly used functions.\", \"conclusion\": \"Functions make data manipulation easier.\"}}  ', '2024-09-28 08:05:00'),
(3, 102, 1, 'Data Entry in Excel', 'https://www.youtube.com/watch?v=l1LB1RtZn5I', '  {\"title\": \"Data Entry in Excel\", \"content\": {\"introduction\": \"Learn how to enter data effectively.\", \"tips\": \"Tips for accurate data entry.\", \"conclusion\": \"Data entry is fundamental in Excel.\"}}  ', '2024-09-28 08:10:00'),
(4, 102, 1, 'Excel Formulas', 'https://www.youtube.com/watch?v=YkHp_vxWkks', '  {\"title\": \"Excel Formulas\", \"content\": {\"introduction\": \"Introduction to Excel formulas.\", \"usage\": \"How to use basic formulas.\", \"conclusion\": \"Formulas automate calculations.\"}}  ', '2024-09-28 08:15:00'),
(5, 102, 1, 'Formatting Cells', 'https://www.youtube.com/watch?v=FZ5NnEjh3R0', '  {\"title\": \"Formatting Cells\", \"content\": {\"introduction\": \"Learn cell formatting options.\", \"styles\": \"How to apply styles.\", \"conclusion\": \"Formatting improves readability.\"}}  ', '2024-09-28 08:20:00'),
(6, 102, 1, 'Creating Charts', 'https://www.youtube.com/watch?v=TkXGxLwC79s', '  {\"title\": \"Creating Charts\", \"content\": {\"introduction\": \"Visualize data with charts.\", \"types\": \"Explore different chart types.\", \"conclusion\": \"Charts enhance data presentation.\"}}  ', '2024-09-28 08:25:00'),
(7, 102, 1, 'Sorting Data', 'https://www.youtube.com/watch?v=BZptvTiWgGA', '  {\"title\": \"Sorting Data\", \"content\": {\"introduction\": \"Learn to sort data in Excel.\", \"methods\": \"Different sorting methods.\", \"conclusion\": \"Sorting helps organize data.\"}}  ', '2024-09-28 08:30:00'),
(8, 102, 1, 'Filtering Data', 'https://www.youtube.com/watch?v=B9PL5_VAP9Y', '  {\"title\": \"Filtering Data\", \"content\": {\"introduction\": \"Filter data for analysis.\", \"techniques\": \"Different filtering techniques.\", \"conclusion\": \"Filtering narrows down data.\"}}  ', '2024-09-28 08:35:00'),
(9, 102, 1, 'Basic Data Analysis', 'https://www.youtube.com/watch?v=5yHhwwAEMwE', '  {\"title\": \"Basic Data Analysis\", \"content\": {\"introduction\": \"Introduction to data analysis in Excel.\", \"tools\": \"Tools for data analysis.\", \"conclusion\": \"Data analysis is essential for insights.\"}}  ', '2024-09-28 08:40:00'),
(10, 102, 1, 'Excel Shortcuts', 'https://www.youtube.com/watch?v=QFxxK5FHG0A', '  {\"title\": \"Excel Shortcuts\", \"content\": {\"introduction\": \"Learn useful Excel shortcuts.\", \"benefits\": \"Speed up your workflow.\", \"conclusion\": \"Shortcuts enhance productivity.\"}}  ', '2024-09-28 08:45:00'),
(11, 102, 2, 'Advanced Formulas', 'https://www.youtube.com/watch?v=0G-q4P7t-m8', '  {\"title\": \"Advanced Formulas\", \"content\": {\"introduction\": \"Explore advanced formulas in Excel.\", \"nested_if\": \"Learn about nested IF statements.\", \"conclusion\": \"Advanced formulas provide powerful capabilities.\"}}  ', '2024-09-28 08:50:00'),
(12, 102, 2, 'Pivot Tables', 'https://www.youtube.com/watch?v=VbdIKJ8tEd8', '  {\"title\": \"Pivot Tables\", \"content\": {\"introduction\": \"Learn how to create pivot tables.\", \"data_summary\": \"Summarize data effectively.\", \"conclusion\": \"Pivot tables are essential for data analysis.\"}}  ', '2024-09-28 08:55:00'),
(13, 102, 2, 'Data Validation', 'https://www.youtube.com/watch?v=q8xECtzp8X0', '  {\"title\": \"Data Validation\", \"content\": {\"introduction\": \"Ensure data accuracy with validation.\", \"setup\": \"How to set up validation rules.\", \"conclusion\": \"Data validation helps maintain integrity.\"}}  ', '2024-09-28 09:00:00'),
(14, 102, 2, 'Conditional Formatting', 'https://www.youtube.com/watch?v=FPj6jKZn1Ow', '  {\"title\": \"Conditional Formatting\", \"content\": {\"introduction\": \"Highlight data based on conditions.\", \"usage\": \"How to apply conditional formatting.\", \"conclusion\": \"Conditional formatting makes data insights clearer.\"}}  ', '2024-09-28 09:05:00'),
(15, 102, 2, 'Using Macros', 'https://www.youtube.com/watch?v=26gZ38yAhj0', '  {\"title\": \"Using Macros\", \"content\": {\"introduction\": \"Automate repetitive tasks with macros.\", \"recording\": \"How to record and use macros.\", \"conclusion\": \"Macros save time and effort.\"}}  ', '2024-09-28 09:10:00'),
(16, 102, 2, 'Data Consolidation', 'https://www.youtube.com/watch?v=j1lqBZ5MF9s', '  {\"title\": \"Data Consolidation\", \"content\": {\"introduction\": \"Consolidate data from multiple sources.\", \"methods\": \"Different methods for data consolidation.\", \"conclusion\": \"Consolidation provides a comprehensive view.\"}}  ', '2024-09-28 09:15:00'),
(17, 102, 2, 'Using VLOOKUP', 'https://www.youtube.com/watch?v=7RZCOQQ1wG8', '  {\"title\": \"Using VLOOKUP\", \"content\": {\"introduction\": \"Learn how to use VLOOKUP function.\", \"applications\": \"Where to apply VLOOKUP.\", \"conclusion\": \"VLOOKUP simplifies data retrieval.\"}}  ', '2024-09-28 09:20:00'),
(18, 102, 2, 'Advanced Charting Techniques', 'https://www.youtube.com/watch?v=o8-OBN6TFxo', '  {\"title\": \"Advanced Charting Techniques\", \"content\": {\"introduction\": \"Explore advanced charting options.\", \"customization\": \"How to customize your charts.\", \"conclusion\": \"Advanced charts provide better insights.\"}}  ', '2024-09-28 09:25:00'),
(19, 102, 2, 'Working with Text', 'https://www.youtube.com/watch?v=ZtdYO3Yq_Pw', '  {\"title\": \"Working with Text\", \"content\": {\"introduction\": \"Learn to manipulate text data.\", \"functions\": \"Useful text functions in Excel.\", \"conclusion\": \"Text manipulation is crucial for data analysis.\"}}  ', '2024-09-28 09:30:00'),
(20, 102, 2, 'Using IFERROR', 'https://www.youtube.com/watch?v=nz7YDQvEZos', '  {\"title\": \"Using IFERROR\", \"content\": {\"introduction\": \"Handle errors in formulas.\", \"usage\": \"How to apply IFERROR function.\", \"conclusion\": \"IFERROR improves formula reliability.\"}}  ', '2024-09-28 09:35:00'),
(21, 102, 3, 'Power Query Introduction', 'https://www.youtube.com/watch?v=s4B2tC9R80A', '  {\"title\": \"Power Query Introduction\", \"content\": {\"introduction\": \"Learn about Power Query for data preparation.\", \"features\": \"Overview of features.\", \"conclusion\": \"Power Query simplifies data management.\"}}  ', '2024-09-28 09:40:00'),
(22, 102, 3, 'Data Modeling', 'https://www.youtube.com/watch?v=wnr4FWb-2lI', '  {\"title\": \"Data Modeling\", \"content\": {\"introduction\": \"Introduction to data modeling in Excel.\", \"concepts\": \"Key concepts to understand.\", \"conclusion\": \"Effective modeling leads to better analysis.\"}}  ', '2024-09-28 09:45:00'),
(23, 102, 3, 'Power Pivot Basics', 'https://www.youtube.com/watch?v=rrzXY52AYx0', '  {\"title\": \"Power Pivot Basics\", \"content\": {\"introduction\": \"Learn how to use Power Pivot for data analysis.\", \"setup\": \"How to set up Power Pivot.\", \"conclusion\": \"Power Pivot enhances data capabilities.\"}}  ', '2024-09-28 09:50:00'),
(24, 102, 3, 'Creating Dashboards', 'https://www.youtube.com/watch?v=4e8b8vEAwL8', '  {\"title\": \"Creating Dashboards\", \"content\": {\"introduction\": \"Learn how to create informative dashboards.\", \"components\": \"Key components of dashboards.\", \"conclusion\": \"Dashboards provide visual insights.\"}}  ', '2024-09-28 09:55:00'),
(25, 102, 3, 'Excel for Data Analysis', 'https://www.youtube.com/watch?v=3g2AaQn5voo', '  {\"title\": \"Excel for Data Analysis\", \"content\": {\"introduction\": \"Using Excel for in-depth data analysis.\", \"techniques\": \"Techniques for effective analysis.\", \"conclusion\": \"Excel is a powerful data analysis tool.\"}}  ', '2024-09-28 10:00:00'),
(26, 102, 3, 'Automating Reports', 'https://www.youtube.com/watch?v=3kn5M9QZu7Y', '  {\"title\": \"Automating Reports\", \"content\": {\"introduction\": \"Learn to automate report generation.\", \"steps\": \"Steps to automate reports in Excel.\", \"conclusion\": \"Automation saves time and effort.\"}}  ', '2024-09-28 10:05:00'),
(27, 102, 3, 'Excel and VBA', 'https://www.youtube.com/watch?v=e1teERcbxyI', '  {\"title\": \"Excel and VBA\", \"content\": {\"introduction\": \"Introduction to VBA in Excel.\", \"applications\": \"How to use VBA for automation.\", \"conclusion\": \"VBA extends Excel functionality.\"}}  ', '2024-09-28 10:10:00'),
(28, 102, 3, 'Using Solver', 'https://www.youtube.com/watch?v=kgeUBXE3YgA', '  {\"title\": \"Using Solver\", \"content\": {\"introduction\": \"Learn how to use Solver for optimization.\", \"setup\": \"How to set up Solver in Excel.\", \"conclusion\": \"Solver helps find optimal solutions.\"}}  ', '2024-09-28 10:15:00'),
(29, 102, 3, 'Protecting Excel Files', 'https://www.youtube.com/watch?v=m7w2B_sGpR8', '  {\"title\": \"Protecting Excel Files\", \"content\": {\"introduction\": \"Learn to protect your Excel files.\", \"methods\": \"Different protection methods.\", \"conclusion\": \"File protection ensures data security.\"}}  ', '2024-09-28 10:20:00'),
(30, 102, 3, 'Sharing and Collaborating', 'https://www.youtube.com/watch?v=WmR5zZTRtFU', '  {\"title\": \"Sharing and Collaborating\", \"content\": {\"introduction\": \"Collaborate with others on Excel files.\", \"tools\": \"Tools for sharing and collaboration.\", \"conclusion\": \"Collaboration enhances productivity.\"}}  ', '2024-09-28 10:25:00');

-- --------------------------------------------------------

--
-- Table structure for table `excel_qna`
--

CREATE TABLE `excel_qna` (
  `id` int(11) NOT NULL,
  `questions` varchar(255) NOT NULL,
  `option_1` varchar(255) NOT NULL,
  `option_2` varchar(255) NOT NULL,
  `option_3` varchar(255) NOT NULL,
  `option_4` varchar(255) NOT NULL,
  `correct_option` varchar(255) NOT NULL,
  `level` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Table structure for table `level`
--

CREATE TABLE `level` (
  `C_ID` int(11) NOT NULL,
  `levels` int(11) NOT NULL,
  `beginner` varchar(400) NOT NULL,
  `intermediate` varchar(400) NOT NULL,
  `advance` varchar(400) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `level`
--

INSERT INTO `level` (`C_ID`, `levels`, `beginner`, `intermediate`, `advance`) VALUES
(101, 3, '\"Understanding syntax\",\"Variables and data types\",\"Basic operators\",\"Control flow (if statements)\",\"Functions\"', '\"Object-oriented programming\",\"Error handling and exceptions\",\"File I/O\",\"Modules and packages\",\"Basic data structures (lists, dictionaries)\"', '\"Decorators and generators\",\"Concurrency and parallelism\",\"Advanced data structures (sets, tuples)\",\"Testing and debugging\",\"Frameworks (Django, Flask)\"'),
(102, 3, 'beginner skills', 'intermediate skills', 'advance skills'),
(103, 2, 'beginner skills', '', 'advance skills');

-- --------------------------------------------------------

--
-- Table structure for table `profiles`
--

CREATE TABLE `profiles` (
  `id` int(11) NOT NULL,
  `email_id` varchar(280) NOT NULL,
  `course_title` varchar(240) NOT NULL,
  `level` varchar(240) NOT NULL,
  `chapters_completed` int(11) NOT NULL,
  `last_update_date` varchar(250) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Table structure for table `python_course`
--

CREATE TABLE `python_course` (
  `id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `level` int(11) NOT NULL,
  `topic_name` varchar(400) NOT NULL,
  `video_url` varchar(280) NOT NULL,
  `articles` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `created_at` varchar(240) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `python_course`
--

INSERT INTO `python_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(1, 101, 1, 'Introduction to Python', 'https://www.youtube.com/watch?v=W8KRzm6V32Q', '[{\r\n  \"title\": \"Introduction to Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Python is a high-level, interpreted programming language.\",\r\n    \"features\": \"It is known for its easy readability and simplicity.\",\r\n    \"usage\": \"Python is widely used in web development, data analysis, artificial intelligence, and more.\",\r\n    \"conclusion\": \"Learning Python can open doors to many programming opportunities.\"\r\n  }\r\n}]', '2024-09-28 03:45:00'),
(2, 101, 1, 'Downloading and Installing Python', 'https://www.youtube.com/watch?v=La1BdF_sunw', '[{\r\n  \"title\": \"Downloading and Installing Python\",\r\n  \"content\": {\r\n    \"steps\": {\r\n      \"step_1\": \"Go to the official Python website.\",\r\n      \"step_2\": \"Choose the version suitable for your OS.\",\r\n      \"step_3\": \"Run the installer and follow the instructions.\"\r\n    },\r\n    \"conclusion\": \"After installation, you are ready to start coding in Python.\"\r\n  }\r\n}]', '2024-09-28 03:50:00'),
(3, 101, 1, 'Basic Syntax', 'https://www.youtube.com/watch?v=7X4k9gFHTB8', '[{\r\n  \"title\": \"Basic Syntax in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Python syntax is known for its readability.\",\r\n    \"key_elements\": {\r\n      \"print_statements\": \"Use print() to output data.\",\r\n      \"comments\": \"Use # for single line comments.\"\r\n    },\r\n    \"conclusion\": \"Understanding syntax is crucial for writing clean code.\"\r\n  }\r\n}]', '2024-09-28 03:55:00'),
(4, 101, 1, 'Variables and Data Types', 'https://www.youtube.com/watch?v=1UzSDMJRh8c', '[{\r\n  \"title\": \"Variables and Data Types\",\r\n  \"content\": {\r\n    \"introduction\": \"Variables are used to store information.\",\r\n    \"data_types\": {\r\n      \"int\": \"Integer data type.\",\r\n      \"float\": \"Floating-point data type.\",\r\n      \"str\": \"String data type.\"\r\n    },\r\n    \"conclusion\": \"Choosing the right data type is important for efficient coding.\"\r\n  }\r\n}]', '2024-09-28 04:00:00'),
(5, 101, 1, 'Operators in Python', 'https://www.youtube.com/watch?v=3u8H7I43ZV8', '[{\r\n  \"title\": \"Operators in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Operators perform operations on variables and values.\",\r\n    \"types\": {\r\n      \"arithmetic\": \"+ , - , * , /\",\r\n      \"comparison\": \"== , != , > , <\"\r\n    },\r\n    \"conclusion\": \"Understanding operators is essential for building logic in your programs.\"\r\n  }\r\n}]', '2024-09-28 04:05:00'),
(6, 101, 1, 'Control Flow Statements', 'https://www.youtube.com/watch?v=whW0qf0qL5Q', '[{\r\n  \"title\": \"Control Flow Statements\",\r\n  \"content\": {\r\n    \"introduction\": \"Control flow statements determine the flow of execution.\",\r\n    \"if_statements\": \"if, elif, else statements handle decision making.\",\r\n    \"loops\": {\r\n      \"for_loops\": \"for loop iterates over a sequence.\",\r\n      \"while_loops\": \"while loop executes as long as a condition is true.\"\r\n    },\r\n    \"conclusion\": \"Mastering control flow is critical for logical programming.\"\r\n  }\r\n}]', '2024-09-28 04:10:00'),
(7, 101, 1, 'Functions in Python', 'https://www.youtube.com/watch?v=_uQrJ0TkLu', '[{\r\n  \"title\": \"Functions in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Functions are blocks of reusable code.\",\r\n    \"defining_functions\": \"Use def keyword to define a function.\",\r\n    \"calling_functions\": \"Call a function using its name followed by parentheses.\",\r\n    \"conclusion\": \"Functions help organize code and make it modular.\"\r\n  }\r\n}]', '2024-09-28 04:15:00'),
(8, 101, 1, 'Lists in Python', 'https://www.youtube.com/watch?v=ohCDWZgNIU0', '[{\r\n  \"title\": \"Lists in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Lists store multiple items in a single variable.\",\r\n    \"creating_lists\": \"Use square brackets to create a list.\",\r\n    \"accessing_elements\": \"Access elements using their index.\",\r\n    \"conclusion\": \"Lists are versatile and commonly used data structures.\"\r\n  }\r\n}]', '2024-09-28 04:20:00'),
(9, 101, 1, 'Dictionaries in Python', 'https://www.youtube.com/watch?v=daefaLgNkw0', '[{\r\n  \"title\": \"Dictionaries in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Dictionaries are used to store data values in key:value pairs.\",\r\n    \"creating_dictionaries\": \"Use curly braces to create a dictionary.\",\r\n    \"accessing_values\": \"Access values using their corresponding keys.\",\r\n    \"conclusion\": \"Dictionaries are useful for structured data storage.\"\r\n  }\r\n}]', '2024-09-28 04:25:00'),
(10, 101, 1, 'Tuples in Python', 'https://www.youtube.com/watch?v=W8KRzm6V32Q', '[{\r\n  \"title\": \"Tuples in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Tuples are similar to lists but are immutable.\",\r\n    \"creating_tuples\": \"Use parentheses to create a tuple.\",\r\n    \"conclusion\": \"Tuples are used when you want to ensure data cannot be changed.\"\r\n  }\r\n}]', '2024-09-28 04:30:00'),
(11, 101, 1, 'Set in Python', 'https://www.youtube.com/watch?v=sBvaPopWOmQ', '[{\r\n  \"title\": \"Set in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Sets are collections of unique elements.\",\r\n    \"creating_sets\": \"Use curly braces or the set() function.\",\r\n    \"properties\": \"Sets do not allow duplicates and are unordered.\",\r\n    \"conclusion\": \"Sets are useful for membership testing and eliminating duplicates.\"\r\n  }\r\n}]', '2024-09-28 04:35:00'),
(12, 101, 1, 'String Methods', 'https://www.youtube.com/watch?v=6pK6U6z77b8', '[{\r\n  \"title\": \"String Methods\",\r\n  \"content\": {\r\n    \"introduction\": \"Python provides many built-in string methods.\",\r\n    \"examples\": {\r\n      \"upper\": \"Converts a string to uppercase.\",\r\n      \"lower\": \"Converts a string to lowercase.\",\r\n      \"strip\": \"Removes whitespace from the beginning and end.\"\r\n    },\r\n    \"conclusion\": \"Understanding string methods is essential for text manipulation.\"\r\n  }\r\n}]', '2024-09-28 04:40:00'),
(13, 101, 1, 'File Handling', 'https://www.youtube.com/watch?v=Uh2ebFW8gMI', '[{\r\n  \"title\": \"File Handling\",\r\n  \"content\": {\r\n    \"introduction\": \"Python allows you to read and write files.\",\r\n    \"methods\": {\r\n      \"open\": \"Open a file using open().\",\r\n      \"read\": \"Read contents using read() or readlines().\",\r\n      \"write\": \"Write to a file using write().\"\r\n    },\r\n    \"conclusion\": \"File handling is important for data persistence.\"\r\n  }\r\n}]', '2024-09-28 04:45:00'),
(14, 101, 1, 'Error Handling', 'https://www.youtube.com/watch?v=NIWwJbo-9_8', '[{\r\n  \"title\": \"Error Handling\",\r\n  \"content\": {\r\n    \"introduction\": \"Error handling is crucial for robust applications.\",\r\n    \"try_except\": \"Use try and except to handle exceptions.\",\r\n    \"finally\": \"The finally block executes code regardless of an exception.\",\r\n    \"conclusion\": \"Proper error handling improves program reliability.\"\r\n  }\r\n}]', '2024-09-28 04:50:00'),
(15, 101, 1, 'Python Modules', 'https://www.youtube.com/watch?v=sugvnHA7ElY', '[{\r\n  \"title\": \"Python Modules\",\r\n  \"content\": {\r\n    \"introduction\": \"Modules are Python files that contain functions and variables.\",\r\n    \"importing_modules\": \"Use import statement to include a module.\",\r\n    \"creating_modules\": \"Create your own module by saving functions in a .py file.\",\r\n    \"conclusion\": \"Modules help organize code and promote reuse.\"\r\n  }\r\n}]', '2024-09-28 04:55:00'),
(16, 101, 1, 'Introduction to OOP', 'https://www.youtube.com/watch?v=JeznW_7DlB0', '[{\r\n  \"title\": \"Introduction to OOP\",\r\n  \"content\": {\r\n    \"introduction\": \"Object-Oriented Programming (OOP) is a programming paradigm.\",\r\n    \"key_concepts\": {\r\n      \"classes\": \"Blueprints for creating objects.\",\r\n      \"objects\": \"Instances of classes.\"\r\n    },\r\n    \"conclusion\": \"OOP helps structure code and enhance reusability.\"\r\n  }\r\n}]', '2024-09-28 05:00:00'),
(17, 101, 1, 'Classes and Objects', 'https://www.youtube.com/watch?v=apACNr7DC_s', '[{\r\n  \"title\": \"Classes and Objects\",\r\n  \"content\": {\r\n    \"introduction\": \"Classes define the properties and behaviors of objects.\",\r\n    \"creating_classes\": \"Use class keyword to define a class.\",\r\n    \"instantiating_objects\": \"Create objects using the class name followed by parentheses.\",\r\n    \"conclusion\": \"Understanding classes and objects is fundamental to OOP.\"\r\n  }\r\n}]', '2024-09-28 05:05:00'),
(18, 101, 1, 'Inheritance', 'https://www.youtube.com/watch?v=RSl87lqOXDE', '[{\r\n  \"title\": \"Inheritance\",\r\n  \"content\": {\r\n    \"introduction\": \"Inheritance allows one class to inherit the attributes and methods of another class.\",\r\n    \"benefits\": \"Promotes code reuse and reduces redundancy.\",\r\n    \"types\": \"Single, Multiple, and Multilevel inheritance.\",\r\n    \"conclusion\": \"Inheritance is a key feature of OOP for extending functionality.\"\r\n  }\r\n}]', '2024-09-28 05:10:00'),
(19, 101, 1, 'Polymorphism', 'https://www.youtube.com/watch?v=JZ3JaH0Y3Jg', '[{\r\n  \"title\": \"Polymorphism\",\r\n  \"content\": {\r\n    \"introduction\": \"Polymorphism allows methods to do different things based on the object.\\r\\n\", \r\n    \"example\": \"The same function name can be used for different types.\",\r\n    \"conclusion\": \"Polymorphism increases flexibility and scalability in your programs.\"\r\n  }\r\n}]', '2024-09-28 05:15:00'),
(20, 101, 1, 'Encapsulation', 'https://www.youtube.com/watch?v=1sZTFvFRP0c', '[{\r\n  \"title\": \"Encapsulation\",\r\n  \"content\": {\r\n    \"introduction\": \"Encapsulation restricts access to certain components of an object.\",\r\n    \"methods\": \"Use private and public access modifiers to define access levels.\",\r\n    \"benefits\": \"Enhances security and hides the internal state of an object.\",\r\n    \"conclusion\": \"Encapsulation is a fundamental concept in OOP that helps maintain data integrity.\"\r\n  }\r\n}]', '2024-09-28 05:20:00'),
(21, 101, 1, 'Data Structures in Python', 'https://www.youtube.com/watch?v=4tA-1YxCBOo', '[{\r\n  \"title\": \"Data Structures in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Python has several built-in data structures.\",\r\n    \"types\": {\r\n      \"lists\": \"Ordered and mutable collection.\",\r\n      \"tuples\": \"Ordered and immutable collection.\",\r\n      \"dictionaries\": \"Key-value pairs, unordered and mutable.\",\r\n      \"sets\": \"Unordered collection of unique elements.\"\r\n    },\r\n    \"conclusion\": \"Choosing the right data structure is crucial for efficiency.\"\r\n  }\r\n}]', '2024-09-28 05:25:00'),
(22, 101, 1, 'List Comprehensions', 'https://www.youtube.com/watch?v=3dt4oGRwHu0', '[{\r\n  \"title\": \"List Comprehensions\",\r\n  \"content\": {\r\n    \"introduction\": \"List comprehensions provide a concise way to create lists.\",\r\n    \"syntax\": \"[expression for item in iterable if condition]\",\r\n    \"example\": \"Squares of numbers: [x**2 for x in range(10)]\",\r\n    \"conclusion\": \"List comprehensions are more readable and faster than traditional loops.\"\r\n  }\r\n}]', '2024-09-28 05:30:00'),
(23, 101, 1, 'Lambda Functions', 'https://www.youtube.com/watch?v=hYzwCsKGRz8', '[{\r\n  \"title\": \"Lambda Functions\",\r\n  \"content\": {\r\n    \"introduction\": \"Lambda functions are small anonymous functions.\",\r\n    \"syntax\": \"lambda arguments: expression\",\r\n    \"example\": \"Square a number: lambda x: x**2\",\r\n    \"conclusion\": \"Useful for short operations without formal function definition.\"\r\n  }\r\n}]', '2024-09-28 05:35:00'),
(24, 101, 1, 'Decorators', 'https://www.youtube.com/watch?v=FsAPt_9BfRg', '[{\r\n  \"title\": \"Decorators\",\r\n  \"content\": {\r\n    \"introduction\": \"Decorators allow you to modify functions or methods.\\r\\n\", \r\n    \"syntax\": \"@decorator_name\\r\\nfunction function_name():\",\r\n    \"example\": \"@my_decorator def my_function():\",\r\n    \"conclusion\": \"Decorators are a powerful tool for enhancing functionality without changing the original code.\"\r\n  }\r\n}]', '2024-09-28 05:40:00'),
(25, 101, 1, 'Generators', 'https://www.youtube.com/watch?v=bD05uGo_sVI', '[{\r\n  \"title\": \"Generators\",\r\n  \"content\": {\r\n    \"introduction\": \"Generators provide a way to create iterators in a simple way.\",\r\n    \"yield_keyword\": \"Use yield to return values without losing function state.\",\r\n    \"example\": \"def my_generator(): yield value\",\r\n    \"conclusion\": \"Generators are memory efficient and allow lazy evaluation.\"\r\n  }\r\n}]', '2024-09-28 05:45:00'),
(26, 101, 1, 'Regular Expressions', 'https://www.youtube.com/watch?v=K8V7cQH1A0Q', '[{\r\n  \"title\": \"Regular Expressions\",\r\n  \"content\": {\r\n    \"introduction\": \"Regular expressions are used for pattern matching in strings.\",\r\n    \"re_module\": \"Use the re module to work with regex in Python.\",\r\n    \"common_methods\": {\r\n      \"search\": \"Find a pattern in a string.\",\r\n      \"match\": \"Check if the pattern matches at the start.\",\r\n      \"findall\": \"Find all occurrences of a pattern.\"\r\n    },\r\n    \"conclusion\": \"Regex is a powerful tool for string manipulation and searching.\"\r\n  }\r\n}]', '2024-09-28 05:50:00'),
(27, 101, 1, 'Understanding Scope', 'https://www.youtube.com/watch?v=9u9iTg5nUEY', '[{\r\n  \"title\": \"Understanding Scope\",\r\n  \"content\": {\r\n    \"introduction\": \"Scope defines the visibility of variables in Python.\",\r\n    \"types\": {\r\n      \"local\": \"Variables defined in a function.\",\r\n      \"global\": \"Variables defined at the top level of a script.\",\r\n      \"nonlocal\": \"Variables in a nested function.\"\r\n    },\r\n    \"conclusion\": \"Understanding scope is essential for writing effective Python code.\"\r\n  }\r\n}]', '2024-09-28 05:55:00'),
(28, 101, 1, 'Working with JSON', 'https://www.youtube.com/watch?v=9N6a-VLBa2I', '[{\r\n  \"title\": \"Working with JSON\",\r\n  \"content\": {\r\n    \"introduction\": \"JSON (JavaScript Object Notation) is a lightweight data interchange format.\",\r\n    \"json_module\": \"Use json module to parse JSON data in Python.\",\r\n    \"common_methods\": {\r\n      \"load\": \"Load JSON from a file.\",\r\n      \"loads\": \"Load JSON from a string.\",\r\n      \"dump\": \"Write JSON to a file.\",\r\n      \"dumps\": \"Convert Python objects to JSON strings.\"\r\n    },\r\n    \"conclusion\": \"JSON is widely used for data exchange in web applications.\"\r\n  }\r\n}]', '2024-09-28 06:00:00'),
(29, 101, 1, 'Unit Testing', 'https://www.youtube.com/watch?v=6tNS--WetLI', '[{\r\n  \"title\": \"Unit Testing\",\r\n  \"content\": {\r\n    \"introduction\": \"Unit testing is essential for ensuring code reliability.\",\r\n    \"unittest_module\": \"Pythons built-in unittest module helps in creating tests.\",\r\n    \"writing_tests\": \"Define test cases using the TestCase class.\",\r\n    \"conclusion\": \"Testing helps catch bugs early and improve code quality.\"\r\n  }\r\n}]', '2024-09-28 06:05:00'),
(30, 101, 1, 'Debugging Techniques', 'https://www.youtube.com/watch?v=OJ7H4B2k7F0', '[{\r\n  \"title\": \"Debugging Techniques\",\r\n  \"content\": {\r\n    \"introduction\": \"Debugging is the process of finding and fixing bugs in code.\",\r\n    \"techniques\": {\r\n      \"print_statements\": \"Using print() to track variable values.\",\r\n      \"pdb\": \"Pythons built-in debugger for step-by-step execution.\"\r\n    },\r\n    \"conclusion\": \"Effective debugging is key to developing reliable software.\"\r\n  }\r\n}]', '2024-09-28 06:10:00'),
(31, 101, 1, 'File Handling in Python', 'https://www.youtube.com/watch?v=Uh2ebFW8gM0', '[{\r\n  \"title\": \"File Handling in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"File handling is crucial for reading and writing files.\",\r\n    \"methods\": {\r\n      \"open\": \"Open a file using open() function.\",\r\n      \"read\": \"Read the contents of a file.\",\r\n      \"write\": \"Write data to a file.\",\r\n      \"close\": \"Close the file after operations.\"\r\n    },\r\n    \"conclusion\": \"Proper file handling ensures data integrity and resource management.\"\r\n  }\r\n}]', '2024-09-28 06:15:00'),
(32, 101, 1, 'Exception Handling', 'https://www.youtube.com/watch?v=NIWwJbo-9_8', '[{\r\n  \"title\": \"Exception Handling\",\r\n  \"content\": {\r\n    \"introduction\": \"Exceptions are events that disrupt the normal flow of execution.\",\r\n    \"try_except\": \"Use try and except blocks to handle exceptions.\",\r\n    \"finally_block\": \"Code in the finally block always executes.\",\r\n    \"conclusion\": \"Exception handling is vital for building robust applications.\"\r\n  }\r\n}]', '2024-09-28 06:20:00'),
(33, 101, 1, 'Virtual Environments', 'https://www.youtube.com/watch?v=K7V2tF08ZsE', '[{\r\n  \"title\": \"Virtual Environments\",\r\n  \"content\": {\r\n    \"introduction\": \"Virtual environments help manage dependencies for different projects.\",\r\n    \"creation\": \"Use venv module to create virtual environments.\",\r\n    \"activation\": \"Activate the environment using source or activate command.\",\r\n    \"conclusion\": \"Virtual environments prevent dependency conflicts.\"\r\n  }\r\n}]', '2024-09-28 06:25:00'),
(34, 101, 1, 'Working with CSV Files', 'https://www.youtube.com/watch?v=9kx5N2cT5PE', '[{\r\n  \"title\": \"Working with CSV Files\",\r\n  \"content\": {\r\n    \"introduction\": \"CSV (Comma-Separated Values) files are commonly used for data storage.\",\r\n    \"csv_module\": \"Use csv module for reading and writing CSV files.\",\r\n    \"example\": \"reader = csv.reader(open(\"file.csv\"))\",\r\n    \"conclusion\": \"CSV files are easy to handle and widely supported.\"\r\n  }\r\n}]', '2024-09-28 06:30:00'),
(35, 101, 1, 'Web Scraping with Beautiful Soup', 'https://www.youtube.com/watch?v=ng2o98k983k', '[{\r\n  \"title\": \"Web Scraping with Beautiful Soup\",\r\n  \"content\": {\r\n    \"introduction\": \"Beautiful Soup is a library for pulling data out of HTML and XML files.\",\r\n    \"installation\": \"Install using pip: pip install beautifulsoup4\",\r\n    \"usage\": \"from bs4 import BeautifulSoup\",\r\n    \"conclusion\": \"Web scraping is useful for collecting data from the web.\"\r\n  }\r\n}]', '2024-09-28 06:35:00'),
(36, 101, 1, 'Introduction to Pandas', 'https://www.youtube.com/watch?v=zmdjNSmRXF4', '[{\r\n  \"title\": \"Introduction to Pandas\",\r\n  \"content\": {\r\n    \"introduction\": \"Pandas is a powerful data analysis and manipulation library.\",\r\n    \"dataframes\": \"The primary data structure in Pandas is the DataFrame.\",\r\n    \"example\": \"import pandas as pd; df = pd.DataFrame(data)\",\r\n    \"conclusion\": \"Pandas is essential for data analysis in Python.\"\r\n  }\r\n}]', '2024-09-28 06:40:00'),
(37, 101, 1, 'Introduction to NumPy', 'https://www.youtube.com/watch?v=QUT1i0xn_8I', '[{\r\n  \"title\": \"Introduction to NumPy\",\r\n  \"content\": {\r\n    \"introduction\": \"NumPy is a library for numerical computations in Python.\",\r\n    \"ndarrays\": \"The core data structure is the ndarray (n-dimensional array).\",\r\n    \"example\": \"import numpy as np; arr = np.array([1, 2, 3])\",\r\n    \"conclusion\": \"NumPy is fundamental for scientific computing in Python.\"\r\n  }\r\n}]', '2024-09-28 06:45:00'),
(38, 101, 1, 'Data Visualization with Matplotlib', 'https://www.youtube.com/watch?v=3Xc3CA655Y4', '[{\r\n  \"title\": \"Data Visualization with Matplotlib\",\r\n  \"content\": {\r\n    \"introduction\": \"Matplotlib is a plotting library for the Python programming language.\",\r\n    \"basic_plotting\": \"Use plt.plot() for basic plotting.\",\r\n    \"example\": \"import matplotlib.pyplot as plt; plt.plot(x, y)\",\r\n    \"conclusion\": \"Data visualization is key for interpreting data insights.\"\r\n  }\r\n}]', '2024-09-28 06:50:00'),
(39, 101, 1, 'Introduction to Seaborn', 'https://www.youtube.com/watch?v=6GUZXGi6gcI', '[{\r\n  \"title\": \"Introduction to Seaborn\",\r\n  \"content\": {\r\n    \"introduction\": \"Seaborn is a statistical data visualization library based on Matplotlib.\",\r\n    \"installation\": \"Install using pip: pip install seaborn\",\r\n    \"example\": \"import seaborn as sns; sns.scatterplot(x, y)\",\r\n    \"conclusion\": \"Seaborn makes it easier to create beautiful visualizations.\"\r\n  }\r\n}]', '2024-09-28 06:55:00'),
(40, 101, 1, 'Introduction to Machine Learning', 'https://www.youtube.com/watch?v=GwIo3gOz8H8', '[{\r\n  \"title\": \"Introduction to Machine Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Machine learning is a subset of artificial intelligence that involves training models to make predictions.\",\r\n    \"types\": {\r\n      \"supervised\": \"Learning with labeled data.\",\r\n      \"unsupervised\": \"Learning with unlabeled data.\"\r\n    },\r\n    \"conclusion\": \"Machine learning is transforming industries and applications.\"\r\n  }\r\n}]', '2024-09-28 07:00:00'),
(41, 101, 1, 'Introduction to Flask', 'https://www.youtube.com/watch?v=Z1RJmh_OqeA', '[{\r\n  \"title\": \"Introduction to Flask\",\r\n  \"content\": {\r\n    \"introduction\": \"Flask is a micro web framework for Python.\",\r\n    \"installation\": \"Install using pip: pip install Flask\",\r\n    \"basic_app\": \"Create a basic Flask app to serve web pages.\",\r\n    \"conclusion\": \"Flask is lightweight and easy to get started with web development.\"\r\n  }\r\n}]', '2024-09-28 07:05:00'),
(42, 101, 1, 'Introduction to Django', 'https://www.youtube.com/watch?v=UmljXZIypDc', '[{\r\n  \"title\": \"Introduction to Django\",\r\n  \"content\": {\r\n    \"introduction\": \"Django is a high-level Python web framework that encourages rapid development.\",\r\n    \"features\": \"Built-in admin interface, ORM, and security features.\",\r\n    \"getting_started\": \"Use django-admin startproject to create a new project.\",\r\n    \"conclusion\": \"Django is powerful for building complex web applications.\"\r\n  }\r\n}]', '2024-09-28 07:10:00'),
(43, 101, 1, 'APIs with Flask', 'https://www.youtube.com/watch?v=sbwQmS7H4U0', '[{\r\n  \"title\": \"APIs with Flask\",\r\n  \"content\": {\r\n    \"introduction\": \"Flask makes it easy to build RESTful APIs.\",\r\n    \"routing\": \"Define routes to handle different API endpoints.\",\r\n    \"returning_json\": \"Use jsonify to return JSON responses.\",\r\n    \"conclusion\": \"Flask is a great choice for API development.\"\r\n  }\r\n}]', '2024-09-28 07:15:00'),
(44, 101, 1, 'Django Models', 'https://www.youtube.com/watch?v=6iF8Xb7Z3wQ', '[{\r\n  \"title\": \"Django Models\",\r\n  \"content\": {\r\n    \"introduction\": \"Models are Python classes that define the structure of your database.\",\r\n    \"creating_models\": \"Define models using Django’s ORM.\",\r\n    \"migrations\": \"Run migrations to apply changes to the database.\",\r\n    \"conclusion\": \"Django models simplify database interactions.\"\r\n  }\r\n}]', '2024-09-28 07:20:00'),
(45, 101, 1, 'Flask Templating', 'https://www.youtube.com/watch?v=Z1RJmh_OqeA&t=138s', '[{\r\n  \"title\": \"Flask Templating\",\r\n  \"content\": {\r\n    \"introduction\": \"Jinja2 is the templating engine used by Flask.\",\r\n    \"render_template\": \"Use render_template to serve HTML with dynamic content.\",\r\n    \"example\": \"return render_template(\"index.html\", name=\"World\")\",\r\n    \"conclusion\": \"Templating allows for dynamic web pages.\"\r\n  }\r\n}]', '2024-09-28 07:25:00'),
(46, 101, 1, 'Django Views', 'https://www.youtube.com/watch?v=UmljXZIypDc&t=195s', '[{\r\n  \"title\": \"Django Views\",\r\n  \"content\": {\r\n    \"introduction\": \"Views control the logic behind what data is displayed in a web application.\",\r\n    \"function_based_views\": \"Define views as functions that take a request and return a response.\",\r\n    \"class_based_views\": \"Use classes for more complex views.\",\r\n    \"conclusion\": \"Views are essential for handling user requests.\"\r\n  }\r\n}]', '2024-09-28 07:30:00'),
(47, 101, 1, 'Flask Forms', 'https://www.youtube.com/watch?v=Hf4MJH0jDb8', '[{\r\n  \"title\": \"Flask Forms\",\r\n  \"content\": {\r\n    \"introduction\": \"Flask-WTF is an extension for handling forms.\",\r\n    \"form_validation\": \"Validate form data to ensure it meets certain criteria.\",\r\n    \"example\": \"form = MyForm() if form.validate_on_submit():\",\r\n    \"conclusion\": \"Forms are vital for user input in web applications.\"\r\n  }\r\n}]', '2024-09-28 07:35:00'),
(48, 101, 1, 'Django Admin Interface', 'https://www.youtube.com/watch?v=8W6B1BrJ4bY', '[{\r\n  \"title\": \"Django Admin Interface\",\r\n  \"content\": {\r\n    \"introduction\": \"Django comes with a built-in admin interface for managing models.\",\r\n    \"customization\": \"Customize the admin interface to fit your needs.\",\r\n    \"usage\": \"Access it at /admin after creating a superuser.\",\r\n    \"conclusion\": \"The admin interface is powerful for managing data.\"\r\n  }\r\n}]', '2024-09-28 07:40:00'),
(49, 101, 1, 'RESTful APIs with Django REST Framework', 'https://www.youtube.com/watch?v=YkJ9H2vC5IU', '[{\r\n  \"title\": \"RESTful APIs with Django REST Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Django REST framework simplifies building APIs in Django.\",\r\n    \"serialization\": \"Convert complex data types to native Python data types.\",\r\n    \"viewsets\": \"Use viewsets for handling API endpoints.\",\r\n    \"conclusion\": \"Django REST framework is essential for API development.\"\r\n  }\r\n}]', '2024-09-28 07:45:00'),
(50, 101, 1, 'Introduction to Testing in Python', 'https://www.youtube.com/watch?v=6tNS--WetLI', '[{\r\n  \"title\": \"Introduction to Testing in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Testing is critical for ensuring your code works as expected.\",\r\n    \"unittest\": \"Use the unittest module for writing and running tests.\",\r\n    \"example\": \"import unittest; class TestMyFunction(unittest.TestCase):\",\r\n    \"conclusion\": \"Testing improves code quality and reduces bugs.\"\r\n  }\r\n}]', '2024-09-28 07:50:00'),
(51, 101, 2, 'Advanced Flask Features', 'https://www.youtube.com/watch?v=9K1lZz5qOEY', '[{\r\n  \"title\": \"Advanced Flask Features\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore advanced features such as blueprints and custom error pages.\",\r\n    \"blueprints\": \"Organize your Flask application using blueprints.\",\r\n    \"error_handling\": \"Create custom error pages for a better user experience.\",\r\n    \"conclusion\": \"Mastering these features enhances your Flask application.\",\r\n  }\r\n}]', '2024-09-28 08:00:00'),
(52, 101, 2, 'Django Middleware', 'https://www.youtube.com/watch?v=WaI4f5tU8dM', '[{\r\n  \"title\": \"Django Middleware\",\r\n  \"content\": {\r\n    \"introduction\": \"Middleware is a way to process requests globally before they reach the view.\",\r\n    \"custom_middleware\": \"Create custom middleware for logging or authentication.\",\r\n    \"usage\": \"Add middleware classes to the MIDDLEWARE setting.\",\r\n    \"conclusion\": \"Middleware can be used for a variety of tasks in Django.\",\r\n  }\r\n}]', '2024-09-28 08:05:00'),
(53, 101, 2, 'Flask Authentication', 'https://www.youtube.com/watch?v=Z1RJmh_OqeA&t=300s', '[{\r\n  \"title\": \"Flask Authentication\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement user authentication in Flask applications.\",\r\n    \"session_management\": \"Manage user sessions securely with Flask-Login.\",\r\n    \"example\": \"Use decorators to protect routes from unauthorized access.\",\r\n    \"conclusion\": \"Implementing authentication enhances the security of your application.\",\r\n  }\r\n}]', '2024-09-28 08:10:00'),
(54, 101, 2, 'Django Forms', 'https://www.youtube.com/watch?v=5fUlJpD5OUU', '[{\r\n  \"title\": \"Django Forms\",\r\n  \"content\": {\r\n    \"introduction\": \"Forms in Django allow you to handle user input easily.\",\r\n    \"creating_forms\": \"Define forms using Django’s Form class.\",\r\n    \"validation\": \"Add validation methods to ensure data integrity.\",\r\n    \"conclusion\": \"Forms are integral to user interaction in web applications.\",\r\n  }\r\n}]', '2024-09-28 08:15:00'),
(55, 101, 2, 'Building APIs with Django REST Framework', 'https://www.youtube.com/watch?v=4nq6P9gZwUw', '[{\r\n  \"title\": \"Building APIs with Django REST Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to build robust APIs using Django REST Framework.\",\r\n    \"viewsets\": \"Utilize viewsets for efficient API endpoint management.\",\r\n    \"serialization\": \"Understand how to serialize data effectively.\",\r\n    \"conclusion\": \"Django REST Framework is essential for modern web applications.\",\r\n  }\r\n}]', '2024-09-28 08:20:00'),
(56, 101, 2, 'Unit Testing in Django', 'https://www.youtube.com/watch?v=8j_zpY8OVSw', '[{\r\n  \"title\": \"Unit Testing in Django\",\r\n  \"content\": {\r\n    \"introduction\": \"Testing is critical for maintaining code quality.\",\r\n    \"test_cases\": \"Write test cases for your Django applications to ensure functionality.\",\r\n    \"testing_views\": \"Learn how to test views and templates.\",\r\n    \"conclusion\": \"Regular testing improves the reliability of your application.\",\r\n  }\r\n}]', '2024-09-28 08:25:00'),
(57, 101, 2, 'Flask and SQLAlchemy', 'https://www.youtube.com/watch?v=G4qVXyV0hb8', '[{\r\n  \"title\": \"Flask and SQLAlchemy\",\r\n  \"content\": {\r\n    \"introduction\": \"Integrate SQLAlchemy for database interactions in Flask applications.\",\r\n    \"models\": \"Define models using SQLAlchemy ORM features.\",\r\n    \"queries\": \"Learn how to perform queries and handle results.\",\r\n    \"conclusion\": \"SQLAlchemy simplifies database management in Flask.\",\r\n  }\r\n}]', '2024-09-28 08:30:00'),
(58, 101, 2, 'Django REST Framework Serializers', 'https://www.youtube.com/watch?v=s1HTAYnVfrU', '[{\r\n  \"title\": \"Django REST Framework Serializers\",\r\n  \"content\": {\r\n    \"introduction\": \"Serializers convert complex data types to native Python data types.\",\r\n    \"usage\": \"Use serializers to validate and save data.\",\r\n    \"example\": \"Define serializers for your Django models.\",\r\n    \"conclusion\": \"Serializers are crucial for API development in Django.\",\r\n  }\r\n}]', '2024-09-28 08:35:00'),
(59, 101, 2, 'Flask RESTful API', 'https://www.youtube.com/watch?v=fX4c6iZ3SHI', '[{\r\n  \"title\": \"Flask RESTful API\",\r\n  \"content\": {\r\n    \"introduction\": \"Build a RESTful API with Flask and Flask-RESTful.\",\r\n    \"resources\": \"Define resources and set up API routes.\",\r\n    \"testing\": \"Test your API endpoints with Postman.\",\r\n    \"conclusion\": \"Creating RESTful APIs is straightforward with Flask.\",\r\n  }\r\n}]', '2024-09-28 08:40:00'),
(60, 101, 2, 'Django Testing Framework', 'https://www.youtube.com/watch?v=xklQEVmgqxQ', '[{\r\n  \"title\": \"Django Testing Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to utilize the Django testing framework for unit tests.\",\r\n    \"set_up\": \"Set up test cases for your Django applications.\",\r\n    \"assertions\": \"Use assertions to verify expected outcomes.\",\r\n    \"conclusion\": \"Django’s testing framework aids in maintaining code quality.\",\r\n  }\r\n}]', '2024-09-28 08:45:00'),
(61, 101, 2, 'Building APIs with Django REST Framework', 'https://www.youtube.com/watch?v=4nq6P9gZwUw', '[{\r\n  \"title\": \"Building APIs with Django REST Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to build robust APIs using Django REST Framework.\",\r\n    \"viewsets\": \"Utilize viewsets for efficient API endpoint management.\",\r\n    \"serialization\": \"Understand how to serialize data effectively.\",\r\n    \"conclusion\": \"Django REST Framework is essential for modern web applications.\",\r\n  }\r\n}]', '2024-09-28 08:20:00'),
(62, 101, 2, 'Unit Testing in Django', 'https://www.youtube.com/watch?v=8j_zpY8OVSw', '[{\r\n  \"title\": \"Unit Testing in Django\",\r\n  \"content\": {\r\n    \"introduction\": \"Testing is critical for maintaining code quality.\",\r\n    \"test_cases\": \"Write test cases for your Django applications to ensure functionality.\",\r\n    \"testing_views\": \"Learn how to test views and templates.\",\r\n    \"conclusion\": \"Regular testing improves the reliability of your application.\",\r\n  }\r\n}]', '2024-09-28 08:25:00'),
(63, 101, 2, 'Flask and SQLAlchemy', 'https://www.youtube.com/watch?v=G4qVXyV0hb8', '[{\r\n  \"title\": \"Flask and SQLAlchemy\",\r\n  \"content\": {\r\n    \"introduction\": \"Integrate SQLAlchemy for database interactions in Flask applications.\",\r\n    \"models\": \"Define models using SQLAlchemy ORM features.\",\r\n    \"queries\": \"Learn how to perform queries and handle results.\",\r\n    \"conclusion\": \"SQLAlchemy simplifies database management in Flask.\",\r\n  }\r\n}]', '2024-09-28 08:30:00'),
(64, 101, 2, 'Django REST Framework Serializers', 'https://www.youtube.com/watch?v=s1HTAYnVfrU', '[{\r\n  \"title\": \"Django REST Framework Serializers\",\r\n  \"content\": {\r\n    \"introduction\": \"Serializers convert complex data types to native Python data types.\",\r\n    \"usage\": \"Use serializers to validate and save data.\",\r\n    \"example\": \"Define serializers for your Django models.\",\r\n    \"conclusion\": \"Serializers are crucial for API development in Django.\",\r\n  }\r\n}]', '2024-09-28 08:35:00'),
(65, 101, 2, 'Flask RESTful API', 'https://www.youtube.com/watch?v=fX4c6iZ3SHI', '[{\r\n  \"title\": \"Flask RESTful API\",\r\n  \"content\": {\r\n    \"introduction\": \"Build a RESTful API with Flask and Flask-RESTful.\",\r\n    \"resources\": \"Define resources and set up API routes.\",\r\n    \"testing\": \"Test your API endpoints with Postman.\",\r\n    \"conclusion\": \"Creating RESTful APIs is straightforward with Flask.\",\r\n  }\r\n}]', '2024-09-28 08:40:00'),
(66, 101, 2, 'Django Testing Framework', 'https://www.youtube.com/watch?v=xklQEVmgqxQ', '[{\r\n  \"title\": \"Django Testing Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to utilize the Django testing framework for unit tests.\",\r\n    \"set_up\": \"Set up test cases for your Django applications.\",\r\n    \"assertions\": \"Use assertions to verify expected outcomes.\",\r\n    \"conclusion\": \"Django’s testing framework aids in maintaining code quality.\",\r\n  }\r\n}]', '2024-09-28 08:45:00'),
(67, 101, 2, 'Asynchronous Programming in Django', 'https://www.youtube.com/watch?v=Zjkd6_BNhA4', '[{\r\n  \"title\": \"Asynchronous Programming in Django\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement asynchronous views and tasks in Django.\",\r\n    \"async_views\": \"Define asynchronous views to handle requests efficiently.\",\r\n    \"tasks\": \"Use Celery for background task processing.\",\r\n    \"conclusion\": \"Asynchronous programming improves performance in web applications.\",\r\n  }\r\n}]', '2024-09-28 08:50:00'),
(68, 101, 2, 'Flask CORS Handling', 'https://www.youtube.com/watch?v=J-KuZW_pn0I', '[{\r\n  \"title\": \"Flask CORS Handling\",\r\n  \"content\": {\r\n    \"introduction\": \"Understand how to handle Cross-Origin Resource Sharing (CORS) in Flask.\",\r\n    \"configuration\": \"Set up CORS to allow cross-origin requests.\",\r\n    \"security\": \"Understand the security implications of CORS.\",\r\n    \"conclusion\": \"Proper CORS handling is essential for web applications.\",\r\n  }\r\n}]', '2024-09-28 08:55:00'),
(69, 101, 2, 'Django Admin Customization', 'https://www.youtube.com/watch?v=WeZ9k4gwh34', '[{\r\n  \"title\": \"Django Admin Customization\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to customize the Django admin interface.\",\r\n    \"admin_views\": \"Create custom admin views for better management.\",\r\n    \"styling\": \"Use CSS and JavaScript to style the admin panel.\",\r\n    \"conclusion\": \"Customizing the admin enhances usability for administrators.\",\r\n  }\r\n}]', '2024-09-28 09:00:00'),
(70, 101, 2, 'Integrating Flask with GraphQL', 'https://www.youtube.com/watch?v=K2_fB2yI_9U', '[{\r\n  \"title\": \"Integrating Flask with GraphQL\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement GraphQL in your Flask applications.\",\r\n    \"setup\": \"Set up Flask-GraphQL for easier API development.\",\r\n    \"queries_mutations\": \"Define queries and mutations for your API.\",\r\n    \"conclusion\": \"GraphQL provides a more flexible alternative to REST.\",\r\n  }\r\n}]', '2024-09-28 09:05:00'),
(71, 101, 2, 'Flask File Uploads', 'https://www.youtube.com/watch?v=8k1L0WLYeHo', '[{\r\n  \"title\": \"Flask File Uploads\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to handle file uploads in Flask applications.\",\r\n    \"file_storage\": \"Use Flask’s file storage features to manage uploaded files.\",\r\n    \"validation\": \"Implement file validation to ensure security.\",\r\n    \"conclusion\": \"Proper file upload handling is crucial for web applications.\",\r\n  }\r\n}]', '2024-09-28 09:10:00'),
(72, 101, 2, 'Using Redis with Flask', 'https://www.youtube.com/watch?v=JZLhA5rjTnE', '[{\r\n  \"title\": \"Using Redis with Flask\",\r\n  \"content\": {\r\n    \"introduction\": \"Integrate Redis as a caching mechanism for Flask applications.\",\r\n    \"setup\": \"Configure Redis for your Flask project.\",\r\n    \"caching\": \"Implement caching strategies to improve performance.\",\r\n    \"conclusion\": \"Using Redis effectively boosts application speed.\",\r\n  }\r\n}]', '2024-09-28 09:15:00'),
(73, 101, 2, 'Django Signals', 'https://www.youtube.com/watch?v=3I6sTqWqC4Y', '[{\r\n  \"title\": \"Django Signals\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to use signals in Django for decoupled applications.\",\r\n    \"usage\": \"Create and connect signal handlers for events.\",\r\n    \"examples\": \"Explore common signals like post_save and pre_delete.\",\r\n    \"conclusion\": \"Signals facilitate better application architecture.\",\r\n  }\r\n}]', '2024-09-28 09:20:00'),
(74, 101, 2, 'Flask JWT Authentication', 'https://www.youtube.com/watch?v=zO-T_oGEO1I', '[{\r\n  \"title\": \"Flask JWT Authentication\",\r\n  \"content\": {\r\n    \"introduction\": \"Implement JSON Web Token (JWT) authentication in Flask.\",\r\n    \"setup\": \"Configure Flask-JWT-Extended for secure authentication.\",\r\n    \"protect_routes\": \"Learn how to protect your routes using JWT.\",\r\n    \"conclusion\": \"JWT is a modern approach to secure APIs.\",\r\n  }\r\n}]', '2024-09-28 09:25:00'),
(75, 101, 2, 'Creating Custom Django Management Commands', 'https://www.youtube.com/watch?v=ZMx6CS0AdP8', '[{\r\n  \"title\": \"Creating Custom Django Management Commands\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to create custom management commands in Django.\",\r\n    \"setup\": \"Define your commands in the management/commands directory.\",\r\n    \"usage\": \"Run your custom commands using the Django manage.py script.\",\r\n    \"conclusion\": \"Custom commands can simplify repetitive tasks.\",\r\n  }\r\n}]', '2024-09-28 09:30:00'),
(76, 101, 2, 'Django Rest Framework Authentication', 'https://www.youtube.com/watch?v=OE25uAIcU6o', '[{\r\n  \"title\": \"Django Rest Framework Authentication\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore different authentication methods in DRF.\",\r\n    \"methods\": \"Implement Token, Session, and JWT authentication.\",\r\n    \"setup\": \"Configure your authentication classes in settings.py.\",\r\n    \"conclusion\": \"Choosing the right authentication method is vital for security.\",\r\n  }\r\n}]', '2024-09-28 09:35:00'),
(77, 101, 2, 'Flask Blueprints', 'https://www.youtube.com/watch?v=1c1-ZFipZgE', '[{\r\n  \"title\": \"Flask Blueprints\",\r\n  \"content\": {\r\n    \"introduction\": \"Organize your Flask application with blueprints.\",\r\n    \"setup\": \"Create and register blueprints for modular applications.\",\r\n    \"examples\": \"Use blueprints for separating features and functionalities.\",\r\n    \"conclusion\": \"Blueprints enhance the organization of your codebase.\",\r\n  }\r\n}]', '2024-09-28 09:40:00'),
(78, 101, 2, 'Django Pagination', 'https://www.youtube.com/watch?v=5gZwA0cnH4Y', '[{\r\n  \"title\": \"Django Pagination\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement pagination in your Django applications.\",\r\n    \"class_based\": \"Utilize Django’s built-in pagination classes.\",\r\n    \"example\": \"Create paginated views for better user experience.\",\r\n    \"conclusion\": \"Pagination is crucial for displaying large datasets.\",\r\n  }\r\n}]', '2024-09-28 09:45:00'),
(79, 101, 2, 'Integrating Flask with Celery', 'https://www.youtube.com/watch?v=PMjzD4Rby8s', '[{\r\n  \"title\": \"Integrating Flask with Celery\",\r\n  \"content\": {\r\n    \"introduction\": \"Use Celery for handling asynchronous tasks in Flask.\",\r\n    \"setup\": \"Configure Celery with Flask for background job processing.\",\r\n    \"examples\": \"Create tasks that run asynchronously to improve performance.\",\r\n    \"conclusion\": \"Asynchronous processing enhances application responsiveness.\",\r\n  }\r\n}]', '2024-09-28 09:50:00'),
(80, 101, 2, 'Django Custom Managers', 'https://www.youtube.com/watch?v=xAsC_YfYf6M', '[{\r\n  \"title\": \"Django Custom Managers\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to create custom managers in Django models.\",\r\n    \"setup\": \"Define custom methods for your model managers.\",\r\n    \"usage\": \"Utilize managers for complex query logic.\",\r\n    \"conclusion\": \"Custom managers streamline your data access logic.\",\r\n  }\r\n}]', '2024-09-28 09:55:00'),
(81, 101, 2, 'Flask SQLAlchemy Migrations', 'https://www.youtube.com/watch?v=gZ6SbTuYxkU', '[{\r\n  \"title\": \"Flask SQLAlchemy Migrations\",\r\n  \"content\": {\r\n    \"introduction\": \"Manage database migrations in Flask using Flask-Migrate.\",\r\n    \"setup\": \"Install and configure Flask-Migrate in your application.\",\r\n    \"commands\": \"Use migration commands to create and apply migrations.\",\r\n    \"conclusion\": \"Migrations help maintain database integrity during development.\",\r\n  }\r\n}]', '2024-09-28 10:00:00'),
(82, 101, 2, 'Django Model Relationships', 'https://www.youtube.com/watch?v=5L52cPwAORU', '[{\r\n  \"title\": \"Django Model Relationships\",\r\n  \"content\": {\r\n    \"introduction\": \"Understand how to define relationships between Django models.\",\r\n    \"types\": \"Explore one-to-one, one-to-many, and many-to-many relationships.\",\r\n    \"usage\": \"Use ForeignKey and ManyToManyField in your models.\",\r\n    \"conclusion\": \"Proper model relationships are essential for complex data structures.\",\r\n  }\r\n}]', '2024-09-28 10:05:00'),
(83, 101, 2, 'Flask Mail', 'https://www.youtube.com/watch?v=33QmmLwsHto', '[{\r\n  \"title\": \"Flask Mail\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to send emails from your Flask applications.\",\r\n    \"setup\": \"Configure Flask-Mail for email services.\",\r\n    \"examples\": \"Send different types of emails, including HTML and plain text.\",\r\n    \"conclusion\": \"Email functionality enhances user communication in web applications.\",\r\n  }\r\n}]', '2024-09-28 10:10:00'),
(84, 101, 2, 'Django QuerySet Methods', 'https://www.youtube.com/watch?v=F8b6F9f3eAo', '[{\r\n  \"title\": \"Django QuerySet Methods\",\r\n  \"content\": {\r\n    \"introduction\": \"Master the various QuerySet methods available in Django.\",\r\n    \"filtering\": \"Use filtering methods to retrieve specific records.\",\r\n    \"aggregation\": \"Learn about aggregation methods for data analysis.\",\r\n    \"conclusion\": \"Effective QuerySet methods improve data manipulation and retrieval.\",\r\n  }\r\n}]', '2024-09-28 10:15:00'),
(85, 101, 2, 'Flask Sessions', 'https://www.youtube.com/watch?v=HgW7Xf9W9PA', '[{\r\n  \"title\": \"Flask Sessions\",\r\n  \"content\": {\r\n    \"introduction\": \"Manage user sessions in Flask applications for state persistence.\",\r\n    \"setup\": \"Configure session handling using Flask’s session feature.\",\r\n    \"examples\": \"Store and retrieve data from user sessions.\",\r\n    \"conclusion\": \"Sessions are essential for personalized user experiences.\",\r\n  }\r\n}]', '2024-09-28 10:20:00'),
(86, 101, 2, 'Django Middleware Customization', 'https://www.youtube.com/watch?v=TTos3pPdv8s', '[{\r\n  \"title\": \"Django Middleware Customization\",\r\n  \"content\": {\r\n    \"introduction\": \"Create custom middleware to handle requests and responses in Django.\",\r\n    \"setup\": \"Define middleware classes for different purposes.\",\r\n    \"examples\": \"Implement middleware for logging and authentication.\",\r\n    \"conclusion\": \"Custom middleware enhances functionality and control over requests.\",\r\n  }\r\n}]', '2024-09-28 10:25:00'),
(87, 101, 2, 'Flask Application Factory', 'https://www.youtube.com/watch?v=9TR1f_wn15M', '[{\r\n  \"title\": \"Flask Application Factory\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn about the application factory pattern for structuring Flask apps.\",\r\n    \"setup\": \"Create a factory function to instantiate your Flask app.\",\r\n    \"usage\": \"Manage application configurations and blueprints efficiently.\",\r\n    \"conclusion\": \"The application factory pattern improves code organization and testing.\",\r\n  }\r\n}]', '2024-09-28 10:30:00'),
(88, 101, 2, 'Django Caching', 'https://www.youtube.com/watch?v=V2P_pnFljH8', '[{\r\n  \"title\": \"Django Caching\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore caching strategies to improve Django app performance.\",\r\n    \"setup\": \"Configure caching backends in your Django settings.\",\r\n    \"examples\": \"Use cache decorators and template caching.\",\r\n    \"conclusion\": \"Caching significantly reduces load times and database queries.\",\r\n  }\r\n}]', '2024-09-28 10:35:00'),
(89, 101, 2, 'Flask API Development Best Practices', 'https://www.youtube.com/watch?v=pYwqD4cSENM', '[{\r\n  \"title\": \"Flask API Development Best Practices\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn best practices for developing RESTful APIs with Flask.\",\r\n    \"documentation\": \"Use Swagger for API documentation.\",\r\n    \"error_handling\": \"Implement proper error handling and response formats.\",\r\n    \"conclusion\": \"Adhering to best practices ensures maintainable and scalable APIs.\",\r\n  }\r\n}]', '2024-09-28 10:40:00'),
(90, 101, 2, 'Django Signals in Action', 'https://www.youtube.com/watch?v=B4S6E9rU7E4', '[{\r\n  \"title\": \"Django Signals in Action\",\r\n  \"content\": {\r\n    \"introduction\": \"Practical examples of using signals in Django applications.\",\r\n    \"usage\": \"Implement post-save and pre-delete signals for model actions.\",\r\n    \"case_studies\": \"Explore real-world use cases for signals.\",\r\n    \"conclusion\": \"Signals provide a powerful way to decouple application logic.\",\r\n  }\r\n}]', '2024-09-28 10:45:00'),
(91, 101, 2, 'Flask WebSocket', 'https://www.youtube.com/watch?v=R4D1Bwx9MRY', '[{\r\n  \"title\": \"Flask WebSocket\",\r\n  \"content\": {\r\n    \"introduction\": \"Implement real-time communication in Flask using WebSockets.\",\r\n    \"setup\": \"Configure Flask-SocketIO for WebSocket support.\",\r\n    \"examples\": \"Create chat applications with real-time message updates.\",\r\n    \"conclusion\": \"WebSockets enhance interactivity in web applications.\",\r\n  }\r\n}]', '2024-09-28 10:50:00'),
(92, 101, 2, 'Django REST Framework Authentication', 'https://www.youtube.com/watch?v=W_vw09M3w2s', '[{\r\n  \"title\": \"Django REST Framework Authentication\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore authentication methods in Django REST Framework.\",\r\n    \"token_auth\": \"Implement token-based authentication for your APIs.\",\r\n    \"jwt_auth\": \"Use JWT for stateless authentication in your applications.\",\r\n    \"conclusion\": \"Secure APIs with robust authentication mechanisms.\",\r\n  }\r\n}]', '2024-09-28 10:55:00'),
(93, 101, 2, 'Flask REST API Pagination', 'https://www.youtube.com/watch?v=K6pEDT76r9M', '[{\r\n  \"title\": \"Flask REST API Pagination\",\r\n  \"content\": {\r\n    \"introduction\": \"Implement pagination in Flask APIs to handle large datasets.\",\r\n    \"setup\": \"Use Flask-RESTful to add pagination features easily.\",\r\n    \"examples\": \"Return paginated results in your API endpoints.\",\r\n    \"conclusion\": \"Pagination improves performance and user experience in APIs.\",\r\n  }\r\n}]', '2024-09-28 11:00:00'),
(94, 101, 2, 'Django Admin Customization', 'https://www.youtube.com/watch?v=8_f9z7m1pC0', '[{\r\n  \"title\": \"Django Admin Customization\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to customize the Django admin interface.\",\r\n    \"custom_models\": \"Register and customize your models in the admin panel.\",\r\n    \"admin_actions\": \"Add custom actions to your admin views.\",\r\n    \"conclusion\": \"Customizing admin enhances the usability of the backend.\",\r\n  }\r\n}]', '2024-09-28 11:05:00');
INSERT INTO `python_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(95, 101, 2, 'Flask Blueprint Structure', 'https://www.youtube.com/watch?v=w0OwB0B9Tlg', '[{\r\n  \"title\": \"Flask Blueprint Structure\",\r\n  \"content\": {\r\n    \"introduction\": \"Organize your Flask application using blueprints for modular design.\",\r\n    \"setup\": \"Create and register blueprints in your app factory.\",\r\n    \"examples\": \"Utilize blueprints for routing and views.\",\r\n    \"conclusion\": \"Blueprints facilitate a clean and maintainable codebase.\",\r\n  }\r\n}]', '2024-09-28 11:10:00'),
(96, 101, 2, 'Django Query Optimization', 'https://www.youtube.com/watch?v=IoGXiG_z7k4', '[{\r\n  \"title\": \"Django Query Optimization\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn techniques for optimizing database queries in Django.\",\r\n    \"select_related\": \"Use select_related and prefetch_related to reduce queries.\",\r\n    \"query_tuning\": \"Analyze and tune your queries for better performance.\",\r\n    \"conclusion\": \"Optimized queries lead to faster applications and lower database load.\",\r\n  }\r\n}]', '2024-09-28 11:15:00'),
(97, 101, 2, 'Flask JSON API', 'https://www.youtube.com/watch?v=I5V2ZpU4gx4', '[{\r\n  \"title\": \"Flask JSON API\",\r\n  \"content\": {\r\n    \"introduction\": \"Create a JSON API with Flask and Flask-RESTful.\",\r\n    \"setup\": \"Define API routes to serve JSON responses.\",\r\n    \"examples\": \"Implement CRUD operations in your API.\",\r\n    \"conclusion\": \"JSON APIs are essential for modern web applications.\",\r\n  }\r\n}]', '2024-09-28 11:20:00'),
(98, 101, 2, 'Django Filters', 'https://www.youtube.com/watch?v=G_G9cGg0iAo', '[{\r\n  \"title\": \"Django Filters\",\r\n  \"content\": {\r\n    \"introduction\": \"Utilize Django filters for dynamic query handling.\",\r\n    \"setup\": \"Install and configure Django-filter library.\",\r\n    \"examples\": \"Implement filtering in your Django views.\",\r\n    \"conclusion\": \"Filters enhance data retrieval and user interaction.\",\r\n  }\r\n}]', '2024-09-28 11:25:00'),
(99, 101, 2, 'Flask Deployment Strategies', 'https://www.youtube.com/watch?v=2cS2fSBq4tM', '[{\r\n  \"title\": \"Flask Deployment Strategies\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore various strategies for deploying Flask applications.\",\r\n    \"platforms\": \"Learn about popular hosting platforms like Heroku and AWS.\",\r\n    \"best_practices\": \"Follow best practices for a successful deployment.\",\r\n    \"conclusion\": \"Proper deployment ensures your application is accessible and scalable.\",\r\n  }\r\n}]', '2024-09-28 11:30:00'),
(100, 101, 2, 'Django Security Practices', 'https://www.youtube.com/watch?v=LKe17GqlqMI', '[{\r\n  \"title\": \"Django Security Practices\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn essential security practices for Django applications.\",\r\n    \"vulnerabilities\": \"Understand common vulnerabilities and how to mitigate them.\",\r\n    \"secure_auth\": \"Implement secure authentication and authorization measures.\",\r\n    \"conclusion\": \"Security is critical for maintaining user trust and application integrity.\",\r\n  }\r\n}]', '2024-09-28 11:35:00'),
(101, 101, 3, 'Introduction to Machine Learning', 'https://www.youtube.com/watch?v=Gv9_4yMHFhI', '[{\r\n  \"title\": \"Introduction to Machine Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn the basics of machine learning, its applications, and algorithms.\",\r\n    \"types\": \"Understand supervised and unsupervised learning.\",\r\n    \"algorithms\": \"Explore common algorithms like linear regression and decision trees.\",\r\n    \"conclusion\": \"Machine learning is transforming industries by enabling data-driven decisions.\"\r\n  }\r\n}]', '2024-09-28 09:00:00'),
(102, 101, 3, 'Data Preprocessing Techniques', 'https://www.youtube.com/watch?v=8K32cE8aBz0', '[{\r\n  \"title\": \"Data Preprocessing Techniques\",\r\n  \"content\": {\r\n    \"introduction\": \"Data preprocessing is essential for preparing data for machine learning models.\",\r\n    \"steps\": \"Learn about cleaning, normalization, and feature scaling.\",\r\n    \"tools\": \"Familiarize yourself with libraries like Pandas and NumPy.\",\r\n    \"conclusion\": \"Proper preprocessing can significantly improve model performance.\"\r\n  }\r\n}]', '2024-09-28 09:05:00'),
(103, 101, 3, 'Introduction to Neural Networks', 'https://www.youtube.com/watch?v=aircAkgeS10', '[{\r\n  \"title\": \"Introduction to Neural Networks\",\r\n  \"content\": {\r\n    \"introduction\": \"Dive into the basics of neural networks and their architecture.\",\r\n    \"layers\": \"Understand input, hidden, and output layers.\",\r\n    \"activation_functions\": \"Explore different activation functions and their significance.\",\r\n    \"conclusion\": \"Neural networks are foundational to deep learning applications.\"\r\n  }\r\n}]', '2024-09-28 09:10:00'),
(104, 101, 3, 'Deep Learning Fundamentals', 'https://www.youtube.com/watch?v=2_OE0Tz_4hI', '[{\r\n  \"title\": \"Deep Learning Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn about deep learning and how it differs from traditional machine learning.\",\r\n    \"architecture\": \"Explore popular architectures like CNNs and RNNs.\",\r\n    \"frameworks\": \"Get introduced to frameworks like TensorFlow and Keras.\",\r\n    \"conclusion\": \"Deep learning has revolutionized fields such as computer vision and NLP.\"\r\n  }\r\n}]', '2024-09-28 09:15:00'),
(105, 101, 3, 'Understanding Convolutional Neural Networks (CNNs)', 'https://www.youtube.com/watch?v=YzqfVwAqE0o', '[{\r\n  \"title\": \"Understanding Convolutional Neural Networks (CNNs)\",\r\n  \"content\": {\r\n    \"introduction\": \"CNNs are crucial for image processing tasks. Learn their architecture.\",\r\n    \"layers\": \"Understand convolutional, pooling, and fully connected layers.\",\r\n    \"applications\": \"Explore applications in image classification and recognition.\",\r\n    \"conclusion\": \"CNNs have led to breakthroughs in computer vision.\"\r\n  }\r\n}]', '2024-09-28 09:20:00'),
(106, 101, 3, 'Natural Language Processing (NLP) Basics', 'https://www.youtube.com/watch?v=Oevr7ViES90', '[{\r\n  \"title\": \"Natural Language Processing (NLP) Basics\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the fundamentals of NLP and its applications in AI.\",\r\n    \"text_processing\": \"Learn about text preprocessing techniques such as tokenization.\",\r\n    \"nlp_tools\": \"Familiarize yourself with libraries like NLTK and spaCy.\",\r\n    \"conclusion\": \"NLP is essential for building intelligent systems that understand human language.\"\r\n  }\r\n}]', '2024-09-28 09:25:00'),
(107, 101, 3, 'Implementing Machine Learning Algorithms', 'https://www.youtube.com/watch?v=K_qEq0gI3Ck', '[{\r\n  \"title\": \"Implementing Machine Learning Algorithms\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement algorithms like decision trees and SVMs in Python.\",\r\n    \"libraries\": \"Utilize scikit-learn for building and evaluating models.\",\r\n    \"examples\": \"Explore practical examples and coding tutorials.\",\r\n    \"conclusion\": \"Hands-on experience is crucial for mastering machine learning.\"\r\n  }\r\n}]', '2024-09-28 09:30:00'),
(108, 101, 3, 'Model Evaluation and Hyperparameter Tuning', 'https://www.youtube.com/watch?v=2RjZK0ZDj6o', '[{\r\n  \"title\": \"Model Evaluation and Hyperparameter Tuning\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn the importance of evaluating machine learning models.\",\r\n    \"metrics\": \"Explore evaluation metrics like accuracy, precision, and recall.\",\r\n    \"tuning\": \"Understand techniques for hyperparameter tuning, such as Grid Search.\",\r\n    \"conclusion\": \"Effective evaluation and tuning lead to better model performance.\"\r\n  }\r\n}]', '2024-09-28 09:35:00'),
(109, 101, 3, 'Deploying Machine Learning Models', 'https://www.youtube.com/watch?v=IR2gB2H-DhU', '[{\r\n  \"title\": \"Deploying Machine Learning Models\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to deploy machine learning models into production environments.\",\r\n    \"tools\": \"Explore tools and platforms like Docker and AWS for deployment.\",\r\n    \"best_practices\": \"Understand best practices for maintaining and updating models.\",\r\n    \"conclusion\": \"Deployment is a critical step in the machine learning lifecycle.\"\r\n  }\r\n}]', '2024-09-28 09:40:00'),
(110, 101, 3, 'Introduction to Reinforcement Learning', 'https://www.youtube.com/watch?v=2pY4u9GgE70', '[{\r\n  \"title\": \"Introduction to Reinforcement Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the concepts of reinforcement learning and its applications.\",\r\n    \"agents\": \"Understand the role of agents, environments, and rewards.\",\r\n    \"algorithms\": \"Learn about Q-learning and deep Q-networks.\",\r\n    \"conclusion\": \"Reinforcement learning is a powerful approach for decision-making problems.\"\r\n  }\r\n}]', '2024-09-28 09:45:00'),
(111, 101, 3, 'Introduction to Computer Vision', 'https://www.youtube.com/watch?v=Hf2K6Ewr1JY', '[{\r\n  \"title\": \"Introduction to Computer Vision\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the basics of computer vision and its significance in AI.\",\r\n    \"techniques\": \"Learn about image processing techniques and their applications.\",\r\n    \"tools\": \"Familiarize yourself with OpenCV and other libraries.\",\r\n    \"conclusion\": \"Computer vision is key to enabling machines to understand visual data.\"\r\n  }\r\n}]', '2024-09-28 09:50:00'),
(112, 101, 3, 'Image Classification with CNNs', 'https://www.youtube.com/watch?v=H8bKRGytb40', '[{\r\n  \"title\": \"Image Classification with CNNs\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to classify images using convolutional neural networks.\",\r\n    \"dataset\": \"Utilize datasets like CIFAR-10 for training models.\",\r\n    \"implementation\": \"Follow step-by-step coding tutorials for image classification tasks.\",\r\n    \"conclusion\": \"Image classification is a fundamental task in computer vision.\"\r\n  }\r\n}]', '2024-09-28 09:55:00'),
(113, 101, 3, 'Object Detection Techniques', 'https://www.youtube.com/watch?v=ZIcC7EoA4ZA', '[{\r\n  \"title\": \"Object Detection Techniques\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore different techniques for detecting objects in images.\",\r\n    \"algorithms\": \"Learn about YOLO and SSD for real-time object detection.\",\r\n    \"applications\": \"Understand the applications of object detection in various industries.\",\r\n    \"conclusion\": \"Object detection is critical for applications like surveillance and autonomous vehicles.\"\r\n  }\r\n}]', '2024-09-28 10:00:00'),
(114, 101, 3, 'Face Recognition Systems', 'https://www.youtube.com/watch?v=2B1f1HpuZ8g', '[{\r\n  \"title\": \"Face Recognition Systems\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn the fundamentals of building face recognition systems.\",\r\n    \"techniques\": \"Explore feature extraction and matching techniques.\",\r\n    \"libraries\": \"Utilize libraries like face_recognition for implementation.\",\r\n    \"conclusion\": \"Face recognition is widely used in security and identification applications.\"\r\n  }\r\n}]', '2024-09-28 10:05:00'),
(115, 101, 3, 'Natural Language Processing with Transformers', 'https://www.youtube.com/watch?v=8gxS1A8pM5s', '[{\r\n  \"title\": \"Natural Language Processing with Transformers\",\r\n  \"content\": {\r\n    \"introduction\": \"Discover how transformers revolutionized NLP tasks.\",\r\n    \"architecture\": \"Understand the architecture of transformer models like BERT and GPT.\",\r\n    \"applications\": \"Explore applications in translation, summarization, and text generation.\",\r\n    \"conclusion\": \"Transformers are setting new standards in natural language understanding.\"\r\n  }\r\n}]', '2024-09-28 10:10:00'),
(116, 101, 3, 'Building Chatbots with NLP', 'https://www.youtube.com/watch?v=ugvI_B_rG4o', '[{\r\n  \"title\": \"Building Chatbots with NLP\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to build intelligent chatbots using NLP techniques.\",\r\n    \"frameworks\": \"Utilize frameworks like Rasa or Dialogflow for chatbot development.\",\r\n    \"dialog_management\": \"Explore how to manage conversation flow effectively.\",\r\n    \"conclusion\": \"Chatbots are increasingly used in customer service and engagement.\"\r\n  }\r\n}]', '2024-09-28 10:15:00'),
(117, 101, 3, 'Time Series Analysis', 'https://www.youtube.com/watch?v=9xKBYd_0LPg', '[{\r\n  \"title\": \"Time Series Analysis\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the concepts and techniques for analyzing time series data.\",\r\n    \"methods\": \"Learn about ARIMA models and seasonal decomposition.\",\r\n    \"applications\": \"Understand applications in finance, sales forecasting, and more.\",\r\n    \"conclusion\": \"Time series analysis is crucial for making informed predictions.\"\r\n  }\r\n}]', '2024-09-28 10:20:00'),
(118, 101, 3, 'Reinforcement Learning Applications', 'https://www.youtube.com/watch?v=HWB-nDDhb4U', '[{\r\n  \"title\": \"Reinforcement Learning Applications\",\r\n  \"content\": {\r\n    \"introduction\": \"Discover various applications of reinforcement learning in real-world scenarios.\",\r\n    \"domains\": \"Explore its use in robotics, gaming, and autonomous systems.\",\r\n    \"challenges\": \"Understand the challenges and considerations in RL implementations.\",\r\n    \"conclusion\": \"Reinforcement learning is a promising area with vast potential.\"\r\n  }\r\n}]', '2024-09-28 10:25:00'),
(119, 101, 3, 'Ethics in AI and Machine Learning', 'https://www.youtube.com/watch?v=q7vATF_78CA', '[{\r\n  \"title\": \"Ethics in AI and Machine Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the ethical implications of AI and machine learning technologies.\",\r\n    \"bias\": \"Learn about bias in algorithms and its societal impacts.\",\r\n    \"responsibility\": \"Understand the importance of responsible AI development.\",\r\n    \"conclusion\": \"Ethics is crucial for ensuring technology benefits everyone.\"\r\n  }\r\n}]', '2024-09-28 10:30:00'),
(120, 101, 3, 'Future Trends in AI and Machine Learning', 'https://www.youtube.com/watch?v=3GQZ8XDX0lA', '[{\r\n  \"title\": \"Future Trends in AI and Machine Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Discover the emerging trends shaping the future of AI and machine learning.\",\r\n    \"innovations\": \"Explore innovations in AI technology and applications.\",\r\n    \"predictions\": \"Understand predictions for AI\"s impact on various industries.\",\r\n    \"conclusion\": \"The future of AI is bright, with endless possibilities.\"\r\n  }\r\n}]', '2024-09-28 10:35:00'),
(121, 101, 3, 'Hands-on Project: Building an AI Application', 'https://www.youtube.com/watch?v=lYixu6PpK-M', '[{\r\n  \"title\": \"Hands-on Project: Building an AI Application\",\r\n  \"content\": {\r\n    \"introduction\": \"Apply your knowledge to build a complete AI application from scratch.\",\r\n    \"planning\": \"Learn how to plan and design your project effectively.\",\r\n    \"implementation\": \"Follow step-by-step instructions to implement your AI application.\",\r\n    \"conclusion\": \"Hands-on projects reinforce learning and build practical skills.\"\r\n  }\r\n}]', '2024-09-28 10:40:00'),
(122, 101, 3, 'Capstone Project Overview', 'https://www.youtube.com/watch?v=0kX4er7U_4E', '[{\r\n  \"title\": \"Capstone Project Overview\",\r\n  \"content\": {\r\n    \"introduction\": \"Prepare for your final project by reviewing requirements and expectations.\",\r\n    \"guidelines\": \"Understand the guidelines for your capstone project.\",\r\n    \"submission\": \"Learn about the submission process and evaluation criteria.\",\r\n    \"conclusion\": \"The capstone project is a key milestone in your learning journey.\"\r\n  }\r\n}]', '2024-09-28 10:45:00'),
(123, 101, 3, 'Project Presentations', 'https://www.youtube.com/watch?v=2t6HBeQ8x50', '[{\r\n  \"title\": \"Project Presentations\",\r\n  \"content\": {\r\n    \"introduction\": \"Present your project to the class and showcase your work.\",\r\n    \"feedback\": \"Receive feedback from instructors and peers.\",\r\n    \"improvements\": \"Learn how to improve your project based on feedback received.\",\r\n    \"conclusion\": \"Presenting your work is an essential skill in any field.\"\r\n  }\r\n}]', '2024-09-28 10:50:00'),
(124, 101, 3, 'Course Summary and Next Steps', 'https://www.youtube.com/watch?v=7RZLQgi8n2A', '[{\r\n  \"title\": \"Course Summary and Next Steps\",\r\n  \"content\": {\r\n    \"introduction\": \"Reflect on what you have learned throughout the course.\",\r\n    \"resources\": \"Explore additional resources for further learning.\",\r\n    \"career\": \"Discuss potential career paths in AI and machine learning.\",\r\n    \"conclusion\": \"Continue your learning journey and stay updated in this rapidly evolving field.\"\r\n  }\r\n}]', '2024-09-28 10:55:00'),
(125, 101, 3, 'Final Thoughts and Farewell', 'https://www.youtube.com/watch?v=G-dBTT_SeLw', '[{\r\n  \"title\": \"Final Thoughts and Farewell\",\r\n  \"content\": {\r\n    \"introduction\": \"Wrap up the course with final thoughts and reflections.\",\r\n    \"journey\": \"Share your learning journey and experiences with the class.\",\r\n    \"future\": \"Encourage continued learning and exploration in AI and machine learning.\",\r\n    \"conclusion\": \"Thank you for participating and best of luck in your future endeavors!\"\r\n  }\r\n}]', '2024-09-28 11:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `python_qna`
--

CREATE TABLE `python_qna` (
  `id` int(11) NOT NULL,
  `questions` varchar(255) NOT NULL,
  `option_1` varchar(255) NOT NULL,
  `option_2` varchar(255) NOT NULL,
  `option_3` varchar(255) NOT NULL,
  `option_4` varchar(255) NOT NULL,
  `correct_option` varchar(255) NOT NULL,
  `level` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `python_qna`
--

INSERT INTO `python_qna` (`id`, `questions`, `option_1`, `option_2`, `option_3`, `option_4`, `correct_option`, `level`) VALUES
(1, 'Which of the function is use for print statement in Python?', 'print()', 'echo', 'cout<<', 'system.out.print()', 'print()', 1),
(2, 'What is the output of the following code: `print(type([]))`?', '<class \'list\'>', '<class \'tuple\'>', '<class \'dict\'>', '<class \'set\'>', '<class \'list\'>', 2),
(3, 'How do you start a comment in Python?', '/* Comment */', '// Comment', '# Comment', '-- Comment', '# Comment', 1),
(4, 'Which of the following is used to create an anonymous function in Python?', 'def', 'lambda', 'anonymous', 'func', 'lambda', 3),
(5, 'What is Python?', 'A high-level programming language', 'A type of database', 'A web development framework\r\n', 'A markup language', 'A high-level programming language', 1),
(6, 'Which of the following data types is immutable in Python?', 'List', 'Dictionary', 'Set', 'Tuple', 'Tuple', 1),
(7, 'What is the correct syntax to check if a variable x is equal to 10 in Python?', 'if x == 10:', 'if (x = 10):', 'if x := 10', 'if x === 10', 'if x == 10:', 1),
(8, 'Which of the following is used to define a list in Python?', '[]', '()', '{}', '<>', '[]', 1),
(9, 'Which operator is used for exponentiation in Python?', '^', '**', '*', '//', '**', 1),
(10, 'Which operator is used for floor division in Python?', '/', '%', '//', '^', '//', 1),
(11, 'What does the == operator do in Python?', 'Assigns a value', 'Checks for equality', 'Compares two strings', 'Increments a value', 'Checks for equality', 1),
(12, 'What will be the output of the following code?\r\nx = 10\r\ny = 3\r\nprint(x % y)', '0', '2', '1', '3', '1', 1);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `email_id` varchar(280) NOT NULL,
  `course_title` varchar(240) NOT NULL,
  `level` int(11) NOT NULL,
  `datentime` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Indexes for dumped tables
--

--
-- Indexes for table `courses`
--
ALTER TABLE `courses`
  ADD PRIMARY KEY (`c_id`);

--
-- Indexes for table `data_analytics_course`
--
ALTER TABLE `data_analytics_course`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `excel_course`
--
ALTER TABLE `excel_course`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `excel_qna`
--
ALTER TABLE `excel_qna`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `level`
--
ALTER TABLE `level`
  ADD PRIMARY KEY (`C_ID`);

--
-- Indexes for table `profiles`
--
ALTER TABLE `profiles`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `python_course`
--
ALTER TABLE `python_course`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `python_qna`
--
ALTER TABLE `python_qna`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
