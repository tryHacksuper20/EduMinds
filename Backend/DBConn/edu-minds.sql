-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Oct 02, 2024 at 08:30 PM
-- Server version: 10.4.24-MariaDB
-- PHP Version: 8.1.6

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `edu-minds`
--

-- --------------------------------------------------------

--
-- Table structure for table `courses`
--

CREATE TABLE `courses` (
  `c_id` int(11) NOT NULL,
  `title` varchar(250) NOT NULL,
  `description` varchar(500) NOT NULL,
  `imageUrl` varchar(240) NOT NULL,
  `professorName` varchar(200) NOT NULL,
  `duration` varchar(200) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `courses`
--

INSERT INTO `courses` (`c_id`, `title`, `description`, `imageUrl`, `professorName`, `duration`) VALUES
(101, 'Python', 'Python is a versatile, high-level programming language known for its simplicity, readability, and broad applicability across various fields like web development, data science, and AI.', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8E6Xlh2VtOsV4vrygfHVm6xKybmctIDBYnA&s', 'Dr. John Smith', '40 Hours'),
(102, 'Excel', 'Excel is a spreadsheet software by Microsoft used for data organization, analysis, and visualization, featuring functions, formulas, and pivot tables for efficient data management.', 'https://omtsdigest.com/wp-content/uploads/2016/02/excel-1598646848.jpeg', 'Dr. Alice Johnson', '30 Hours'),
(103, 'Data Analysis', 'Data Analysis is a multidisciplinary field that uses statistical methods, algorithms, and machine learning to extract insights and knowledge from structured and unstructured data for decision-making and predictive analysis.', 'https://www.fsm.ac.in/blog/wp-content/uploads/2022/07/FUqHEVVUsAAbZB0.jpg', 'Prof. Mark Davis', '40 Hours');

-- --------------------------------------------------------

--
-- Table structure for table `data_analytics_course`
--

CREATE TABLE `data_analytics_course` (
  `id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `level` tinyint(1) NOT NULL CHECK (`level` in (1,2,3)),
  `topic_name` varchar(255) NOT NULL,
  `video_url` varchar(255) NOT NULL,
  `articles` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `data_analytics_course`
--

INSERT INTO `data_analytics_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(1, 103, 1, 'Introduction to Data Analytics', 'https://youtu.be/5zEt1_Nkiio?si=7vL7_svQkoUsB5LG', '   {\r\n  \"title\": \"Introduction to Data Analytics\",\r\n  \"content\": {\r\n    \"introduction\": \"Data analytics is the process of analyzing raw data in order to draw meaningful insights. It plays a critical role in today\'s data-driven business environment where informed decisions can significantly affect success.\",\r\n    \"types_of_analytics\": {\r\n      \"descriptive\": \"Descriptive analytics involves summarizing historical data to understand what has happened in the past. It uses techniques such as data aggregation and data mining to provide insights.\",\r\n      \"diagnostic\": \"Diagnostic analytics digs deeper into data to understand why certain events happened. It uses drill-down, data discovery, and correlations to identify the root causes.\",\r\n      \"predictive\": \"Predictive analytics uses statistical models and machine learning algorithms to predict future outcomes based on historical data. It’s essential for forecasting trends and behaviors.\",\r\n      \"prescriptive\": \"Prescriptive analytics suggests actions that could be taken to affect desired outcomes. It goes beyond predicting future outcomes by providing actionable recommendations.\"\r\n    },\r\n    \"importance\": {\r\n      \"business_value\": \"Data analytics allows organizations to make better decisions, improve efficiency, and identify new opportunities. It can lead to improved customer satisfaction, cost savings, and competitive advantage.\",\r\n      \"personalized_experience\": \"By analyzing customer data, businesses can tailor experiences to individual preferences, leading to better customer retention and engagement.\",\r\n      \"future_trends\": \"Data analytics is crucial for predicting market trends, consumer behavior, and potential risks, allowing businesses to prepare and adapt accordingly.\"\r\n    },\r\n    \"tools_and_techniques\": {\r\n      \"excel\": \"Excel is commonly used for basic data analysis, including organizing and visualizing data. It’s user-friendly and widely accessible.\",\r\n      \"sql\": \"SQL is essential for querying relational databases, making it a powerful tool for extracting and manipulating data.\",\r\n      \"python\": \"Python is a versatile programming language used in data science for more complex data analysis tasks, such as statistical modeling and machine learning.\",\r\n      \"power_bi\": \"Power BI is a business analytics tool used to visualize data and share insights through interactive dashboards.\"\r\n    },\r\n    \"conclusion\": \"Data analytics is a transformative tool for businesses, helping them make data-driven decisions and stay competitive in an increasingly data-rich world. Whether it\'s through descriptive, diagnostic, predictive, or prescriptive methods, the insights gained from data analytics are invaluable.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(2, 103, 1, 'Excel Basic', 'https://youtu.be/FMSJXtwt6hE?si=bGYTNHXzvnJiBs9r', '', '2024-08-30 16:32:21'),
(3, 103, 2, 'Advanced Excel Part 1', 'https://youtu.be/ZmjjsfNH5nE?si=n3gnVLe08RXZjAAb', '   {\r\n  \"title\": \"Advanced Excel Part 1\",\r\n  \"content\": {\r\n    \"introduction\": \"Advanced Excel features enable users to perform more complex data analysis and visualization tasks. Mastering these tools can significantly enhance productivity and improve decision-making processes in business. This article covers key advanced features and techniques that every Excel user should know.\",\r\n    \"key_features\": {\r\n      \"pivot_tables\": \"Pivot tables are powerful tools for summarizing large datasets. They allow users to dynamically reorganize and analyze data without altering the original data set.\",\r\n      \"vlookup_and_hlookup\": \"These functions are used to search for specific data in tables. VLOOKUP allows users to look up values vertically, while HLOOKUP does so horizontally.\",\r\n      \"advanced_formulas\": {\r\n        \"nested_if\": \"Nested IF statements enable users to conduct complex logical tests. Example: =IF(A1>100, \'High\', IF(A1>50, \'Medium\', \'Low\'))\",\r\n        \"index_and_match\": \"Combining INDEX and MATCH functions allows for more flexible lookups than VLOOKUP. Example: =INDEX(B1:B10, MATCH(D1, A1:A10, 0))\"\r\n      },\r\n      \"data_validation\": \"Data validation helps maintain data integrity by restricting the type of data that can be entered in a cell, such as limiting entries to a list of options.\"\r\n    },\r\n    \"data_analysis_tools\": {\r\n      \"what-if_analysis\": {\r\n        \"goal_seek\": \"Goal Seek allows users to find the necessary input value to achieve a desired output in a formula.\",\r\n        \"scenario_manager\": \"Scenario Manager enables users to create and analyze different scenarios for their data.\"\r\n      },\r\n      \"power_query\": \"Power Query is a powerful tool for data transformation and preparation. It allows users to connect to various data sources, clean, and reshape data for analysis.\"\r\n    },\r\n    \"tips_for_advanced_users\": {\r\n      \"macros\": \"Macros automate repetitive tasks by recording a series of actions. Users can create custom functions and workflows to enhance efficiency.\",\r\n      \"advanced_charting\": \"Learn to create advanced charts such as waterfall, radar, and combo charts for more effective data visualization.\",\r\n      \"power_pivot\": \"Power Pivot allows for data modeling and advanced calculations using DAX (Data Analysis Expressions), enabling users to work with large datasets efficiently.\"\r\n    },\r\n    \"conclusion\": \"Advanced Excel features empower users to analyze data more effectively and create insightful visualizations. Mastering these tools can lead to better data-driven decisions and increased productivity. Practice using these techniques to fully leverage the power of Excel in your analysis.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(4, 103, 2, 'Advanced Excel Part 2', 'https://youtu.be/9sHGgIcHVfQ?si=Ksoxxl8MnDHl0Ev7', '   {\r\n  \"title\": \"Advanced Excel Part 2\",\r\n  \"content\": {\r\n    \"introduction\": \"In Advanced Excel Part 2, we delve deeper into powerful tools and techniques that can elevate your data analysis skills. This section focuses on advanced functionalities that can streamline your workflows and enhance your data manipulation capabilities.\",\r\n    \"advanced_data_analysis\": {\r\n      \"power_bi_integration\": \"Learn how to connect Excel to Power BI for advanced data visualizations and reporting capabilities. Power BI enables users to create interactive dashboards and gain insights from data.\",\r\n      \"data_modeling\": \"Understand how to create a data model using multiple tables, allowing you to perform complex analyses without losing performance. This includes creating relationships and utilizing DAX formulas.\",\r\n      \"array_formulas\": \"Array formulas can perform multiple calculations on one or more items in an array. For example: {=SUM(IF(A1:A10>100, B1:B10))} calculates the sum of B1:B10 for values in A1:A10 greater than 100.\"\r\n    },\r\n    \"advanced_visualization_techniques\": {\r\n      \"conditional_formatting\": \"Enhance your data presentation using conditional formatting to highlight trends and patterns. Learn to use formulas in conditional formatting for more customized rules.\",\r\n      \"sparklines\": \"Sparklines are miniature charts that fit within a cell. They provide a visual representation of data trends and can be used to summarize data series effectively.\"\r\n    },\r\n    \"automation_and_productivity\": {\r\n      \"vba_basics\": \"VBA (Visual Basic for Applications) is used for automating repetitive tasks in Excel. Learn to write simple scripts to improve efficiency and productivity.\",\r\n      \"using_tables\": \"Excel tables help manage and analyze data efficiently. Learn how to create structured tables for easier sorting, filtering, and analysis.\"\r\n    },\r\n    \"best_practices\": {\r\n      \"data_cleanup\": \"Always ensure your data is clean and formatted correctly before analysis. Use functions like TRIM, CLEAN, and TEXT to prepare your data.\",\r\n      \"documenting_your_work\": \"Document your formulas, methodologies, and any data transformations you apply. This practice aids in maintaining transparency and reproducibility.\"\r\n    },\r\n    \"conclusion\": \"Advanced Excel skills can significantly improve your ability to analyze and present data. By mastering these tools and techniques, you can unlock new levels of efficiency and insight in your data analysis workflows. Continued practice with these advanced features will prepare you for more complex analytical challenges.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(5, 103, 2, 'Power BI Part 1', 'https://youtu.be/KIlw5Up2hnk?si=PGEJa-Ik9ZfzoHd3', '   {\r\n  \"title\": \"Power BI Part 1\",\r\n  \"content\": {\r\n    \"introduction\": \"Power BI is a powerful business analytics tool that enables you to visualize your data and share insights across your organization or embed them in your app or website. In Part 1, we will explore the basics of Power BI, including its interface, features, and the fundamental concepts of data modeling.\",\r\n    \"getting_started\": {\r\n      \"installation\": \"To begin using Power BI, download the Power BI Desktop application from the Microsoft website. Follow the installation instructions to set it up on your machine.\",\r\n      \"interface_overview\": \"Power BI has a user-friendly interface that includes a ribbon for commands, a report view for designing visuals, a data view for modeling data, and a relationships view to manage data relationships.\"\r\n    },\r\n    \"data_sources\": {\r\n      \"connecting_to_data\": \"Power BI allows you to connect to a variety of data sources, including Excel, SQL Server, and cloud-based services like Azure and Salesforce. Use the \'Get Data\' option to import data from these sources.\",\r\n      \"transforming_data\": \"Power BI includes Power Query for data transformation, enabling you to clean, shape, and prepare your data for analysis. Use the Query Editor to perform operations like filtering, merging, and aggregating data.\"\r\n    },\r\n    \"data_modeling\": {\r\n      \"understanding_data_model\": \"A data model is a collection of tables and relationships that represent your data in Power BI. Understanding how to create and manage relationships between tables is crucial for effective reporting.\",\r\n      \"creating_relationships\": \"Learn to create relationships using the relationships view in Power BI. You can define one-to-many and many-to-many relationships to connect your data tables appropriately.\"\r\n    },\r\n    \"visualization_basics\": {\r\n      \"creating_visuals\": \"Power BI offers a variety of visualization options, including bar charts, line charts, and pie charts. Learn to create visuals by dragging fields onto the report canvas.\",\r\n      \"formatting_visuals\": \"Once your visuals are created, you can customize their appearance using the formatting pane. Adjust colors, labels, and tooltips to enhance clarity and aesthetics.\"\r\n    },\r\n    \"best_practices\": {\r\n      \"designing_reports\": \"When designing reports, keep user experience in mind. Use clear titles, appropriate visuals, and a logical layout to convey your data story effectively.\",\r\n      \"data_security\": \"Ensure your data is secure by managing access permissions and using row-level security if needed. Protect sensitive data while allowing users to access relevant insights.\"\r\n    },\r\n    \"conclusion\": \"In Power BI Part 1, you have learned the fundamentals of getting started with Power BI, including connecting to data sources, transforming data, and creating basic visualizations. Mastering these basics sets a solid foundation for more advanced features and analytics in future sessions.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(6, 103, 2, 'Power BI Part 2', 'https://youtu.be/O9OUqf2y4LA?si=7YYkaAyav-aGtbc3', '   \r\n  {\r\n    \"title\": \"Power BI Part 2\",\r\n    \"content\": {\r\n      \"introduction\": \"In Part 2 of our Power BI series, we will delve deeper into advanced functionalities that enhance your data analysis capabilities. We will cover topics such as DAX (Data Analysis Expressions), advanced data modeling techniques, and creating interactive reports.\",\r\n      \"dax_introduction\": {\r\n        \"what_is_dax\": \"DAX, or Data Analysis Expressions, is a formula language used in Power BI for data manipulation and analysis. It allows you to create calculated columns, measures, and custom calculations to enhance your reports.\",\r\n        \"creating_measures\": \"Measures are calculations that are performed on your data model. To create a measure, navigate to the data view, click on the \'New Measure\' button, and enter your DAX formula. For example, you can create a measure to calculate total sales by summing a sales column.\"\r\n      },\r\n      \"advanced_data_modeling\": {\r\n        \"star_schema\": \"Implementing a star schema is crucial for efficient data modeling in Power BI. A star schema consists of a central fact table surrounded by dimension tables, which enhances query performance and simplifies reporting.\",\r\n        \"using_calculated_columns\": \"Calculated columns are useful for adding new data fields to your tables based on existing data. Create them by using DAX expressions to perform row-level calculations.\"\r\n      },\r\n      \"creating_interactive_reports\": {\r\n        \"using_slicers\": \"Slicers are visual filters that allow users to interact with reports dynamically. Add slicers to your report to filter data based on user selections, enhancing user experience.\",\r\n        \"drillthrough_functionality\": \"Drillthrough allows users to navigate from summary data to detailed data. Set up drillthrough pages in your report to let users explore specific aspects of your data more thoroughly.\"\r\n      },\r\n      \"publishing_and_sharing_reports\": {\r\n        \"publishing_to_power_bi_service\": \"After creating your reports, publish them to the Power BI service for sharing and collaboration. Click on the \'Publish\' button in Power BI Desktop to upload your report.\",\r\n        \"sharing_and_permissions\": \"Manage sharing permissions in the Power BI service to control who can view or edit your reports. Use workspaces for collaboration within teams or organizations.\"\r\n      },\r\n      \"conclusion\": \"In Power BI Part 2, you learned about advanced functionalities such as DAX, data modeling best practices, and creating interactive reports. These skills will empower you to extract deeper insights from your data and share them effectively within your organization.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 16:32:21'),
(7, 103, 1, 'SQL Basic', 'https://youtu.be/lbvQmIs6OHw?si=1o-QYpRA60I-rwb_', '   \r\n  {\r\n    \"title\": \"SQL Basic\",\r\n    \"content\": {\r\n      \"introduction\": \"Structured Query Language (SQL) is a standard programming language specifically for managing and manipulating databases. Understanding SQL is essential for data analysts and data scientists, as it allows you to interact with databases and extract meaningful insights from data.\",\r\n      \"sql_syntax\": {\r\n        \"basic_queries\": \"The most fundamental operations in SQL include SELECT, INSERT, UPDATE, and DELETE. A simple SELECT query retrieves data from a database table. For example, to select all records from a table named \'Employees\', you can use the following syntax: SELECT * FROM Employees;\",\r\n        \"filtering_data\": \"You can filter query results using the WHERE clause. For instance, if you want to find employees with a specific title, you would use: SELECT * FROM Employees WHERE title = \'Manager\';\"\r\n      },\r\n      \"data_manipulation\": {\r\n        \"inserting_data\": \"To add new records to a table, you use the INSERT INTO statement. For example: INSERT INTO Employees (name, title) VALUES (\'John Doe\', \'Analyst\');\",\r\n        \"updating_data\": \"To modify existing records, use the UPDATE statement. For example, to change the title of an employee: UPDATE Employees SET title = \'Senior Analyst\' WHERE name = \'John Doe\';\",\r\n        \"deleting_data\": \"To remove records from a table, use the DELETE statement. For instance: DELETE FROM Employees WHERE name = \'John Doe\';\"\r\n      },\r\n      \"advanced_queries\": {\r\n        \"joining_tables\": \"SQL allows you to combine rows from two or more tables using JOIN clauses. For instance, to get employee names along with their department names, you can use: SELECT Employees.name, Departments.name FROM Employees JOIN Departments ON Employees.department_id = Departments.id;\",\r\n        \"grouping_data\": \"Use the GROUP BY clause to aggregate data. For example, to find the number of employees in each department: SELECT department_id, COUNT(*) FROM Employees GROUP BY department_id;\"\r\n      },\r\n      \"best_practices\": {\r\n        \"writing_clean_code\": \"Always write clear and understandable queries. Use comments to explain complex logic, and format your code for readability.\",\r\n        \"optimizing_queries\": \"To optimize performance, avoid using SELECT * in production queries. Specify only the columns you need.\"\r\n      },\r\n      \"conclusion\": \"Mastering SQL basics lays a solid foundation for advanced data manipulation and querying techniques. Practicing these fundamental concepts will enhance your ability to work with data effectively.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 16:32:21'),
(8, 103, 1, 'SQL DDL', 'https://youtu.be/GfoqC_7ZmuQ?si=sxZTYzTlKQeD3Q5U', '   \r\n  {\r\n    \"title\": \"SQL DDL\",\r\n    \"content\": {\r\n      \"introduction\": \"SQL Data Definition Language (DDL) is a subset of SQL used to define and manage all objects in a database. This includes creating, altering, and dropping tables, indexes, and other structures.\",\r\n      \"key_commands\": {\r\n        \"create_table\": {\r\n          \"description\": \"The CREATE TABLE statement is used to create a new table in the database. You can define columns, data types, and constraints during this process.\",\r\n          \"example\": \"CREATE TABLE Students (ID INT PRIMARY KEY, Name VARCHAR(100), Age INT);\"\r\n        },\r\n        \"alter_table\": {\r\n          \"description\": \"The ALTER TABLE statement modifies an existing table structure. You can add, drop, or modify columns and constraints.\",\r\n          \"example\": \"ALTER TABLE Students ADD COLUMN Email VARCHAR(255);\"\r\n        },\r\n        \"drop_table\": {\r\n          \"description\": \"The DROP TABLE statement deletes a table and its data from the database. Use this command with caution, as it cannot be undone.\",\r\n          \"example\": \"DROP TABLE Students;\"\r\n        },\r\n        \"create_index\": {\r\n          \"description\": \"The CREATE INDEX statement is used to create an index on a table, which can improve query performance by allowing faster data retrieval.\",\r\n          \"example\": \"CREATE INDEX idx_student_name ON Students(Name);\"\r\n        }\r\n      },\r\n      \"best_practices\": {\r\n        \"backup_data\": \"Always back up your data before performing DDL operations that modify the structure or delete data.\",\r\n        \"test_changes\": \"Use a development environment to test DDL changes before applying them to production databases.\",\r\n        \"use transactions\": \"When supported, use transactions to group DDL statements to ensure data integrity.\"\r\n      },\r\n      \"conclusion\": \"Understanding SQL DDL is crucial for database management. Mastering these commands allows you to create and maintain the structure of your databases effectively.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 16:32:21'),
(9, 103, 2, 'SQL DML & Order By', 'https://youtu.be/suN0rDob0FI?si=LyCUZjPIH2HsQURa', '   \r\n  {\r\n    \"title\": \"SQL DML & Order By\",\r\n    \"content\": {\r\n      \"introduction\": \"SQL DML (Data Manipulation Language) is a subset of SQL used to manage and manipulate data in existing database objects. DML includes commands that allow you to insert, update, delete, and query data. Understanding DML is essential for performing data operations effectively.\",\r\n      \"key_commands\": {\r\n        \"insert\": {\r\n          \"description\": \"The INSERT statement is used to add new records to a table. You can specify values for specific columns or insert data into all columns.\",\r\n          \"example\": \"INSERT INTO Students (ID, Name, Age) VALUES (1, \'John Doe\', 20);\"\r\n        },\r\n        \"update\": {\r\n          \"description\": \"The UPDATE statement modifies existing records in a table. You can update one or more columns based on specific conditions.\",\r\n          \"example\": \"UPDATE Students SET Age = 21 WHERE ID = 1;\"\r\n        },\r\n        \"delete\": {\r\n          \"description\": \"The DELETE statement removes records from a table. You can delete specific rows or all rows based on conditions.\",\r\n          \"example\": \"DELETE FROM Students WHERE ID = 1;\"\r\n        },\r\n        \"select\": {\r\n          \"description\": \"The SELECT statement retrieves data from one or more tables. You can specify columns and conditions for filtering results.\",\r\n          \"example\": \"SELECT * FROM Students WHERE Age > 18;\"\r\n        }\r\n      },\r\n      \"order_by_clause\": {\r\n        \"description\": \"The ORDER BY clause is used to sort the result set of a query by one or more columns. You can sort data in ascending (ASC) or descending (DESC) order.\",\r\n        \"example\": \"SELECT * FROM Students ORDER BY Name ASC;\"\r\n      },\r\n      \"best_practices\": {\r\n        \"use transactions\": \"When performing multiple DML operations, use transactions to ensure data integrity. This allows you to roll back changes if something goes wrong.\",\r\n        \"backup data\": \"Consider backing up data before performing delete operations, especially if working with large datasets.\"\r\n      },\r\n      \"conclusion\": \"Mastering SQL DML commands, including the use of the ORDER BY clause, is fundamental for data management. These commands enable you to efficiently manipulate and query data in your databases.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 16:32:21'),
(10, 103, 2, 'SQL Group By', 'https://youtu.be/oHZ8udrINbM?si=3Fq0KpAopST3wpvC', '   \r\n  {\r\n    \"title\": \"SQL Group By\",\r\n    \"content\": {\r\n      \"introduction\": \"The SQL GROUP BY clause is used in collaboration with aggregate functions to group the result set by one or more columns. It allows you to perform operations on groups of rows that share a common characteristic.\",\r\n      \"purpose\": {\r\n        \"description\": \"GROUP BY is typically used to aggregate data for reporting purposes, helping to summarize information and draw insights from datasets.\",\r\n        \"example\": \"For instance, if you want to know the total sales for each product category, you can group the sales data by the category column.\"\r\n      },\r\n      \"syntax\": {\r\n        \"basic_syntax\": \"SELECT column1, aggregate_function(column2) FROM table_name WHERE condition GROUP BY column1;\",\r\n        \"example\": \"SELECT category, SUM(sales) FROM products GROUP BY category;\"\r\n      },\r\n      \"aggregate_functions\": {\r\n        \"description\": \"Common aggregate functions used with GROUP BY include SUM(), AVG(), COUNT(), MAX(), and MIN(). These functions perform calculations on the grouped data.\",\r\n        \"examples\": {\r\n          \"sum\": \"SUM(sales) returns the total sales for each group.\",\r\n          \"avg\": \"AVG(age) returns the average age of the grouped records.\",\r\n          \"count\": \"COUNT(*) returns the number of records in each group.\"\r\n        }\r\n      },\r\n      \"having_clause\": {\r\n        \"description\": \"The HAVING clause is used to filter groups based on a condition. Unlike the WHERE clause, which filters rows, HAVING filters groups.\",\r\n        \"example\": \"SELECT category, COUNT(*) as count FROM products GROUP BY category HAVING COUNT(*) > 5;\"\r\n      },\r\n      \"best_practices\": {\r\n        \"be specific\": \"Only include columns in the SELECT statement that are either aggregated or included in the GROUP BY clause.\",\r\n        \"test with small datasets\": \"When learning, test your queries with smaller datasets to understand the output better.\"\r\n      },\r\n      \"conclusion\": \"The GROUP BY clause is a powerful tool in SQL for summarizing and analyzing data. By mastering its usage along with aggregate functions, you can gain valuable insights from your data.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 16:32:21'),
(11, 103, 2, 'SQL Joins', 'https://youtu.be/zN5soLiX0BQ?si=SMLCnT7UaiNS-zr-', '   \r\n  {\r\n    \"title\": \"SQL Joins\",\r\n    \"content\": {\r\n      \"introduction\": \"SQL Joins are used to combine rows from two or more tables based on a related column between them. They are essential for retrieving related data from multiple tables in a relational database.\",\r\n      \"types_of_joins\": {\r\n        \"inner_join\": {\r\n          \"description\": \"An INNER JOIN returns only the rows that have matching values in both tables.\",\r\n          \"syntax\": \"SELECT columns FROM table1 INNER JOIN table2 ON table1.common_column = table2.common_column;\",\r\n          \"example\": \"SELECT orders.id, customers.name FROM orders INNER JOIN customers ON orders.customer_id = customers.id;\"\r\n        },\r\n        \"left_join\": {\r\n          \"description\": \"A LEFT JOIN returns all rows from the left table and the matched rows from the right table. If there is no match, NULL values are returned for columns from the right table.\",\r\n          \"syntax\": \"SELECT columns FROM table1 LEFT JOIN table2 ON table1.common_column = table2.common_column;\",\r\n          \"example\": \"SELECT customers.name, orders.id FROM customers LEFT JOIN orders ON customers.id = orders.customer_id;\"\r\n        },\r\n        \"right_join\": {\r\n          \"description\": \"A RIGHT JOIN returns all rows from the right table and the matched rows from the left table. If there is no match, NULL values are returned for columns from the left table.\",\r\n          \"syntax\": \"SELECT columns FROM table1 RIGHT JOIN table2 ON table1.common_column = table2.common_column;\",\r\n          \"example\": \"SELECT orders.id, customers.name FROM orders RIGHT JOIN customers ON orders.customer_id = customers.id;\"\r\n        },\r\n        \"full_outer_join\": {\r\n          \"description\": \"A FULL OUTER JOIN returns all rows from both tables, with NULLs in places where there is no match.\",\r\n          \"syntax\": \"SELECT columns FROM table1 FULL OUTER JOIN table2 ON table1.common_column = table2.common_column;\",\r\n          \"example\": \"SELECT customers.name, orders.id FROM customers FULL OUTER JOIN orders ON customers.id = orders.customer_id;\"\r\n        },\r\n        \"cross_join\": {\r\n          \"description\": \"A CROSS JOIN returns the Cartesian product of the two tables, meaning it returns all possible combinations of rows.\",\r\n          \"syntax\": \"SELECT columns FROM table1 CROSS JOIN table2;\",\r\n          \"example\": \"SELECT customers.name, products.product_name FROM customers CROSS JOIN products;\"\r\n        }\r\n      },\r\n      \"best_practices\": {\r\n        \"use_on_conditions\": \"Always specify the join condition using the ON clause to avoid Cartesian products, unless a CROSS JOIN is intended.\",\r\n        \"alias_tables\": \"Use table aliases for better readability, especially when joining multiple tables.\"\r\n      },\r\n      \"conclusion\": \"SQL Joins are crucial for data analysis in relational databases. Understanding how to use different types of joins enables you to write more efficient and effective SQL queries to retrieve and analyze related data.\"\r\n    }\r\n  }\r\n  ', '2024-08-30 16:32:21'),
(12, 103, 1, 'Python Basic', 'https://youtu.be/TlkPGxRWKhk?si=LszCLdsG2xFnc-o_', '', '2024-08-30 16:32:21'),
(13, 103, 1, 'Exploratory Data Analysis (EDA)', 'https://youtu.be/czDQqnQT3yQ?si=e63nM10aker9lUc0', '   {\r\n  \"title\": \"Exploratory Data Analysis (EDA)\",\r\n  \"content\": {\r\n    \"introduction\": \"Exploratory Data Analysis (EDA) is the process of analyzing datasets to summarize their main characteristics, often using visual methods. It is an important initial step in data analysis, helping to uncover patterns, detect anomalies, and test hypotheses.\",\r\n    \"purpose_of_eda\": {\r\n      \"data_inspection\": \"EDA involves inspecting the data to identify its structure, missing values, and outliers. This step ensures the data is clean and ready for further analysis.\",\r\n      \"data_visualization\": \"Visualization techniques such as histograms, box plots, and scatter plots are used to gain insights into the data distribution and relationships between variables.\",\r\n      \"hypothesis_generation\": \"EDA helps in forming hypotheses about the data and relationships among variables, laying the groundwork for further analysis or modeling.\",\r\n      \"data_transformation\": \"Transforming or cleaning data is often necessary to make it suitable for more complex analysis, such as machine learning or statistical modeling.\"\r\n    },\r\n    \"steps_of_eda\": {\r\n      \"data_collection\": \"Gathering relevant data from different sources, ensuring it is suitable for analysis and aligned with the objectives of the study.\",\r\n      \"data_cleaning\": \"Identifying and handling missing values, duplicate records, and outliers to improve the quality of the data.\",\r\n      \"data_visualization\": \"Creating visual representations like bar charts, line graphs, and scatter plots to explore data distribution and identify trends or correlations.\",\r\n      \"statistical_summaries\": \"Generating summary statistics such as mean, median, variance, and standard deviation to get a quantitative sense of the data.\"\r\n    },\r\n    \"importance\": {\r\n      \"understanding_data\": \"EDA provides an in-depth understanding of the data, enabling analysts to see beyond basic numbers and draw actionable insights.\",\r\n      \"decision_support\": \"It aids in making informed decisions regarding data preprocessing, feature selection, and the choice of statistical methods or models to apply.\",\r\n      \"identifying_patterns\": \"EDA helps in spotting underlying trends, patterns, and correlations, which can lead to more informed conclusions and predictions.\"\r\n    },\r\n    \"tools_and_techniques\": {\r\n      \"python\": \"Python libraries like Pandas, Matplotlib, and Seaborn are widely used for conducting EDA due to their flexibility and extensive functionality.\",\r\n      \"r_programming\": \"R is popular for EDA, particularly with its visualization packages like ggplot2 and its data manipulation capabilities through dplyr.\",\r\n      \"tableau\": \"Tableau is a data visualization tool that simplifies EDA with its drag-and-drop interface, allowing users to build interactive and insightful dashboards.\",\r\n      \"jupyter_notebooks\": \"Jupyter Notebooks are commonly used for performing EDA in an iterative manner, as they allow for combining code, visualizations, and markdown for notes in a single document.\"\r\n    },\r\n    \"conclusion\": \"Exploratory Data Analysis is an essential step in the data analysis process, providing a foundation for further data exploration, statistical modeling, and machine learning. By applying visualization, summary statistics, and pattern recognition techniques, EDA helps uncover key insights and shape the direction of deeper analysis.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(14, 103, 1, 'Data Visualization', 'https://youtu.be/Z6ToYVvEi2o?si=8FjlyDq9yft6ntW-', '    \r\n  { \r\n    \"title\": \"Data Visualization\", \r\n    \"content\": { \r\n      \"introduction\": \"Data visualization is the graphical representation of information and data. By using visual elements like charts, graphs, and maps, data visualization tools provide an accessible way to see and understand trends, outliers, and patterns in data.\", \r\n      \"importance\": { \r\n        \"understanding_data\": \"Data visualization helps to make complex data more understandable by simplifying it into visual formats.\", \r\n        \"decision_making\": \"It facilitates better decision-making by allowing stakeholders to see data-driven insights at a glance.\", \r\n        \"storytelling\": \"Effective visualization can tell a story about the data, engaging the audience and guiding them through the insights.\" \r\n      }, \r\n      \"common_tools\": { \r\n        \"tableau\": \"Tableau is a powerful data visualization tool that allows users to create interactive and shareable dashboards.\", \r\n        \"power_bi\": \"Power BI is another popular tool that provides robust analytics and visualization capabilities.\", \r\n        \"matplotlib\": \"In Python, Matplotlib is a widely used library for creating static, animated, and interactive visualizations.\" \r\n      }, \r\n      \"techniques\": { \r\n        \"bar_charts\": \"Bar charts are used to compare different categories of data. They are particularly useful for showing changes over time.\", \r\n        \"line_charts\": \"Line charts are ideal for showing trends over time and can display multiple data series.\", \r\n        \"scatter_plots\": \"Scatter plots help to identify relationships between two variables and can show clustering in data.\" \r\n      }, \r\n      \"best_practices\": { \r\n        \"keep_it_simple\": \"Avoid clutter. A clean design with a clear focus is often more effective.\", \r\n        \"choose_the_right_chart\": \"Select the appropriate type of visualization based on the data and the story you want to tell.\", \r\n        \"label_your_data\": \"Always label your axes, legends, and data points to ensure clarity.\" \r\n      }, \r\n      \"conclusion\": \"In conclusion, data visualization is a critical skill in the field of data analytics. It transforms raw data into visual formats that enhance understanding, support decision-making, and tell compelling stories.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 16:32:21'),
(15, 103, 1, 'Top 5 Data Analyst Projects for Resume', 'https://youtu.be/a16r5YaYsdE?si=nbsPtg2zJsViEeUE', '    \r\n  { \r\n    \"title\": \"Top 5 Data Analyst Projects for Resume\", \r\n    \"content\": { \r\n      \"introduction\": \"In the competitive field of data analytics, having practical projects on your resume can significantly enhance your job prospects. Showcasing real-world applications of your skills demonstrates your capability to analyze data and derive actionable insights. Here are the top five data analyst projects that can make your resume stand out.\", \r\n      \"projects\":     \r\n        { \r\n          \"title\": \"Customer Segmentation Analysis\", \r\n          \"description\": \"This project involves analyzing customer data to identify distinct segments based on purchasing behavior. Using clustering techniques, you can group customers and create tailored marketing strategies for each segment, thereby improving customer engagement and retention.\" \r\n        }, \r\n        { \r\n          \"title\": \"Sales Forecasting\", \r\n          \"description\": \"In this project, you all use historical sales data to predict future sales. Utilizing time series analysis or machine learning models, you can identify trends and seasonal patterns, which helps businesses plan inventory and budget more effectively.\" \r\n        }, \r\n        { \r\n          \"title\": \"A/B Testing for Marketing Campaigns\", \r\n          \"description\": \"Conducting A/B tests allows you to evaluate the effectiveness of different marketing strategies. By analyzing the performance of various campaigns through statistical methods, you can determine which approach yields the highest conversion rates and ROI.\" \r\n        }, \r\n        { \r\n          \"title\": \"Web Analytics Dashboard\", \r\n          \"description\": \"Creating a dashboard using tools like Tableau or Power BI to visualize website traffic, user behavior, and conversion metrics can provide valuable insights. This project showcases your ability to communicate data-driven insights effectively and your proficiency in data visualization tools.\" \r\n        }, \r\n        { \r\n          \"title\": \"Sentiment Analysis on Social Media\", \r\n          \"description\": \"In this project, you all analyze social media data to gauge public sentiment regarding a brand or product. By using natural language processing techniques, you can extract insights from customer feedback, helping businesses understand consumer perceptions and improve their strategies.\" \r\n        } \r\n        , \r\n      \"conclusion\": \"These projects not only enhance your data analytics skills but also provide concrete examples to discuss in interviews. When presenting these projects, emphasize the methodologies used, the insights gained, and the impact of your findings on business decisions. Showcasing your practical experience can significantly improve your chances of landing a data analyst position.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 16:32:21'),
(16, 103, 2, 'Data Analysis End-to-End Project for RESUME Part 1', 'https://youtu.be/1TmrFEHTg54?si=d1F7D3OwdPOv9WV7', '    \r\n  { \r\n    \"title\": \"Data Analysis End-to-End Project for RESUME Part 1\", \r\n    \"content\": { \r\n      \"introduction\": \"An end-to-end data analysis project demonstrates your ability to take a data project from inception to conclusion. It highlights your skills in data collection, cleaning, analysis, and visualization. In Part 1, we will cover the initial stages of an end-to-end data analysis project.\", \r\n      \"phases\": { \r\n        \"1. Defining the Problem\": { \r\n          \"description\": \"The first step is to clearly define the problem you want to solve or the question you want to answer. This could involve discussions with stakeholders or a review of existing data to identify gaps and opportunities.\", \r\n          \"example\": \"For instance, if you are analyzing customer data, you might define the problem as understanding the factors that influence customer churn.\" \r\n        }, \r\n        \"2. Data Collection\": { \r\n          \"description\": \"Once the problem is defined, the next step is to gather the data needed for analysis. This could involve extracting data from databases, using APIs to pull data from online sources, or even conducting surveys to collect primary data.\", \r\n          \"example\": \"You might collect sales data, customer demographics, and interaction logs to analyze customer behavior.\" \r\n        }, \r\n        \"3. Data Cleaning\": { \r\n          \"description\": \"Raw data often contains inaccuracies or inconsistencies that can skew your analysis. Data cleaning involves identifying and correcting these issues, which may include handling missing values, removing duplicates, and standardizing formats.\", \r\n          \"example\": \"You may need to remove entries with null values or correct formatting errors in date fields.\" \r\n        }, \r\n        \"4. Exploratory Data Analysis (EDA)\": { \r\n          \"description\": \"EDA involves summarizing the main characteristics of the data, often using visual methods. This step helps you understand the data distribution and identify patterns or anomalies that could inform your analysis.\", \r\n          \"example\": \"You could use visualizations like histograms and scatter plots to examine relationships between variables.\" \r\n        } \r\n      }, \r\n      \"conclusion\": \"In Part 1, we have covered the essential phases of defining the problem, collecting data, cleaning data, and performing exploratory data analysis. These foundational steps are crucial for a successful end-to-end data analysis project. In Part 2, we will delve deeper into the analysis and visualization stages.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 16:32:21'),
(17, 103, 2, 'Data Analysis End-to-End Project for RESUME Part 2', 'https://youtu.be/ze8eQpfs3_A?si=d3dQAi3UAbrGI0_U', '    \r\n  { \r\n    \"title\": \"Data Analysis End-to-End Project for RESUME Part 2\", \r\n    \"content\": { \r\n      \"introduction\": \"In Part 2 of our end-to-end data analysis project series, we will focus on the analysis, visualization, and presentation of findings. This phase is critical as it transforms raw data insights into actionable intelligence.\", \r\n      \"phases\": { \r\n        \"5. Data Analysis\": { \r\n          \"description\": \"In this phase, you will apply various analytical techniques to uncover patterns and insights in your data. This could involve statistical analysis, machine learning, or other methodologies depending on your project goals.\", \r\n          \"example\": \"For instance, you might use regression analysis to predict sales based on historical data.\" \r\n        }, \r\n        \"6. Data Visualization\": { \r\n          \"description\": \"Data visualization is essential for communicating your findings effectively. Use visual tools like charts, graphs, and dashboards to illustrate trends and insights derived from your analysis.\", \r\n          \"example\": \"You could create a dashboard in Tableau or Power BI that displays key metrics like sales performance, customer engagement, and product trends.\" \r\n        }, \r\n        \"7. Drawing Conclusions\": { \r\n          \"description\": \"After analysis and visualization, summarize the insights you’ve gained. This step involves interpreting the results in the context of the original problem and determining actionable next steps.\", \r\n          \"example\": \"If you discover that a particular customer segment has a high churn rate, you might recommend targeted retention strategies for that group.\" \r\n        }, \r\n        \"8. Presenting Findings\": { \r\n          \"description\": \"Finally, presenting your findings to stakeholders is crucial. This could involve preparing a formal report, creating a presentation, or hosting a meeting to discuss your results and recommendations.\", \r\n          \"example\": \"You could prepare a PowerPoint presentation summarizing your project methodology, key findings, and recommendations for the business.\" \r\n        } \r\n      }, \r\n      \"conclusion\": \"In Part 2, we have covered the advanced phases of data analysis, visualization, and presenting findings. These steps are essential for effectively communicating your insights and making data-driven decisions. Completing this end-to-end project showcases your skills to potential employers.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 16:32:21'),
(18, 103, 2, 'Data Analytics PowerBI Dashboard Project for Resume', 'https://youtu.be/jt0rcsCSs2s?si=lel9Syp1HH3ZFAKw', '    \r\n  { \r\n    \"title\": \"Data Analytics PowerBI Dashboard Project for Resume\", \r\n    \"content\": { \r\n      \"introduction\": \"Creating a Power BI dashboard is a powerful way to visualize data and gain insights. In this project, we will walk through the essential steps to build an interactive dashboard that can impress potential employers.\", \r\n      \"project_steps\": { \r\n        \"1. Define Objectives\": { \r\n          \"description\": \"Begin by clearly defining the objectives of your dashboard. What key metrics do you want to display? Who is your target audience? Understanding these factors will guide your design and data selection.\", \r\n          \"example\": \"For instance, if you are working for a retail company, you might want to visualize sales performance, customer demographics, and inventory levels.\" \r\n        }, \r\n        \"2. Data Collection\": { \r\n          \"description\": \"Collect the necessary data from various sources. This could include databases, Excel files, or online services. Ensure the data is clean and formatted for analysis.\", \r\n          \"example\": \"You might connect to a SQL database containing sales records or import an Excel sheet with customer information.\" \r\n        }, \r\n        \"3. Data Modeling\": { \r\n          \"description\": \"In Power BI, you need to create relationships between different data tables. This step is crucial for effective data analysis and reporting.\", \r\n          \"example\": \"If you have sales and customer tables, establish a relationship based on customer IDs.\" \r\n        }, \r\n        \"4. Designing the Dashboard\": { \r\n          \"description\": \"Use Power BI’s visualization tools to create interactive elements like charts, tables, and slicers. Design your dashboard for clarity and ease of use.\", \r\n          \"example\": \"Create a line chart to display sales trends over time and a pie chart to show sales distribution by product category.\" \r\n        }, \r\n        \"5. Adding Interactivity\": { \r\n          \"description\": \"Enhance user experience by adding interactive features such as filters and drill-down options. This allows users to explore data in more depth.\", \r\n          \"example\": \"Implement slicers for date ranges or product categories, enabling users to filter the data dynamically.\" \r\n        }, \r\n        \"6. Testing and Feedback\": { \r\n          \"description\": \"Before finalizing your dashboard, test it thoroughly. Gather feedback from users to ensure it meets their needs and expectations.\", \r\n          \"example\": \"Share your dashboard with a colleague and ask for their input on usability and functionality.\" \r\n        }, \r\n        \"7. Presentation and Sharing\": { \r\n          \"description\": \"Once the dashboard is complete, present it to stakeholders or include it in your portfolio. Highlight the insights derived from the data.\", \r\n          \"example\": \"Prepare a presentation that walks through your dashboard, explaining key metrics and insights to your audience.\" \r\n        } \r\n      }, \r\n      \"conclusion\": \"Building a Power BI dashboard project demonstrates your data analytics skills and ability to create meaningful visualizations. This project can be a standout feature on your resume, showcasing your proficiency in data analysis and visualization tools.\" \r\n    } \r\n  } \r\n  ', '2024-08-30 16:32:21');
INSERT INTO `data_analytics_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(19, 103, 3, 'Machine Learning Fundamentals', 'https://youtu.be/5zEt1_Nkiio?si=7vL7_svQkoUsB5LG', '   {\r\n  \"title\": \"Machine Learning Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Machine learning is a subset of artificial intelligence that involves training algorithms to make predictions or decisions based on data. It is a key tool in data science for extracting insights from complex datasets.\",\r\n    \"types_of_machine_learning\": {\r\n      \"supervised_learning\": \"Supervised learning involves training models on labeled data to make predictions on new, unseen data. It is commonly used for classification and regression tasks.\",\r\n      \"unsupervised_learning\": \"Unsupervised learning involves training models on unlabeled data to discover patterns or relationships. It is often used for clustering and dimensionality reduction.\",\r\n      \"reinforcement_learning\": \"Reinforcement learning involves training models to make decisions in complex environments. It is commonly used in robotics and game playing.\",\r\n    },\r\n    \"machine_learning_algorithms\": {\r\n      \"linear_regression\": \"Linear regression is a supervised learning algorithm used for predicting continuous outcomes. It is a linear model that assumes a direct relationship between the input features and the target variable.\",\r\n      \"decision_trees\": \"Decision trees are a type of supervised learning algorithm used for classification and regression tasks. They work by recursively partitioning the data into smaller subsets based on the input features.\",\r\n      \"random_forests\": \"Random forests are an ensemble learning algorithm used for classification and regression tasks. They work by combining multiple decision trees to improve the accuracy and robustness of the model.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for classification tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for classification tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for classification tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in machine learning. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best machine learning algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyperparameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of a machine learning algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Machine learning is a powerful tool in data science for extracting insights from complex datasets. By understanding the fundamentals of machine learning, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(20, 103, 3, 'Deep Learning Fundamentals', 'https://youtu.be/FMSJXtwt6hE?si=bGYTNHXzvnJiBs9r', '   {\r\n  \"title\": \"Deep Learning Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Deep learning is a subset of machine learning that involves training artificial neural networks to make predictions or decisions based on data. It is a key tool in data science for extracting insights from complex datasets.\",\r\n    \"types_of_neural_networks\": {\r\n      \"feedforward_networks\": \"Feedforward networks are a type of neural network where the data flows only in one direction. They are commonly used for classification and regression tasks.\",\r\n      \"recurrent_neural_networks\": \"Recurrent neural networks are a type of neural network where the data flows in a loop. They are commonly used for sequence prediction tasks such as language modeling and speech recognition.\",\r\n      \"convolutional_neural_networks\": \"Convolutional neural networks are a type of neural network that uses convolutional and pooling layers to extract features from data. They are commonly used for image and video classification tasks.\", \r\n    },\r\n    \"deep_learning_algorithms\": {\r\n      \"backpropagation\": \"Backpropagation is a supervised learning algorithm used for training neural networks. It involves minimizing the error between the predicted output and the actual output.\",\r\n      \"stochastic_gradient_descent\": \"Stochastic gradient descent is an optimization algorithm used for training neural networks. It involves updating the model parameters based on the gradient of the loss function.\",\r\n      \"adam_optimizer\": \"Adam optimizer is an optimization algorithm used for training neural networks. It involves adapting the learning rate based on the magnitude of the gradient.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for classification tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for classification tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for classification tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in deep learning. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best deep learning algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyperparameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of a deep learning algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Deep learning is a powerful tool in data science for extracting insights from complex datasets. By understanding the fundamentals of deep learning, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(21, 103, 3, 'Natural Language Processing Fundamentals', 'https://youtu.be/lbvQmIs6OHw?si=1o-QYpRA60I-rwb_', '   {\r\n  \"title\": \"Natural Language Processing Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Natural language processing is a subset of artificial intelligence that involves training algorithms to process and understand human language. It is a key tool in data science for extracting insights from text data.\",\r\n    \"types_of_nlp\": {\r\n      \"text_classification\": \"Text classification is a type of NLP task that involves classifying text into predefined categories. It is commonly used for sentiment analysis and spam detection.\",\r\n      \"named_entity_recognition\": \"Named entity recognition is a type of NLP task that involves identifying and extracting named entities from text. It is commonly used for information extraction and question answering.\",\r\n      \"language_modeling\": \"Language modeling is a type of NLP task that involves predicting the next word in a sequence of text. It is commonly used for language translation and text generation.\",\r\n    },\r\n    \"nlp_algorithms\": {\r\n      \"rule_based_approach\": \"Rule-based approach is a type of NLP algorithm that involves using hand-coded rules to process and understand human language.\",\r\n      \"machine_learning_approach\": \"Machine learning approach is a type of NLP algorithm that involves training machine learning models on large datasets to process and understand human language.\",\r\n      \"deep_learning_approach\": \"Deep learning approach is a type of NLP algorithm that involves training deep neural networks on large datasets to process and understand human language.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for NLP tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for NLP tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for NLP tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in NLP. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best NLP algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyper parameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of an NLP algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Natural language processing is a powerful tool in data science for extracting insights from text data. By understanding the fundamentals of NLP, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(22, 103, 3, 'Big Data Fundamentals', 'https://youtu.be/GfoqC_7ZmuQ?si=sxZTYzTlKQeD3Q5U', '   {\r\n  \"title\": \"Big Data Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Big data refers to the large and complex datasets that are difficult to process using traditional data processing tools. It is a key tool in data science for extracting insights from large datasets.\",\r\n    \"types_of_big_data\": {\r\n      \"structured_data\": \"Structured data is a type of big data that is organized in a predefined format. It is commonly used for relational databases and data warehouses.\",\r\n      \"unstructured_data\": \"Unstructured data is a type of big data that is not organized in a predefined format. It is commonly used for text, image, and video data.\",\r\n      \"semi_structured_data\": \"Semi-structured data is a type of big data that is partially organized in a predefined format. It is commonly used for XML and JSON data.\",\r\n    },\r\n    \"big_data_technologies\": {\r\n      \"hadoop\": \"Hadoop is a big data technology that involves using a distributed computing framework to process large datasets.\",\r\n      \"spark\": \"Spark is a big data technology that involves using an in-memory computing framework to process large datasets.\",\r\n      \"no_sql_databases\": \"NoSQL databases are a type of big data technology that involves using non-relational databases to store and process large datasets.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for big data tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for big data tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for big data tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in big data. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best big data algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyperparameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of a big data algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Big data is a powerful tool in data science for extracting insights from large datasets. By understanding the fundamentals of big data, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21'),
(23, 103, 3, 'Cloud Computing Fundamentals', 'https://youtu.be/oHZ8udrINbM?si=3Fq0KpAopST3wpvC', '   {\r\n  \"title\": \"Cloud Computing Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Cloud computing refers to the delivery of computing services over the internet. It is a key tool in data science for extracting insights from large datasets.\",\r\n    \"types_of_cloud_computing\": {\r\n      \"public_cloud\": \"Public cloud is a type of cloud computing that involves using a third-party provider to deliver computing services over the internet.\",\r\n      \"private_cloud\": \"Private cloud is a type of cloud computing that involves using a private network to deliver computing services over the internet.\",\r\n      \"hybrid_cloud\": \"Hybrid cloud is a type of cloud computing that involves using a combination of public and private clouds to deliver computing services over the internet.\",\r\n    },\r\n    \"cloud_computing_technologies\": {\r\n      \"aws\": \"AWS is a cloud computing technology that involves using a suite of services to deliver computing services over the internet.\",\r\n      \"azure\": \"Azure is a cloud computing technology that involves using a suite of services to deliver computing services over the internet.\",\r\n      \"google_cloud\": \"Google Cloud is a cloud computing technology that involves using a suite of services to deliver computing services over the internet.\",\r\n    },\r\n    \"evaluation_metrics\": {\r\n      \"accuracy\": \"Accuracy is a common evaluation metric used for cloud computing tasks. It measures the proportion of correctly classified instances.\",\r\n      \"precision\": \"Precision is a common evaluation metric used for cloud computing tasks. It measures the proportion of true positives among all positive predictions.\",\r\n      \"recall\": \"Recall is a common evaluation metric used for cloud computing tasks. It measures the proportion of true positives among all actual positive instances.\",\r\n    },\r\n    \"best_practices\": {\r\n      \"data_preprocessing\": \"Data preprocessing is a critical step in cloud computing. It involves cleaning, transforming, and preparing the data for modeling.\",\r\n      \"model_selection\": \"Model selection is the process of choosing the best cloud computing algorithm for a given problem. It involves evaluating different models and selecting the one that performs best.\",\r\n      \"hyperparameter_tuning\": \"Hyperparameter tuning is the process of adjusting the parameters of a cloud computing algorithm to improve its performance. It involves using techniques such as grid search and cross-validation.\",\r\n    },\r\n    \"conclusion\": \"Cloud computing is a powerful tool in data science for extracting insights from large datasets. By understanding the fundamentals of cloud computing, you can apply these techniques to a wide range of problems and domains.\"\r\n  }\r\n}  ', '2024-08-30 16:32:21');

-- --------------------------------------------------------

--
-- Table structure for table `data_analytics_qna`
--

CREATE TABLE `data_analytics_qna` (
  `id` int(11) NOT NULL,
  `questions` varchar(255) NOT NULL,
  `option_1` varchar(255) NOT NULL,
  `option_2` varchar(255) NOT NULL,
  `option_3` varchar(255) NOT NULL,
  `option_4` varchar(255) NOT NULL,
  `correct_option` varchar(255) NOT NULL,
  `level` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `data_analytics_qna`
--

INSERT INTO `data_analytics_qna` (`id`, `questions`, `option_1`, `option_2`, `option_3`, `option_4`, `correct_option`, `level`) VALUES
(1, 'What is the primary purpose of Data Analytics?', 'To create large databases', 'To find patterns and insights in data', 'To perform complex mathematical operations', 'To store data in the cloud', 'To find patterns and insights in data', 1),
(2, 'Which of the following is NOT a typical phase in Data Analytics?', 'Data Collection', 'Data Cleaning', 'Data Analysis', 'Data Filing', 'Data Filing', 1),
(3, 'In Data Analytics, what does ETL stand for', 'Evaluate, Test, Load', 'Extract, Transform, Load', 'Estimate, Transform, List', 'Extract, Transfer, Load', 'Evaluate, Test, Load', 1),
(4, 'What is the significance of data visualization in Data Analytics?', 'It is used to store large amounts of data', 'It helps in understanding data by representing it graphically', 'It is used to speed up data processing', 'It removes duplicates from the dataset', 'It helps in understanding data by representing it graphically', 1),
(5, 'Which of the following is a common challenge in Data Analytics?', 'Lack of tools for analysis', 'Unlimited resources for data storage', 'Poor data quality and inconsistencies', 'Absence of cloud storage', 'Poor data quality and inconsistencies', 1),
(6, 'What is the main role of a Data Analyst?', 'To interpret data and provide insights to help decision-making', 'To manage hardware resources', 'To configure databases', 'To develop websites and applications', 'To interpret data and provide insights to help decision-making', 1),
(7, 'Which of the following best defines \'Predictive Analytics\'?', 'Analyzing historical data to make predictions about future events', 'Cleaning data to remove errors and outliers', 'Visualizing data trends over time', 'Summarizing large datasets into reports', 'Analyzing historical data to make predictions about future events', 1);

-- --------------------------------------------------------

--
-- Table structure for table `excel_course`
--

CREATE TABLE `excel_course` (
  `id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `level` int(11) NOT NULL,
  `topic_name` varchar(400) NOT NULL,
  `video_url` varchar(280) NOT NULL,
  `articles` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `created_at` varchar(240) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `excel_course`
--

INSERT INTO `excel_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(1, 102, 1, 'Excel Introduction', 'https://youtu.be/310z5K14JXw?si=9Y6zm5-HVblqJdHM', '{\r\n    \"title\": \"Excel Introduction\",\r\n    \"content\": {\r\n        \"introduction\": \"Microsoft Excel is a powerful spreadsheet application that allows users to organize, format, and calculate data with formulas using a system of rows and columns. It is widely used for financial analysis, data management, and visualization.\",\r\n        \"main_content\": \"### 1. What is Excel?\\nExcel is part of the Microsoft Office Suite and is utilized for creating spreadsheets, graphs, and charts. It enables users to manipulate data for various tasks, including budgeting, data analysis, and forecasting.\\n\\n### 2. Getting Started with Excel\\n- **Interface Overview:** Familiarize yourself with the Excel interface, including the ribbon, workbook, worksheets, cells, and the status bar.\\n- **Creating a New Workbook:** Click on \\\"New\\\" from the File menu to create a new workbook. You can choose from various templates or start with a blank workbook.\",\r\n        \"conclusion\": \"Excel is a versatile tool that offers extensive features for working with data. Whether you are managing a personal budget or analyzing a large dataset, understanding the basics of Excel will significantly improve your productivity.\"\r\n    }\r\n}', '2024-10-02 20:16:21'),
(2, 102, 2, 'Excel Functions Overview', 'https://youtu.be/Yo7ellmlH4Q?si=qTdZfkTXEo4rSnom', '{\r\n    \"title\": \"Excel Functions Overview\",\r\n    \"content\": {\r\n        \"introduction\": \"Excel functions are predefined formulas that perform calculations using specific values, called arguments, in a particular order. Functions are an essential part of Excel, enabling users to perform complex calculations with ease and accuracy. This article provides an overview of some commonly used Excel functions.\",\r\n        \"main_content\": \"### 1. What are Functions?\\nFunctions in Excel are built-in formulas that help users perform calculations or data analysis without having to write complex formulas from scratch. Functions can range from simple calculations, like summing numbers, to more complex operations, such as statistical analysis.\\n\\n### 2. Common Excel Functions\\n- **SUM:** The SUM function adds together a range of numbers. For example, to sum the values in cells A1 to A10, use: `=SUM(A1:A10)`.\\n- **AVERAGE:** The AVERAGE function calculates the mean of a group of numbers. For example, to find the average of the values in cells B1 to B10, use: `=AVERAGE(B1:B10)`.\\n- **COUNT:** The COUNT function counts the number of cells that contain numbers. For example, to count the number of numeric entries in cells C1 to C10, use: `=COUNT(C1:C10)`.\\n- **IF:** The IF function returns one value if a condition is true and another value if it is false. For example, to check if the value in cell D1 is greater than 100, use: `=IF(D1>100, \'Above 100\', \'100 or Below\')`.\\n- **VLOOKUP:** The VLOOKUP function searches for a value in the first column of a range and returns a value in the same row from a specified column. For example, to find the price of a product in a table, use: `=VLOOKUP(E1, A2:C10, 3, FALSE)`.\",\r\n        \"conclusion\": \"Mastering Excel functions is crucial for anyone looking to leverage Excel for data analysis and reporting. By understanding and utilizing these functions, users can significantly enhance their productivity and the accuracy of their calculations.\"\r\n    }\r\n}', '2024-10-02 20:27:04'),
(3, 102, 1, 'Excel Intermediate', 'https://youtu.be/Yo7ellmlH4Q?si=3BOPEk_LYVBiam2C', '{\r\n    \"title\": \"Excel Intermediate\",\r\n    \"content\": {\r\n        \"introduction\": \"The intermediate level of Excel builds on the basics and introduces more advanced tools and functions for data management and analysis. This article covers key Excel features that help users streamline workflows and work with larger data sets efficiently.\",\r\n        \"main_content\": \"### 1. Working with Tables\\nTables in Excel allow you to organize large sets of data, making it easier to filter, sort, and apply formulas to entire columns. To create a table, select your data range and go to \'Insert > Table.\'\\n\\n### 2. Using Conditional Formatting\\nConditional formatting enables you to format cells based on specific criteria. For instance, you can highlight cells that contain values greater than 100 by going to \'Home > Conditional Formatting\' and setting your rule.\\n\\n### 3. Data Validation\\nData validation allows you to control what users can enter into a cell. You can set rules like only allowing numbers or dates within a specific range. Find this option under \'Data > Data Validation.\'\\n\\n### 4. Working with PivotTables\\nPivotTables help summarize large data sets by grouping and filtering data. You can create a PivotTable by selecting your data and going to \'Insert > PivotTable.\' Then, you can drag fields into the rows, columns, values, and filter areas to organize your data.\\n\\n### 5. Lookup and Reference Functions\\n- **INDEX and MATCH:** These functions are used together to create more flexible lookups than VLOOKUP. INDEX returns the value of a cell in a table, and MATCH provides the relative position of a value in a range. For example, `=INDEX(A1:B10, MATCH(D1, A1:A10, 0), 2)` returns the value in the matching row and specified column.\\n- **HLOOKUP:** Similar to VLOOKUP, HLOOKUP searches for a value in the top row of a table and returns a value in the same column from a specified row.\\n\\n### 6. Text Functions\\n- **CONCATENATE:** Combines multiple text strings into one. For example, `=CONCATENATE(A1, B1)` combines the values in cells A1 and B1.\\n- **TEXT:** Converts a value to text in a specific format. For example, `=TEXT(A1, \'dd/mm/yyyy\')` converts a date into the specified format.\\n\\n### 7. Advanced Charting\\nCreating charts with multiple data series and customizing them allows for better visualization of complex data. You can use the \'Chart Tools\' to modify the appearance and add secondary axes for better clarity.\",\r\n        \"conclusion\": \"Intermediate Excel skills open up new possibilities for handling and analyzing data. By mastering features such as PivotTables, conditional formatting, and lookup functions, users can increase efficiency and uncover deeper insights from their data.\"\r\n    }\r\n}', '2024-10-02 20:29:24'),
(4, 102, 3, 'Excel Advance', 'https://youtu.be/gsAVUCXMQSI?si=oqjiG8OQXkJR3ZI4', '{\r\n    \"title\": \"Excel Advance\",\r\n    \"content\": {\r\n        \"introduction\": \"Advanced Excel features allow users to perform complex data analysis, automate tasks, and create dynamic reports. Mastering these advanced techniques can significantly enhance productivity and data management capabilities.\",\r\n        \"main_content\": \"### 1. Advanced Formulas\\nAdvanced formulas go beyond basic calculations. They often involve multiple functions and nested operations. Examples include:\\n- **INDEX and MATCH:** This combination allows for more flexible lookups compared to VLOOKUP. `=INDEX(B1:B10, MATCH(D1, A1:A10, 0))` retrieves a value from column B based on a match in column A.\\n- **ARRAY FORMULAS:** These formulas can perform multiple calculations on one or more items in an array. Use `CTRL + SHIFT + ENTER` to enter them. For example, `=SUM(IF(A1:A10>10, B1:B10))` calculates the sum of B1:B10 where the corresponding A1:A10 values are greater than 10.\\n\\n### 2. Pivot Tables\\nPivot Tables are powerful tools for summarizing data in Excel. They allow you to analyze large datasets efficiently.\\n- **Creating a Pivot Table:** Select your data range, go to the Insert tab, and click on PivotTable. You can then drag fields into Rows, Columns, and Values to arrange your data.\\n- **Slicers:** Use slicers for interactive filtering of data in your PivotTable. This allows for quick adjustments without modifying the source data.\\n\\n### 3. Data Visualization\\nEffective data visualization is key to presenting data clearly and compellingly.\\n- **Charts:** Excel offers various chart types, including column, line, pie, and scatter charts. Choose the chart that best represents your data.\\n- **Conditional Formatting:** Use conditional formatting to highlight important data points. For example, you can color cells based on their values or set up data bars to visualize data trends.\\n\\n### 4. Advanced Data Analysis Tools\\nExcel provides tools for advanced data analysis, including:\\n- **What-If Analysis:** Use tools like Goal Seek and Data Tables to explore different scenarios. For instance, Goal Seek can help determine what value is needed in one cell to achieve a desired outcome in another.\\n- **Solver:** The Solver add-in can help find optimal solutions for complex problems, such as maximizing profits or minimizing costs based on certain constraints.\\n\\n### 5. Macros and VBA\\nMacros automate repetitive tasks in Excel, saving time and effort.\\n- **Recording a Macro:** Go to the View tab, click on Macros, and select Record Macro. Perform the actions you want to automate, then stop recording. You can run this macro later to repeat the actions.\\n- **Using VBA:** For more advanced automation, learn Visual Basic for Applications (VBA) to create custom functions and automate tasks programmatically.\",\r\n        \"conclusion\": \"Mastering advanced Excel techniques will greatly enhance your ability to analyze data, create insightful reports, and streamline your workflow. As you become proficient in these skills, you will be better equipped to handle complex data scenarios and make informed decisions based on your findings.\"\r\n    }\r\n}', '2024-10-02 20:31:34'),
(5, 102, 1, 'Excel Intro to Data Analysis', 'https://youtu.be/YE1HBEY2upg?si=PKZyCx15Vt8BqJi2', '{\r\n    \"title\": \"Excel Intro to Data Analysis\",\r\n    \"content\": {\r\n        \"introduction\": \"Data analysis in Excel involves using various tools and functions to interpret and present data effectively. Excel capabilities make it a popular choice for individuals and organizations to analyze and visualize data to inform decision-making.\",\r\n        \"main_content\": \"### 1. Understanding Data Analysis\\nData analysis is the process of inspecting, cleansing, transforming, and modeling data to discover useful information, draw conclusions, and support decision-making. Excel provides a user-friendly platform for performing these tasks.\\n\\n### 2. Organizing Data\\n- **Data Entry:** Enter data into Excel in a structured format, using rows for records and columns for attributes. Make sure to label your columns appropriately for clarity.\\n- **Data Formatting:** Use Excel formatting options to make your data more readable. This includes adjusting font sizes, colors, and number formats (like currency and percentages).\\n\\n### 3. Data Cleaning\\nCleaning your data is essential before analysis.\\n- **Removing Duplicates:** Use the \'Remove Duplicates\' feature under the Data tab to eliminate duplicate entries from your dataset.\\n- **Handling Missing Values:** Identify and address missing data points. You can fill them with averages, medians, or use Excel functions like `IF` and `ISBLANK` to manage them.\\n\\n### 4. Analyzing Data\\n- **Descriptive Statistics:** Use functions like AVERAGE, MEDIAN, MODE, MIN, MAX, and STDEV to summarize your data and gain insights into its characteristics.\\n- **Data Visualization:** Create charts and graphs to visualize trends and patterns in your data. Common types include bar charts, line graphs, and scatter plots.\\n\\n### 5. Using Formulas and Functions\\nExcel has a vast array of functions that can enhance your data analysis capabilities:\\n- **Logical Functions:** Use `IF`, `AND`, `OR`, and `NOT` to make decisions based on data conditions.\\n- **Lookup Functions:** Use `VLOOKUP` and `HLOOKUP` to search for specific information within your dataset.\\n- **Text Functions:** Functions like `LEFT`, `RIGHT`, `MID`, and `CONCATENATE` help manipulate and analyze text data.\\n\\n### 6. Advanced Tools for Data Analysis\\n- **PivotTables:** These allow for powerful data summarization. You can group, filter, and analyze large datasets dynamically, providing insights at a glance.\\n- **Data Analysis ToolPak:** This add-in provides advanced analysis features, including regression analysis, ANOVA, and histograms. You can activate it through Excel Options > Add-ins.\\n\\n### 7. Sharing Results\\n- **Creating Reports:** Once your analysis is complete, compile your findings into a report. Include charts, graphs, and summaries of key insights.\\n- **Collaborating:** Excel allows you to share your workbooks with others for collaborative analysis. Use OneDrive or SharePoint for real-time collaboration.\",\r\n        \"conclusion\": \"Understanding the fundamentals of data analysis in Excel empowers you to make informed decisions based on data insights. By mastering data organization, cleaning, analysis techniques, and visualization, you can enhance your analytical skills and drive better outcomes in your projects.\"\r\n    }\r\n}', '2024-09-28 08:20:00'),
(6, 102, 1, 'Excel Pivot Tables', 'https://youtu.be/kSNxzoe9RcM?si=aKkZ-SYniAyzzt9e', '{\r\n    \"title\": \"Excel Pivot Tables\",\r\n    \"content\": {\r\n        \"introduction\": \"Pivot Tables are a powerful feature in Excel that allow users to summarize, analyze, explore, and present data in a dynamic way. They enable users to transform large datasets into meaningful insights without requiring complex formulas.\",\r\n        \"main_content\": \"### 1. What is a Pivot Table?\\nA Pivot Table is a data processing tool that allows you to aggregate and manipulate data from a larger dataset. It helps to easily summarize and analyze large amounts of data by reorganizing it into a format that is easier to read and interpret.\\n\\n### 2. Creating a Pivot Table\\n- **Select Your Data:** Start by selecting the range of data you want to analyze, including headers for each column.\\n- **Insert Pivot Table:** Navigate to the \'Insert\' tab in the Ribbon and click on \'PivotTable\'. Choose whether to place the Pivot Table in a new worksheet or an existing one.\\n- **Setting Up the Pivot Table:** A dialog box will appear. Select your data range and choose the location for the Pivot Table, then click \'OK\'.\\n\\n### 3. Configuring the Pivot Table\\n- **Fields List:** A Pivot Table Field List will appear, showing all the fields from your selected data range. You can drag and drop fields into four areas:\\n - **Rows:** Define how your data will be grouped by rows.\\n - **Columns:** Define how your data will be grouped by columns.\\n - **Values:** Add numerical data that you want to summarize.\\n - **Filters:** Allow for filtering your data based on certain criteria.\\n\\n### 4. Customizing the Pivot Table\\n- **Sorting and Filtering:** You can sort your data alphabetically or numerically. You can also apply filters to display only the information you want.\\n- **Value Field Settings:** Click on any value in the Pivot Table and select \'Value Field Settings\' to change how the data is summarized (e.g., Sum, Average, Count, etc.).\\n- **Formatting:** Use the Design tab to apply different styles and formats to your Pivot Table to make it visually appealing and easier to read.\\n\\n### 5. Updating the Pivot Table\\n- **Refresh Data:** If the source data changes, you can refresh your Pivot Table to reflect the updates. Right-click on the Pivot Table and select \'Refresh\'.\\n- **Changing Data Source:** If you need to change the data source for your Pivot Table, right-click and choose \'Change Data Source\'. This allows you to select a different range of data.\\n\\n### 6. Advanced Features\\n- **Grouping Data:** You can group dates or numerical data into ranges for more manageable analysis. For example, you can group sales data by month or year.\\n- **Calculated Fields:** Create calculated fields within your Pivot Table to add custom calculations that are not present in the original data.\\n- **Slicers and Timelines:** Use Slicers to add visual filters to your Pivot Table, making it easier to filter data interactively. Timelines allow you to filter dates effectively.\\n\\n### 7. Analyzing Results\\n- **Interpretation:** Once your Pivot Table is set up, you can analyze trends, totals, and other key metrics at a glance. Look for patterns in the data to make informed decisions.\\n- **Exporting Data:** You can copy your Pivot Table to other applications or export it to create reports. You can also create charts from your Pivot Table data for visual representation.\",\r\n        \"conclusion\": \"Mastering Pivot Tables in Excel is essential for anyone working with data. They provide a robust way to analyze and summarize large datasets, making it easier to uncover insights and drive informed decisions. By utilizing Pivot Tables effectively, you can enhance your data analysis capabilities and improve your productivity.\"\r\n    }\r\n}', '2024-10-02 20:33:34'),
(7, 102, 1, 'Excel Capilot', 'https://youtu.be/Fr0nM_-jpjc?si=FV5eZOuYagtn63rA', '{\r\n    \"title\": \"Excel Capilot\",\r\n    \"content\": {\r\n        \"introduction\": \"Excel Capilot is a tool designed to enhance productivity in Excel by providing users with intelligent suggestions and assistance while working with spreadsheets. It leverages AI technology to streamline various tasks and improve overall efficiency.\",\r\n        \"main_content\": \"### 1. What is Excel Capilot?\nExcel Capilot is an advanced feature integrated into Microsoft Excel that offers real-time guidance and automated suggestions for data entry, formula creation, and analysis. It aims to simplify the user experience by reducing the time spent on repetitive tasks and minimizing errors.\n\n### 2. Key Features of Excel Capilot\n- **Formula Assistance:** Capilot suggests relevant formulas based on the user\'s current data and context. It helps users quickly find and apply the right functions without having to search through documentation.\n- **Data Insights:** It analyzes the dataset and provides insights or visualizations that help users understand trends and patterns without manual intervention.\n- **Smart Fill:** This feature allows users to automatically fill in values based on patterns identified in the data, reducing the need for repetitive manual entries.\n- **Error Checking:** Capilot identifies potential errors in formulas and data entries, offering suggestions to correct them before finalizing the spreadsheet.\n\n### 3. Getting Started with Excel Capilot\n- **Activation:** To enable Capilot, ensure your Excel application is updated to the latest version, and navigate to the \'Capilot\' tab on the Ribbon.\n- **Using Capilot:** Start typing in a cell, and Capilot will automatically suggest relevant formulas or actions based on your input. You can click on suggestions to quickly apply them.\n\n### 4. Benefits of Using Excel Capilot\n- **Increased Productivity:** By automating repetitive tasks and suggesting relevant tools, users can save time and focus on more critical analysis and decision-making tasks.\n- **Reduced Learning Curve:** New users can quickly learn to use Excel features effectively with guided assistance, making it easier to get started with complex tasks.\n- **Enhanced Accuracy:** Capilot\'s error-checking and suggestion features help minimize mistakes in data entry and formula application.\n\n### 5. Tips for Maximizing Excel Capilot\n- **Explore Suggestions:** Take the time to explore different suggestions offered by Capilot. You may discover features and functions you weren\'t aware of that can enhance your work.\n- **Feedback:** Provide feedback on Capilot\'s suggestions to help improve its accuracy and relevance over time. This feedback can help tailor its recommendations to your specific usage patterns.\n- **Regular Updates:** Keep Excel updated to ensure you have access to the latest features and improvements in Capilot. This will enhance your overall experience and capabilities.\n\n### 6. Troubleshooting Common Issues\n- **Slow Performance:** If Capilot is slow, check your internet connection and ensure that Excel is running the latest version. Clearing the cache can also help.\n- **Suggestions Not Appearing:** If suggestions do not appear, ensure that Capilot is enabled in your settings. You may also want to restart Excel to refresh the feature.\n- **Limited Functionality:** Some features may vary depending on your Excel version or subscription plan. Ensure you have access to the full capabilities of Capilot by using the latest version of Microsoft Office.\n\",\r\n        \"conclusion\": \"Excel Capilot is a valuable tool that empowers users to work more efficiently with Excel. By leveraging AI to provide intelligent suggestions and automate mundane tasks, it enhances productivity and accuracy in data handling. Embracing Capilot can significantly improve the overall user experience and streamline complex workflows in Excel.\"\r\n    }\r\n}', '2024-09-28 08:30:00'),
(8, 102, 1, 'Excel Power User', 'https://youtu.be/x98qOYt_NCQ?si=Vsn5e2QJJ5JxAOuJ', '{\r\n    \"title\": \"Excel Power User\",\r\n    \"content\": {\r\n        \"introduction\": \"An Excel Power User is someone who possesses advanced skills and knowledge in Microsoft Excel, enabling them to efficiently analyze data, automate tasks, and utilize complex functionalities to enhance productivity. Power Users often leverage a combination of formulas, macros, pivot tables, and data visualization tools.\",\r\n        \"main_content\": \"### 1. What is an Excel Power User?\nExcel Power Users are individuals who can navigate the software beyond basic functionalities. They understand how to implement advanced features to solve complex problems and streamline workflows. Their skills typically include working with large datasets, creating automated reports, and optimizing data analysis processes.\n\n### 2. Key Skills of an Excel Power User\n- **Advanced Formulas:** Proficiency in complex formulas such as array formulas, nested functions, and conditional statements (e.g., IF, SUMIF, VLOOKUP, INDEX/MATCH).\n- **Data Analysis Tools:** Expertise in using tools like PivotTables and Power Query for data manipulation, summarization, and reporting.\n- **Automation with Macros:** Ability to record and write macros in VBA (Visual Basic for Applications) to automate repetitive tasks and improve efficiency.\n- **Data Visualization:** Skills in creating compelling charts, graphs, and dashboards to present data insights clearly and effectively.\n- **Collaboration and Sharing:** Knowledge of best practices for sharing workbooks, protecting sensitive information, and collaborating with team members in Excel.\n\n### 3. Getting Started as a Power User\n- **Self-Learning:** Utilize online courses, tutorials, and resources to learn advanced Excel techniques. Websites like Microsoft Learn, Coursera, and YouTube offer extensive training materials.\n- **Practice Regularly:** Regularly working on real-world projects or sample datasets helps reinforce skills and improve problem-solving abilities.\n- **Join Communities:** Engage with online forums, user groups, or local meetups to share knowledge, ask questions, and learn from other Excel enthusiasts.\n\n### 4. Tools and Features for Power Users\n- **Power Query:** A powerful tool for importing, transforming, and preparing data from various sources for analysis.\n- **Power Pivot:** Enables users to create data models and perform powerful calculations on large datasets without compromising performance.\n- **Dynamic Arrays:** New Excel functions (like FILTER, SORT, UNIQUE) that allow users to work more efficiently with arrays and ranges of data.\n- **What-If Analysis:** Techniques such as Scenario Manager and Goal Seek that help users make informed decisions based on different data scenarios.\n\n### 5. Tips for Excel Power Users\n- **Keyboard Shortcuts:** Familiarize yourself with Excel keyboard shortcuts to speed up your workflow and increase efficiency.\n- **Custom Templates:** Create custom templates for recurring reports or analyses to save time and ensure consistency across projects.\n- **Documentation:** Keep thorough documentation of your Excel models, formulas, and macros to help you and others understand the logic behind your work.\n\n### 6. Common Challenges for Power Users\n- **Performance Issues:** Handling large datasets can slow down Excel. Power Users should learn how to optimize formulas and manage data efficiently.\n- **Data Integrity:** Maintaining accuracy and consistency in data, especially when multiple users are involved, is crucial. Implement data validation techniques to minimize errors.\n- **Keeping Up with Updates:** Excel continually evolves with new features and functions. Staying updated with the latest releases can help Power Users leverage new capabilities.\n\",\r\n        \"conclusion\": \"Becoming an Excel Power User can significantly enhance your productivity and data analysis capabilities. By mastering advanced features and automating tasks, you can transform how you work with spreadsheets and drive better decision-making based on data insights. Continuous learning and practice are essential to maintain your skills and stay ahead in the ever-evolving landscape of data management.\"\r\n    }\r\n}', '2024-09-28 08:35:00'),
(9, 102, 1, 'Excel Data Analysis Full', 'https://youtu.be/qrbf9DtR3_c?si=M83DgkCh5X8LWxJG', '{\r\n    \"title\": \"Excel Data Analysis Full\",\r\n    \"content\": {\r\n        \"introduction\": \"Excel is one of the most powerful tools available for data analysis. With its extensive range of functions, features, and tools, Excel allows users to organize, analyze, and visualize data efficiently. Whether you are dealing with small datasets or large amounts of data, Excel provides a robust platform to perform both basic and advanced data analysis tasks.\",\r\n        \"main_content\": \"### 1. Importance of Data Analysis in Excel\\nData analysis is crucial for making informed decisions, identifying trends, and drawing conclusions based on data. Excel allows users to quickly analyze data using formulas, pivot tables, and charts. It also supports a variety of functions that help in statistical analysis, logical operations, and data summarization.\\n\\n### 2. Data Cleaning and Preparation\\n- **Removing Duplicates:** Use the \"Remove Duplicates\" feature to clean up your data.\\n- **Text to Columns:** Split data into separate columns based on delimiters.\\n- **Find and Replace:** Quickly clean or modify data using the find-and-replace functionality.\\n- **Data Validation:** Ensure that your dataset is clean by using Data Validation rules to restrict the type of data that can be entered in a cell.\\n\\n### 3. Basic Analysis Tools\\n- **Formulas and Functions:** Use basic Excel functions like `SUM`, `AVERAGE`, `COUNT`, and `IF` to perform quick analysis on data. Combine these with logical functions such as `AND` and `OR` for more complex conditions.\\n- **Conditional Formatting:** Highlight data based on specific rules, helping you visually spot trends, patterns, and outliers.\\n\\n### 4. Intermediate Analysis Tools\\n- **Sorting and Filtering:** Organize data by sorting and filtering. Excel allows sorting in ascending or descending order and filtering based on criteria, helping you focus on specific data.\\n- **Pivot Tables:** A powerful tool for summarizing large datasets. You can drag and drop fields to create summaries, totals, averages, and other aggregations based on your data.\\n\\n### 5. Advanced Data Analysis Tools\\n- **What-If Analysis:** Excel What-If tools, such as Scenario Manager, Goal Seek, and Data Tables, allow users to evaluate various possibilities and make better decisions.\\n- **Power Query:** Use Power Query to automate data importing, transformation, and manipulation from multiple data sources. It simplifies the process of cleaning and reshaping data for analysis.\\n- **Power Pivot:** Enables users to work with large datasets, create relationships between tables, and build complex data models without performance issues.\\n\\n### 6. Statistical Analysis in Excel\\n- **Descriptive Statistics:** Functions like `MEAN`, `MEDIAN`, `MODE`, and `STDEV` can be used to calculate descriptive statistics.\\n- **Regression Analysis:** The Analysis ToolPak add-on allows for linear regression analysis to predict future trends and outcomes.\\n- **Correlation and Covariance:** Understand relationships between datasets using Excel’s correlation and covariance functions.\\n\\n### 7. Data Visualization Techniques\\n- **Charts and Graphs:** Excel offers a variety of chart types, including line charts, bar charts, and scatter plots, to visually represent data. Use the \"Recommended Charts\" option to quickly generate the best chart for your data.\\n- **Slicers and Timelines:** Slicers allow for interactive data filtering in pivot tables and pivot charts. Timelines help you filter data based on dates.\\n- **Dashboard Creation:** Combine multiple charts, pivot tables, and other data visualization tools to create dynamic dashboards that offer insights at a glance.\\n\\n### 8. Automation in Data Analysis\\n- **Macros:** Automate repetitive tasks by recording macros or writing custom scripts using VBA (Visual Basic for Applications).\\n- **Dynamic Arrays:** Excel’s new dynamic array functions like `FILTER`, `SORT`, and `UNIQUE` allow users to handle and analyze data in real-time.\\n- **Data Consolidation:** Use Excel’s Consolidate feature to combine data from multiple worksheets or workbooks into one.\\n\\n### 9. Integrating Excel with External Data Sources\\n- **Importing Data:** Excel can import data from external sources like databases, the web, and other file formats (e.g., CSV, XML). Power Query allows users to import, clean, and refresh data from multiple sources.\\n- **Using APIs:** Excel can connect to external APIs using Power Query, enabling dynamic data pulls from web services.\\n- **Connecting with Power BI:** Export Excel data into Power BI for advanced data analytics and visualization.\\n\",\r\n        \"conclusion\": \"Excel provides a wide array of tools and functionalities for data analysis, from basic calculations to complex data modeling and visualization. By mastering data cleaning, analysis tools, and advanced techniques like Power Query and Power Pivot, users can leverage Excel to make better data-driven decisions. Understanding how to utilize Excel’s built-in features, along with automation and external data integration, can significantly boost productivity and analytical capability.\"\r\n    }\r\n}', '2024-09-28 08:40:00'),
(10, 102, 1, 'Excel For Finance And Accounting Beginner', 'https://youtu.be/v4i-2VffVZQ?si=36-dti3bSJchuzU9', ' {\r\n    \"title\": \"Excel For Finance And Accounting Beginner\",\r\n    \"content\": {\r\n        \"introduction\": \"Microsoft Excel is an essential tool for finance and accounting professionals. It helps manage, analyze, and report financial data with accuracy and ease. From budgeting and forecasting to financial modeling, Excel is widely used for a range of financial tasks. In this article, we will cover the basics of Excel for finance and accounting, tailored for beginners.\",\r\n        \"main_content\": \"### 1. Importance of Excel in Finance and Accounting\nExcel provides a flexible and powerful platform for managing financial data. It is often used for:\n- **Budgeting and Forecasting**: Projecting future financial performance based on historical data.\n- **Financial Statements**: Preparing income statements, balance sheets, and cash flow statements.\n- **Data Analysis**: Using Excel functions to analyze financial trends and performance.\n\n### 2. Essential Excel Functions for Finance\n- **SUM Function**: Adds up a range of numbers, useful for totaling expenses or revenue. Example:\n```excel\n=SUM(B2:B10)\n```\n- **AVERAGE Function**: Calculates the average of a series of numbers, useful for calculating average costs or revenues. Example:\n```excel\n=AVERAGE(C2:C12)\n```\n- **IF Function**: Performs conditional calculations, essential for making financial decisions based on criteria. Example:\n```excel\n=IF(A2 > 1000, \"Profit\", \"Loss\")\n```\n- **VLOOKUP**: Searches for a value in a table and returns corresponding data. Useful for looking up prices, rates, or costs in finance.\n```excel\n=VLOOKUP(D2, A2:B10, 2, FALSE)\n```\n\n### 3. Basic Financial Calculations\n- **Net Income**: Calculate net income using simple formulas by subtracting expenses from revenue.\n```excel\n=Revenue - Expenses\n```\n- **Loan Amortization**: Use the PMT function to calculate monthly payments for loans. Example:\n```excel\n=PMT(interest_rate/12, loan_term_in_months, loan_amount)\n```\n- **Break-Even Analysis**: Understand how to calculate break-even points by dividing fixed costs by contribution margin per unit.\n\n### 4. Organizing Financial Data\n- **Using Tables**: Convert data ranges into tables for easier sorting and filtering.\n- **Data Validation**: Use data validation to ensure accurate input of financial figures like dates, currencies, and percentages.\n- **Formatting Numbers**: Format cells to display currency, percentage, or accounting number formats for clarity.\n\n### 5. Charts and Graphs for Financial Data Visualization\nVisualizing financial data helps you make informed decisions. Common financial charts include:\n- **Line Charts**: Ideal for showing trends over time, such as revenue growth or expense reduction.\n- **Bar/Column Charts**: Useful for comparing different categories, like monthly sales or yearly profits.\n- **Pie Charts**: Show the proportion of different financial elements, such as expense categories.\n\n### 6. Creating Basic Financial Models\nFinancial models help forecast future performance and make business decisions. Start with simple models like:\n- **Budget Templates**: Create a budget by listing income and expenses, then track actuals vs. budgeted amounts.\n- **Cash Flow Models**: Track cash inflows and outflows to ensure a business’s liquidity.\n- **Investment Return Calculations**: Use functions like `NPV` (Net Present Value) and `IRR` (Internal Rate of Return) to evaluate investments.\n\n### 7. Common Mistakes to Avoid in Financial Analysis\n- **Incorrect Data Entry**: Double-check inputs to avoid miscalculations.\n- **Misuse of Formulas**: Ensure formulas reference the correct cells, especially in large datasets.\n- **Lack of Documentation**: Label your sheets and provide comments for better understanding of your analysis.\n- **Overcomplicating Models**: Start with simple models and gradually build complexity as needed.\",\r\n        \"conclusion\": \"Excel is a must-have tool for finance and accounting beginners. By mastering the basic functions, financial calculations, and data visualization techniques covered in this guide, you will be well on your way to becoming proficient in financial analysis. Excel’s versatility and ease of use make it a valuable asset for managing your financial tasks with precision.\"\r\n    }\r\n}\r\n ', '2024-09-28 08:45:00'),
(11, 102, 2, 'Excel For Finance And Accounting Intermediate', 'https://www.youtube.com/watch?v=0G-q4P7t-m8', '{\r\n    \"title\": \"Excel For Finance And Accounting Intermediate\",\r\n    \"content\": {\r\n        \"introduction\": \"Building on the basics, intermediate-level Excel skills are crucial for finance and accounting professionals to perform more advanced financial analysis and reporting. This guide will delve into intermediate Excel functions, financial modeling techniques, and best practices to manage large datasets and automate tasks efficiently.\",\r\n        \"main_content\": \"### 1. Advanced Financial Functions\\nIntermediate finance tasks often require more complex calculations. Below are some essential functions:\\n\\n- **NPV (Net Present Value):** Used to calculate the present value of cash flows based on a discount rate. Example: `=NPV(discount_rate, cash_flows)`\\n- **IRR (Internal Rate of Return):** Determines the return rate at which the net present value of cash flows equals zero, helping evaluate investment profitability. Example: `=IRR(cash_flows)`\\n- **XIRR:** Similar to IRR but accounts for varying time periods between cash flows. Example: `=XIRR(cash_flows, dates)`\\n- **PMT:** Calculates the periodic payment for a loan based on interest rate, loan amount, and loan term. Example: `=PMT(rate, nper, pv)`\\n\\n### 2. Financial Modeling Techniques\\nFinancial modeling helps simulate real-world financial scenarios. Here are key intermediate concepts:\\n\\n- **Scenario Analysis:** Use scenario analysis to model different financial outcomes based on variable changes. Excel’s *What-If Analysis* tool allows you to test scenarios.\\n- **Goal Seek:** Goal Seek is used to find the input value required to achieve a desired output. For example, determining the sales needed to reach a profit target.\\n- **Data Tables:** One-variable or two-variable data tables are useful for analyzing how different values of one or two inputs affect the output in financial models.\\n- **Sensitivity Analysis:** This method evaluates how changes in inputs (like interest rates or costs) affect key outputs (such as profit or cash flow).\\n\\n### 3. Organizing and Managing Large Financial Datasets\\nHandling large volumes of data is common in finance. Efficient data management is key to maintaining accuracy and speed.\\n\\n- **Sorting and Filtering Data:** Use **Sort** and **Filter** to organize datasets by specific criteria, making it easier to focus on relevant data.\\n- **Using Named Ranges:** Define named ranges for cells or cell ranges to simplify formula creation and make spreadsheets more readable.\\n- **Data Validation:** Apply data validation rules to ensure correct input for data fields, such as dates, currencies, and numeric values.\\n- **Conditional Formatting:** Highlight specific cells or ranges based on set conditions. This is useful for quickly identifying outliers or important financial metrics.\\n\\n### 4. Automation with Excel Macros\\nAutomating repetitive tasks can save time and improve efficiency. Macros allow you to record actions and repeat them with a single click.\\n\\n- **Recording a Macro:** Record a series of steps that you can later replay. Useful for tasks like formatting financial reports or updating data regularly.\\n- **VBA (Visual Basic for Applications):** For more advanced automation, you can write custom macros using VBA to automate complex tasks, such as financial reporting or data consolidation.\\n\\n### 5. Pivot Tables for Financial Reporting\\nPivot tables are powerful tools for summarizing large datasets and extracting meaningful financial insights.\\n\\n- **Creating Pivot Tables:** Pivot tables allow you to quickly summarize data, such as breaking down revenue by region or expenses by category.\\n- **Pivot Table Calculations:** Use calculated fields within pivot tables to perform operations, like calculating gross margin or profitability ratios.\\n- **Slicers and Filters:** Slicers and filters help refine pivot table results by selecting specific data points, allowing for more interactive financial analysis.\",\r\n        \"conclusion\": \"Mastering these intermediate Excel functions and techniques will significantly enhance your ability to manage financial data and perform in-depth analysis. As you continue to build your Excel skills, you can automate repetitive tasks, create dynamic financial models, and generate insightful reports that drive business decisions.\"\r\n    }\r\n}', '2024-09-28 08:40:00'),
(12, 102, 3, 'Excel For Finance And Accounting Advanced', 'https://youtu.be/zRAXnvTFA_w?si=GQpps41UQSdx50Cv', '{\r\n    \"title\": \"Excel For Finance And Accounting Advanced\",\r\n    \"content\": {\r\n        \"introduction\": \"Advanced Excel skills are essential for finance and accounting professionals working with complex financial models, large datasets, and detailed reports. This guide will explore sophisticated Excel functions, automation techniques, and powerful tools that streamline financial analysis and decision-making.\",\r\n        \"main_content\": \"### 1. Advanced Financial Functions and Formulas\\nIn advanced finance and accounting tasks, you will frequently use complex formulas and financial functions.\\n\\n- **OFFSET and INDIRECT:** These functions help in dynamic data referencing and range creation for financial models. Example: `=OFFSET(start_cell, row_offset, col_offset, height, width)`\\n- **ARRAY Formulas:** Use array formulas for multiple operations in a single formula. Example: `=SUM(IF(criteria_range=condition, sum_range))`\\n- **CAGR (Compound Annual Growth Rate):** Use the formula to calculate growth over time. Example: `=((End Value / Start Value)^(1/Number of Periods))-1`\\n- **DSUM and DCOUNT:** Database functions like DSUM and DCOUNT help summarize and analyze data in complex financial datasets.\\n- **Advanced Date Functions:** Functions like EDATE, EOMONTH, and WORKDAY are helpful in calculating financial periods and deadlines accurately.\\n\\n### 2. Advanced Financial Modeling Techniques\\nAt this level, financial modeling is more intricate and often includes dynamic assumptions, multiple variables, and sensitivity analysis.\\n\\n- **Multi-Sheet Financial Models:** Create models that link multiple sheets for detailed forecasting, budgeting, and valuation tasks. This allows compartmentalizing various aspects like revenue, expenses, and capital expenditure.\\n- **Monte Carlo Simulation:** Use data tables and VBA to perform Monte Carlo simulations that assess risk and predict outcomes based on probabilistic variables.\\n- **Dynamic Dashboards:** Create interactive financial dashboards that automatically update with real-time data, integrating charts, graphs, and key financial metrics.\\n- **Break-Even and Contribution Margin Analysis:** Use Excel for detailed break-even calculations and contribution margin analysis, critical for business decision-making.\\n\\n### 3. Advanced Data Management\\nHandling complex datasets in financial analysis is common, and advanced data management skills are critical for efficiency.\\n\\n- **Power Query:** Automate data import and cleaning with Power Query, making it easier to consolidate financial data from multiple sources, such as databases or web services.\\n- **Data Connections:** Establish live connections between Excel and external data sources, such as SQL databases, cloud-based services, or ERP systems, to ensure data is always up-to-date.\\n- **Advanced Filtering:** Use advanced filters for customized data extraction, or implement criteria-based data searches across large financial datasets.\\n- **Consolidating Financial Statements:** Consolidate multiple financial statements from various departments or branches using data aggregation techniques, making reporting seamless.\\n\\n### 4. VBA for Financial Automation\\nVBA (Visual Basic for Applications) can be used to create powerful automation scripts for repetitive financial tasks.\\n\\n- **Automating Report Generation:** Create VBA scripts to automate monthly or quarterly financial reports, saving hours of manual work by populating data and formatting it automatically.\\n- **Custom Financial Functions:** Write custom VBA functions tailored for specific financial tasks like depreciation schedules, bond pricing, or investment appraisal models.\\n- **Building User Forms:** Create user-friendly financial models by using VBA to build input forms that allow non-technical users to enter data without disrupting the model.\\n\\n### 5. Power Pivot and Data Models\\nExcel Power Pivot feature enables you to work with large datasets, create advanced data models, and perform complex calculations.\\n\\n- **Creating Data Models:** Use Power Pivot to build relational data models that combine data from multiple tables and sources, enabling deeper financial analysis.\\n- **DAX Formulas:** Data Analysis Expressions (DAX) formulas are used in Power Pivot to create complex calculations across tables, such as Year-over-Year (YoY) growth, Return on Investment (ROI), and Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) trends.\\n- **Power Pivot Reports:** Generate comprehensive financial reports with Power Pivot by aggregating large datasets and using PivotCharts and PivotTables for summary.\\n\\n### 6. Advanced Pivot Table Techniques\\nPivot Tables are indispensable for advanced financial analysis, offering powerful capabilities to summarize and manipulate large datasets.\\n\\n- **Calculated Fields and Items:** Go beyond basic calculations by creating custom formulas inside Pivot Tables for advanced financial metrics.\\n- **Grouping Data by Dates and Quarters:** Use grouping features to organize financial data by custom time periods, such as quarters or fiscal years, for detailed trend analysis.\\n- **Advanced Filtering with Slicers:** Use slicers and timelines for filtering financial data, allowing for more interactive and granular analysis.\",\r\n        \"conclusion\": \"Advanced Excel skills for finance and accounting professionals enable efficient handling of complex data, creation of dynamic financial models, and automation of repetitive tasks. Mastery of tools like Power Pivot, advanced formulas, and VBA can significantly enhance the accuracy and speed of financial analysis, making you a more effective decision-maker in the finance industry.\"\r\n    }\r\n}', '2024-09-28 08:55:00');
INSERT INTO `excel_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(14, 102, 2, 'Excel 2021 Advanced', 'https://youtu.be/y4bA2CNScg8?si=Cv4yjUmXGdgE28fw', '{\r\n    \"title\": \"Excel 2021 Advanced\",\r\n    \"content\": {\r\n        \"introduction\": \"Excel 2021 offers a wide range of advanced features that can significantly enhance data management, analysis, and automation. This guide covers key advanced topics such as pivot tables, advanced functions, and data visualization techniques to help you become a power user of Excel.\",\r\n        \"main_content\": \"### 1. Advanced Functions and Formulas\\nExcel has a variety of built-in advanced functions that can streamline complex calculations.\\n- **VLOOKUP & HLOOKUP:** Use `VLOOKUP` and `HLOOKUP` to search for values in large datasets vertically or horizontally.\\nExample: `=VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])`\\n- **INDEX & MATCH:** Combine these two functions to search for data more flexibly than VLOOKUP.\\nExample: `=INDEX(range, MATCH(lookup_value, lookup_range, 0))`\\n- **IF with AND/OR:** Combine conditional logic to perform more complex logical tests.\\nExample: `=IF(AND(A1>50, B1<100), \'Valid\', \'Invalid\')`\\n\\n### 2. Data Validation\\nData validation is an essential feature for controlling the type of data entered into a cell.\\n- **Creating Drop-down Lists:** Restrict the values a user can input using predefined lists.\\nExample: Select a cell, go to the Data tab, and choose Data Validation to create a list.\\n- **Custom Rules:** You can also create custom rules to enforce certain inputs (e.g., only allowing dates).\\n\\n### 3. Pivot Tables and Pivot Charts\\nPivot tables allow you to summarize and analyze large datasets efficiently.\\n- **Creating Pivot Tables:** Select your data range, go to the Insert tab, and click Pivot Table. You can drag and drop fields into rows, columns, values, and filters to customize the view.\\n- **Pivot Charts:** Create pivot charts directly from pivot tables to visualize summarized data.\\n\\n### 4. Conditional Formatting\\nConditional formatting enables you to highlight cells based on certain criteria.\\n- **Rule-based Formatting:** Apply formatting like color scales, data bars, and icon sets to quickly visualize trends.\\nExample: Highlight cells with values greater than 100 by selecting the cells, going to Conditional Formatting, and choosing the appropriate rule.\\n- **Custom Formatting:** You can create your own conditional formatting rules using formulas.\\n\\n### 5. Advanced Charting\\nExcel 2021 includes advanced charting options to help you visualize complex datasets.\\n- **Combo Charts:** Combine different types of charts (e.g., bar and line) to represent multiple data series.\\n- **Sparklines:** Insert small, lightweight charts inside cells to show trends in your data over time.\\n- **Histogram and Box & Whisker:** Use these specialized charts for statistical analysis and understanding data distribution.\\n\\n### 6. Power Query\\nPower Query is a powerful tool for importing, cleaning, and transforming data.\\n- **Importing Data:** Pull data from various sources like CSV, web, databases, and more.\\n- **Transforming Data:** Use Power Query Editor to clean and reshape data before loading it into Excel.\\n- **Data Refresh:** Set up automatic data refresh schedules for dynamic datasets.\\n\\n### 7. Macros and Automation\\nMacros can help automate repetitive tasks in Excel, saving time and reducing errors.\\n- **Recording a Macro:** You can record a series of actions and save them as a macro to replay later.\\nExample: Go to View > Macros > Record Macro, perform the desired tasks, and stop recording.\\n- **VBA (Visual Basic for Applications):** For more complex automation, you can write custom VBA code to extend Excel’s functionality.\\n\\n### 8. Data Analysis Tools\\nExcel 2021 includes built-in data analysis tools for performing statistical and financial analysis.\\n- **Solver:** Use Solver to find optimal solutions by adjusting different variables to achieve a target result.\\n- **Analysis ToolPak:** Access advanced statistical analysis features like regression, histograms, and correlation calculations.\\n\\n### 9. Collaboration Features\\nExcel 2021 has enhanced collaboration features for working with others in real-time.\\n- **Shared Workbooks:** Multiple users can work on the same workbook simultaneously using OneDrive or SharePoint.\\n- **Comments and Notes:** Use threaded comments for discussions and in-line notes to explain formulas or data points.\\n\\n### 10. Protecting and Securing Data\\nProtecting your data is crucial when sharing Excel files.\\n- **Password Protection:** You can set passwords to open or modify workbooks.\\nExample: Go to File > Info > Protect Workbook > Encrypt with Password.\\n- **Sheet and Cell Protection:** Lock specific cells or entire sheets to prevent unauthorized edits.\",\r\n        \"conclusion\": \"By mastering these advanced features in Excel 2021, you can significantly enhance your data management, analysis, and reporting capabilities. Whether you’re creating pivot tables, automating tasks with macros, or performing complex data analysis, Excel’s advanced tools can help streamline your workflow and improve efficiency.\"\r\n    }\r\n}', '2024-09-28 09:05:00'),
(15, 102, 3, 'Excel 2021 Expert', 'https://youtu.be/nOS2jBSnIVE?si=mBvGsyIMrEdIPWBc', '{\r\n    \"title\": \"Excel 2021 Expert\",\r\n    \"content\": {\r\n        \"introduction\": \"Excel 2021 offers an extensive range of expert-level features that empower users to perform complex data analysis, automation, and reporting tasks. This guide will cover advanced techniques such as advanced VBA scripting, Power Pivot, data modeling, and advanced data visualization tools for users looking to achieve mastery in Excel.\",\r\n        \"main_content\": \"### 1. Advanced VBA Scripting\\nVBA (Visual Basic for Applications) allows you to automate almost any task in Excel by writing custom scripts.\\n- **Custom Macros with VBA:** Write custom VBA scripts to automate repetitive tasks beyond basic recording.\\nExample: Automate data formatting across multiple sheets.\\n- **User-Defined Functions (UDFs):** Create your own functions in VBA for specialized calculations not available in Excel’s built-in functions.\\nExample: `Function CalculateTax(Income) As Double`\\n- **Error Handling in VBA:** Implement error handling to prevent script crashes and provide debugging information.\\n\\n### 2. Power Pivot and Data Models\\nPower Pivot is an advanced Excel add-on that enables you to build data models and perform data analysis on large datasets.\\n- **Creating Data Models:** Integrate data from multiple tables, create relationships between them, and use complex DAX (Data Analysis Expressions) functions.\\n- **Working with DAX:** DAX is a formula language that helps you create complex calculations in Power Pivot.\\nExample: Use DAX for measures like `Total Sales = SUM(Sales[Amount])`\\n- **Large Dataset Analysis:** Use Power Pivot to handle millions of rows of data without performance issues.\\n\\n### 3. Power Query and Advanced Data Transformation\\nPower Query is an essential tool for importing, cleaning, and transforming large and complex datasets.\\n- **Advanced Querying Techniques:** Use complex transformations such as joins, merges, appending tables, and unpivoting data.\\n- **Query Editor Customization:** Customize your data queries using M language for more complex transformations.\\n- **Data Merge and Append:** Combine multiple data sources and transform them into a unified format using advanced merge and append functionalities.\\n\\n### 4. Advanced Data Visualization\\nExpert-level Excel users can create intricate visualizations that tell compelling stories using data.\\n- **Interactive Dashboards:** Combine charts, slicers, and pivot tables to create interactive dashboards.\\nExample: Create a sales dashboard with dynamic filters for real-time data updates.\\n- **Power Map and 3D Maps:** Visualize geographic data using 3D Maps to create impressive geographical heatmaps.\\n- **Advanced Chart Customization:** Create custom chart types like waterfall charts, box plots, and Gantt charts by manipulating Excel’s charting tools.\\n\\n### 5. Power BI Integration\\nExcel 2021 can integrate with Power BI to extend its data analysis and reporting capabilities.\\n- **Exporting to Power BI:** Use the \'Publish\' feature to export Excel data models directly into Power BI for advanced reporting and visualization.\\n- **Power BI Publisher:** Use Power BI Publisher for Excel to pin Excel tables and charts directly to Power BI dashboards.\\n- **Power BI vs Power Pivot:** Understand when to use Power BI for large-scale, cross-organizational data reporting vs. Power Pivot for Excel-based analysis.\\n\\n### 6. Advanced Solver and Optimization Techniques\\nSolver in Excel can be extended to perform complex optimization and simulation tasks.\\n- **Multi-Objective Optimization:** Use Solver to solve multiple objectives by applying advanced constraints and multiple changing variables.\\nExample: Optimize production schedules while minimizing costs and maximizing output.\\n- **Monte Carlo Simulations:** Use Monte Carlo methods to simulate the probability of different outcomes in Excel.\\n\\n### 7. External Data Connections and Automation\\nLink Excel to external data sources for real-time data analysis and automation.\\n- **SQL Integration:** Connect Excel to SQL databases for seamless data import, querying, and reporting.\\nExample: Use SQL queries within Excel to fetch large datasets dynamically.\\n- **API Connections:** Use APIs to pull data from online sources (e.g., financial markets, Google Analytics).\\n- **Automated Workflows with Power Automate:** Automate tasks across Microsoft apps using Power Automate and integrate with Excel for seamless process flows.\\n\\n### 8. Data Security and Compliance\\nManaging sensitive and critical data in Excel requires an understanding of security and compliance features.\\n- **Advanced Workbook Protection:** Protect your workbooks with password encryption, and apply custom user access levels for different sections of the workbook.\\n- **Auditing and Tracking Changes:** Enable auditing features to track changes, who made them, and when they occurred.\\n- **Data Masking and Anonymization:** Implement data masking techniques to protect sensitive information in shared reports.\\n\\n### 9. Machine Learning and Forecasting\\nExcel 2021’s machine learning and forecasting capabilities help you predict future trends based on historical data.\\n- **Data Forecasting:** Use the Forecast Sheet feature to create predictive models based on historical time series data.\\nExample: Predict sales trends for the upcoming months based on historical data.\\n- **AI-Powered Insights:** Leverage AI-powered insights to detect patterns, trends, and anomalies in large datasets.\\n- **Regression and Statistical Analysis:** Perform linear and nonlinear regression analysis using Excel’s statistical tools.\\n\\n### 10. Collaboration and Cloud Features\\nFor organizations working in teams, Excel 2021 offers enhanced collaboration and cloud capabilities.\\n- **Co-Authoring in Real-Time:** Collaborate with multiple users on the same workbook through OneDrive or SharePoint in real-time.\\n- **Version History and Control:** Track workbook changes and restore previous versions using version history.\\n- **Integration with Microsoft Teams:** Share Excel files directly within Teams, and work collaboratively while communicating on shared data.\\n\",\r\n        \"conclusion\": \"Excel 2021 at the expert level opens the door to a world of advanced data analysis, automation, and collaboration possibilities. By mastering advanced VBA scripting, Power Pivot, data models, and integration with tools like Power BI, you can take full advantage of Excel’s capabilities, streamlining complex workflows and making data-driven decisions more efficiently.\"\r\n    }\r\n}', '2024-09-28 09:10:00'),
(16, 102, 2, 'Excel 2021 Power User', 'https://youtu.be/8u1PnceNoG4?si=Y6XxT-RCGXsG8kRH', '{\r\n    \"title\": \"Excel 2021 Power User\",\r\n    \"content\": {\r\n        \"introduction\": \"Becoming a power user in Excel 2021 means mastering advanced features that allow for faster data processing, enhanced reporting, and increased productivity. Power users are proficient in automation, advanced functions, and integrating Excel with other tools. This guide will help you explore key features that set power users apart from beginners and intermediate users.\",\r\n        \"main_content\": \"### 1. Advanced Functions and Formulas\\nPower users need a deep understanding of Excel’s built-in functions and how to combine them for complex calculations.\\n- **Array Formulas:** Use array formulas to perform multiple calculations on a set of values at once.\\nExample: `=SUM(A1:A10*B1:B10)` (Ctrl+Shift+Enter to enable).\\n- **Logical Functions:** Combine `IF`, `AND`, `OR`, and `IFS` for advanced decision-making scenarios.\\nExample: `=IF(AND(A1>50, B1<100), \"Pass\", \"Fail\")`\\n- **LOOKUP Functions:** Master `VLOOKUP`, `HLOOKUP`, `INDEX`, and `MATCH` for powerful data lookups across sheets.\\n\\n### 2. Power Query for Data Automation\\nPower Query helps power users automate data import, cleaning, and transformation processes.\\n- **Importing Data:** Power users import data from a wide variety of sources, such as databases, websites, and cloud services.\\n- **Data Cleaning and Transformation:** Use Power Query to clean up raw data, merge datasets, and transform data without manual intervention.\\n- **Custom Queries:** Write custom M-code queries for advanced data manipulations, such as filtering, pivoting, and merging multiple datasets.\\n\\n### 3. Power Pivot for Data Analysis\\nPower Pivot enhances Excel’s ability to handle large datasets and perform complex analysis.\\n- **Data Models and Relationships:** Power users create data models by linking multiple tables through relationships.\\nExample: Create relationships between sales data, customer data, and product data for integrated analysis.\\n- **Measures and Calculated Fields:** Use DAX (Data Analysis Expressions) to create measures and calculated fields that enable complex data analysis.\\nExample: `TotalRevenue = SUM(Sales[Revenue])`\\n- **Handling Large Datasets:** Power Pivot allows you to work with millions of rows of data without the performance issues that regular Excel would encounter.\\n\\n### 4. Advanced Charting and Data Visualization\\nExcel power users know how to create advanced visualizations to convey complex data effectively.\\n- **Custom Charts:** Go beyond basic charts (bar, line, pie) by creating waterfall, funnel, and radar charts.\\n- **Slicers and Timelines:** Use slicers and timelines to make charts interactive, allowing users to filter data visually.\\nExample: Add a timeline slicer to filter data by time period in a dashboard.\\n- **Conditional Formatting for Visualization:** Highlight important data trends using conditional formatting with custom rules.\\n\\n### 5. Pivot Tables and Advanced Analytics\\nPivot tables are essential tools for summarizing large amounts of data quickly.\\n- **Creating Complex Pivot Tables:** Power users can create multi-level pivot tables with nested fields for advanced reporting.\\n- **Calculated Fields and Items:** Use calculated fields within pivot tables to add custom calculations to your reports.\\n- **Pivot Charts:** Pair pivot tables with pivot charts for dynamic and visually appealing reports.\\n\\n### 6. Excel Macros and Automation\\nAutomation is key to saving time as a power user. Excel macros allow you to automate repetitive tasks.\\n- **Recording Macros:** Record macros to automate repetitive actions like formatting, sorting, and report generation.\\n- **Editing VBA Code:** Power users go beyond recording by editing the underlying VBA code to refine the macro’s functionality.\\nExample: Use VBA to loop through worksheets and apply the same formatting to each.\\n- **Button-Based Automation:** Create buttons in the worksheet to run macros at the click of a button for easy automation.\\n\\n### 7. External Data Connections and Collaboration\\nExcel power users work with real-time data by connecting to external sources and collaborating with others.\\n- **Data Connections:** Set up live connections to SQL databases, SharePoint lists, or external APIs for real-time data analysis.\\nExample: Use Power Query to pull data from an SQL server into Excel for analysis.\\n- **Collaboration Tools:** Use co-authoring and version history to collaborate with teammates on the same Excel workbook in real-time via OneDrive or SharePoint.\\n- **Protecting Workbooks:** Protect sensitive data by setting up password protection, user permissions, and tracking changes within the workbook.\\n\\n### 8. Excel Add-Ins and Extensions\\nExcel power users take advantage of add-ins to extend functionality and integrate Excel with other platforms.\\n- **Popular Add-Ins:** Use popular Excel add-ins like Solver for optimization problems, Analysis Toolpak for statistical analysis, and Power View for interactive data visualization.\\n- **Custom Add-Ins:** Develop custom add-ins for specialized tasks using VBA or external tools.\\nExample: Create a custom add-in that integrates Excel with third-party data sources such as financial services.\\n\\n### 9. Troubleshooting and Debugging\\nPower users understand how to troubleshoot complex issues and debug formulas or macros.\\n- **Formula Auditing:** Use the formula auditing toolbar to trace precedents and dependents in complex spreadsheets.\\n- **Error Handling in VBA:** Implement proper error handling in VBA macros to gracefully manage issues without halting execution.\\nExample: Use `On Error Resume Next` to continue running the macro after encountering errors.\\n- **Performance Optimization:** Learn techniques to optimize large workbooks, such as disabling automatic calculations or using efficient formulas.\\n\\n### 10. Power BI Integration\\nExcel power users leverage Power BI for enhanced reporting and dashboard creation.\\n- **Excel and Power BI Data Flows:** Publish Excel data to Power BI, and create visually rich, interactive dashboards.\\n- **Pinning Excel Reports in Power BI:** Pin Excel tables, ranges, and charts to Power BI dashboards for seamless integration and analysis.\\n- **Using Power BI to Augment Excel:** Combine the power of Excel’s data analysis with Power BI’s visualization capabilities for comprehensive reporting.\",\r\n        \"conclusion\": \"Excel 2021 Power Users possess deep knowledge of Excel’s advanced features, from automation and data visualization to integrating with external tools like Power BI. Mastering these skills helps you streamline workflows, automate repetitive tasks, and handle large datasets efficiently. By harnessing the power of Excel\'s advanced features, you can improve productivity and make more data-driven decisions in your business processes.\"\r\n    }\r\n}', '2024-09-28 09:15:00'),
(17, 102, 2, 'Excel 2021 Pivot Tables', 'https://youtu.be/jbno1SwmIFE?si=2OdI-GnzFhWdHptw', '{\r\n    \"title\": \"Excel Pivot Table 2021\",\r\n    \"content\": {\r\n        \"introduction\": \"Pivot Tables in Excel 2021 are a powerful feature that allows users to quickly summarize, analyze, explore, and present large sets of data. Pivot Tables help to extract meaningful insights by allowing users to reorganize and summarize data in real-time, making them an essential tool for data analysis.\",\r\n        \"main_content\": \"### 1. What is a Pivot Table?\\nA Pivot Table is a dynamic tool that allows you to quickly summarize large datasets by organizing data into rows and columns, then aggregating the data (such as sums, averages, or counts). Pivot Tables are highly customizable and allow for quick exploration of different trends or summaries within your dataset.\\n\\n### 2. Creating a Pivot Table\\n- **Step 1:** Select your dataset by clicking anywhere within the data and navigating to the \'Insert\' tab. Click on the \'Pivot Table\' option.\\n- **Step 2:** Choose whether to create the Pivot Table in a new worksheet or in the current worksheet.\\n- **Step 3:** Once the Pivot Table is inserted, drag and drop fields into the \'Rows\', \'Columns\', \'Values\', and \'Filters\' areas to structure the Pivot Table.\\n\\n### 3. Customizing Pivot Tables\\n- **Sorting Data:** You can sort data within a Pivot Table by clicking on any value and selecting \'Sort Ascending\' or \'Sort Descending\'. This helps to view the data in an organized manner.\\n- **Filtering Data:** Add fields to the \'Filters\' area to filter data in the Pivot Table. You can filter by any category, such as dates or specific values, to narrow down your analysis.\\n- **Grouping Data:** Group data based on specific criteria, such as date ranges or numeric values. For example, you can group data by months, quarters, or years.\\n\\n### 4. Using Calculated Fields and Items\\nPivot Tables allow for advanced calculations by creating custom formulas.\\n- **Calculated Fields:** These are fields that use a formula to perform calculations based on other fields in your Pivot Table. For example, you can create a calculated field that multiplies sales quantities by unit price to calculate total revenue.\\n- **Calculated Items:** You can create calculated items in a Pivot Table that combine existing items in a field for advanced calculations. For example, you can create a calculated item that adds two sales categories together to create a new category.\\n\\n### 5. Pivot Charts\\nPivot Tables can be paired with Pivot Charts to provide dynamic, visual representations of your summarized data.\\n- **Creating a Pivot Chart:** Once your Pivot Table is ready, go to the \'Pivot Table Analyze\' tab, and click on \'Pivot Chart\'. You can choose from various chart types (e.g., bar, column, line) to visualize your data.\\n- **Interactivity:** Pivot Charts are interactive, allowing users to filter and drill down into data through the chart itself. Changing the data in the Pivot Table will automatically update the corresponding Pivot Chart.\\n\\n### 6. Slicers and Timelines\\nSlicers and Timelines allow for enhanced filtering and interaction with Pivot Tables.\\n- **Slicers:** Slicers are visual filters that allow users to filter Pivot Table data easily. You can insert slicers from the \'Pivot Table Analyze\' tab and use them to filter data based on specific criteria (such as product categories or regions).\\n- **Timelines:** Timelines are similar to slicers but are specifically used for filtering data based on dates. They provide an interactive way to explore data over time, such as filtering by years, quarters, months, or even days.\\n\\n### 7. Refreshing Pivot Tables\\nAs your source data changes, you need to refresh your Pivot Table to reflect those changes.\\n- **Manual Refresh:** Right-click anywhere in the Pivot Table and select \'Refresh\' to update the data. You can also go to the \'Pivot Table Analyze\' tab and click \'Refresh\'.\\n- **Automatic Refreshing:** Set up automatic refreshing of your Pivot Table by linking it to external data sources, such as databases or other spreadsheets, that update regularly.\\n\\n### 8. Pivot Table Data Source Management\\n- **Changing Data Source:** You can change the data source for your Pivot Table at any time by going to the \'Pivot Table Analyze\' tab and selecting \'Change Data Source\'. This is useful when you need to expand your dataset or switch to a different data range.\\n- **Dynamic Ranges:** Instead of using a fixed data range, you can create dynamic ranges using tables or named ranges, ensuring that your Pivot Table automatically includes new data as it\'s added.\\n\\n### 9. Advanced Pivot Table Features\\n- **Multiple Consolidation Ranges:** You can create Pivot Tables from multiple data ranges, which is useful when summarizing data from different sheets or sources.\\n- **Using Power Pivot with Pivot Tables:** Power Pivot allows you to work with large datasets and complex relationships between tables. With Power Pivot, you can create more sophisticated Pivot Tables by importing data from multiple tables and performing calculations using Data Analysis Expressions (DAX).\\n- **Field Settings:** Adjust field settings to customize how data is summarized in the Pivot Table, such as changing from sum to average, count, or displaying data as a percentage of a total.\\n\\n### 10. Troubleshooting Pivot Tables\\n- **Empty Cells or Errors:** If your Pivot Table shows empty cells or errors, you can use the \'Pivot Table Options\' dialog to change how empty cells or errors are displayed. For example, you can display zeros or custom text in place of empty cells.\\n- **Performance Issues:** If your Pivot Table is slow, especially with large datasets, try optimizing it by turning off automatic calculations, using fewer calculated fields, or reducing the number of rows and columns included in the Pivot Table.\",\r\n        \"conclusion\": \"Pivot Tables in Excel 2021 are invaluable tools for data analysis and reporting. By mastering Pivot Tables, you can efficiently summarize large datasets, create dynamic reports, and make data-driven decisions with ease. With advanced features such as calculated fields, slicers, and Power Pivot integration, Excel Pivot Tables are indispensable for any data professional.\"\r\n    }\r\n}', '2024-09-28 09:20:00'),
(18, 102, 2, 'Excel 2021 Intro to Data Analysis', 'https://youtu.be/UeJWCqJysKI?si=4FvenvR6WNza62m2', '{\r\n    \"title\": \"Excel 2021 Intro to Data Analysis\",\r\n    \"content\": {\r\n        \"introduction\": \"Excel 2021 is a powerful tool for data analysis, allowing users to organize, visualize, and interpret data effectively. With various features such as functions, formulas, PivotTables, and data visualization tools, Excel empowers users to derive insights from their datasets efficiently.\",\r\n        \"main_content\": \"### 1. Understanding Data Analysis in Excel\\nData analysis involves inspecting, cleaning, transforming, and modeling data to discover useful information, inform conclusions, and support decision-making. Excel provides a range of functionalities that make data analysis straightforward, even for beginners.\\n\\n### 2. Getting Started with Data in Excel\\n- **Importing Data:** You can import data from various sources into Excel, such as CSV files, databases, and online data sources. Use the \'Data\' tab to access the \'Get Data\' feature for importing.\\n- **Data Types:** Familiarize yourself with different data types in Excel, such as text, numbers, dates, and currencies, to ensure proper analysis and calculations.\\n\\n### 3. Cleaning and Preparing Data\\n- **Removing Duplicates:** Use the \'Remove Duplicates\' feature under the \'Data\' tab to clean up your dataset and ensure each entry is unique.\\n- **Data Validation:** Set up data validation rules to control the type of data entered into cells, preventing errors in your analysis.\\n- **Text to Columns:** Split data from one column into multiple columns using the \'Text to Columns\' feature, which is useful for separating first and last names or addresses.\\n\\n### 4. Using Excel Functions for Analysis\\n- **Basic Functions:** Learn essential functions like SUM, AVERAGE, COUNT, and IF to perform basic calculations on your dataset. For example, `=SUM(A1:A10)` calculates the total of values from A1 to A10.\\n- **Logical Functions:** Use logical functions such as IF, AND, OR to perform conditional analysis. For example, `=IF(A1>10, \\\"Yes\\\", \\\"No\\\")` will return \\\"Yes\\\" if the condition is true, otherwise \\\"No\\\".\\n- **Lookup Functions:** Functions like VLOOKUP and HLOOKUP allow you to search for specific data within a table and return related values.\\n\\n### 5. Data Visualization Techniques\\n- **Charts and Graphs:** Visualize data using various chart types such as bar charts, line graphs, and pie charts. Go to the \'Insert\' tab to explore different chart options and select the best fit for your data.\\n- **Conditional Formatting:** Highlight important data points using conditional formatting, which changes cell formatting based on specified criteria, making trends and patterns easier to spot.\\n- **Sparklines:** Insert sparklines, which are small charts that fit within a single cell, to provide a visual representation of data trends at a glance.\\n\\n### 6. Using PivotTables for Data Analysis\\n- **Creating a PivotTable:** Transform raw data into summarized reports using PivotTables. Select your data range, navigate to the \'Insert\' tab, and click on \'PivotTable\' to create one.\\n- **Analyzing Data:** Drag and drop fields into Rows, Columns, Values, and Filters to analyze your data from different perspectives and gain insights quickly.\\n- **Refreshing Data:** Update your PivotTable as your source data changes by clicking the \'Refresh\' button to ensure your analysis reflects the latest data.\\n\\n### 7. Advanced Data Analysis Features\\n- **Power Query:** Use Power Query to perform advanced data transformation and cleansing operations before analysis. Power Query simplifies the process of connecting to data sources and reshaping data for analysis.\\n- **What-If Analysis:** Excel provides tools for scenario analysis, such as Goal Seek and Data Tables, allowing you to evaluate different scenarios and make informed decisions based on potential outcomes.\\n- **Solver Add-In:** The Solver add-in helps in optimizing a particular outcome by changing multiple variables to find the best solution based on specific constraints.\\n\\n### 8. Sharing and Collaborating on Data Analysis\\n- **Comments and Annotations:** Use comments to provide context or notes on specific data points, facilitating collaboration with others.\\n- **Sharing Workbooks:** Share your analysis with colleagues by saving the workbook to OneDrive or SharePoint, enabling real-time collaboration and editing.\\n- **Exporting Results:** Export your analysis results to different formats, such as PDF or CSV, for sharing and reporting purposes.\\n\\n### 9. Tips for Effective Data Analysis in Excel\\n- **Organize Data Properly:** Structure your data in a tabular format, with clear headers for each column, to facilitate easier analysis and reporting.\\n- **Use Named Ranges:** Named ranges make it easier to manage and reference specific cells or ranges in your formulas and functions, improving clarity in your analysis.\\n- **Document Your Work:** Maintain a record of your analysis steps and decisions, which is essential for replicating results or explaining your analysis to others.\\n\\n### 10. Continuous Learning\\n- **Online Resources:** Utilize online tutorials, courses, and forums to enhance your Excel skills and stay updated on new features.\\n- **Practice Regularly:** Regularly practice your data analysis skills by working on sample datasets or real-world data to build your confidence and proficiency.\",\r\n        \"conclusion\": \"Excel 2021 provides a robust platform for performing data analysis, making it accessible for users of all skill levels. By leveraging its powerful features, you can transform raw data into valuable insights that drive informed decision-making. Continuous practice and exploration of advanced techniques will further enhance your data analysis capabilities in Excel.\"\r\n    }\r\n}', '2024-09-28 09:25:00'),
(19, 102, 2, 'Excel 2021 XLOOKUP', 'https://youtu.be/WvYP4--CCc8?si=gFfmkmT1kQQ6Njal', '{\r\n        \"title\": \"Excel 2021 XLOOKUP\",\r\n        \"content\": {\r\n            \"introduction\": \"XLOOKUP is a powerful and flexible lookup function introduced in Excel 2021. It replaces older functions like VLOOKUP, HLOOKUP, and LOOKUP, offering enhanced features and simplicity. XLOOKUP allows users to search for specific values in a dataset and return corresponding results, making data retrieval more intuitive and efficient.\",\r\n            \"main_content\": \"### 1. What is XLOOKUP?\\nXLOOKUP is a function that searches a range or an array, finds the right value, and returns the associated value from another range or array. It addresses many limitations of previous lookup functions, making it easier to perform lookups in Excel.\\n\\n### 2. Syntax of XLOOKUP\\nThe syntax for the XLOOKUP function is as follows:\\n```\\nXLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode])\\n```\\n- **lookup_value:** The value you want to look up.\\n- **lookup_array:** The array or range to search.\\n- **return_array:** The array or range from which to return the corresponding value.\\n- **if_not_found:** (optional) The value to return if no match is found.\\n- **match_mode:** (optional) The type of match:\\n  - 0 for exact match (default).\\n  - -1 for exact match or next smaller.\\n  - 1 for exact match or next larger.\\n- **search_mode:** (optional) The search mode:\\n  - 1 for searching from first to last (default).\\n  - -1 for searching from last to first.\\n\\n### 3. How to Use XLOOKUP\\n#### Example 1: Basic Usage\\nTo find a price for a specific product:\\n```excel\\n=XLOOKUP(\\\"Apples\\\", A2:A10, B2:B10)\\n```\\nThis searches for \\\"Apples\\\" in the range A2:A10 and returns the corresponding price from B2:B10.\\n\\n#### Example 2: Handling Missing Values\\nYou can specify what to return if the lookup value is not found:\\n```excel\\n=XLOOKUP(\\\"Oranges\\\", A2:A10, B2:B10, \\\"Not Found\\\")\\n```\\nIn this case, if \\\"Oranges\\\" is not found, it returns \\\"Not Found\\\".\\n\\n#### Example 3: Using Match Mode\\nTo find the closest lower price to a given value:\\n```excel\\n=XLOOKUP(5, B2:B10, A2:A10, , -1)\\n```\\nThis searches for the largest value in B2:B10 that is less than or equal to 5, returning the corresponding product name from A2:A10.\\n\\n### 4. Advantages of XLOOKUP\\n- **Dynamic Arrays:** XLOOKUP can return multiple results (dynamic arrays) without needing to create a separate array for each lookup.\\n- **Easier to Read:** The syntax is simpler and more intuitive than VLOOKUP and HLOOKUP, making formulas easier to understand.\\n- **No Need for Sorted Data:** Unlike VLOOKUP, XLOOKUP does not require the lookup array to be sorted, which simplifies the process.\\n- **Search in Both Directions:** XLOOKUP can search both vertically and horizontally, allowing for greater flexibility in data retrieval.\\n\\n### 5. Common Use Cases for XLOOKUP\\n- **Product Lookup:** Quickly find product details like prices and descriptions based on product names.\\n- **Employee Records:** Search for employee information such as contact details or positions based on employee IDs.\\n- **Sales Reports:** Retrieve sales data for specific products or regions to analyze performance.\\n\\n### 6. Troubleshooting XLOOKUP\\n- **#N/A Error:** This indicates that the lookup value was not found. Ensure the lookup array contains the value you are searching for or adjust the `if_not_found` parameter.\\n- **Data Types:** Make sure that the data types of the lookup value and the lookup array match to avoid errors.\\n- **Spelling Mistakes:** Check for spelling mistakes in the lookup value; XLOOKUP will not find values that do not match exactly.\\n\\n### 7. Conclusion\\nXLOOKUP in Excel 2021 is a game-changer for users looking to streamline their data retrieval processes. Its flexibility, ease of use, and ability to handle complex lookups make it an essential tool for anyone working with data in Excel. By mastering XLOOKUP, you can enhance your productivity and efficiency in data analysis tasks.\"\r\n        }\r\n    }', '2024-09-28 09:30:00'),
(20, 102, 3, 'Excel Productivity Tips and Tricks', 'https://youtu.be/4qq2wPifUms?si=iRgersLJb4GcViKn', '{\r\n        \"title\": \"Excel Productivity Tips and Tricks\",\r\n        \"content\": {\r\n            \"introduction\": \"Microsoft Excel is a powerful tool for data analysis and management, but many users do not fully utilize its features. This article presents various productivity tips and tricks to help you work more efficiently in Excel, streamline your workflow, and enhance your data analysis capabilities.\",\r\n            \"main_content\": \"### 1. Keyboard Shortcuts\\nUtilizing keyboard shortcuts can significantly speed up your workflow in Excel. Here are some essential shortcuts:\\n- **Ctrl + C:** Copy selected cells\\n- **Ctrl + V:** Paste copied cells\\n- **Ctrl + Z:** Undo the last action\\n- **Ctrl + Y:** Redo the last action\\n- **Ctrl + Arrow Keys:** Navigate quickly through data\\n- **Alt + E + S + V:** Paste special values\\n\\n### 2. Use of Named Ranges\\nNaming your ranges can make formulas easier to read and manage. To create a named range, select the cells, type a name in the Name Box (next to the formula bar), and press Enter. You can then use this name in formulas, making them more intuitive.\\n\\n### 3. Data Validation\\nData validation helps ensure data integrity by restricting the type of data entered into a cell. To set up data validation:\\n1. Select the cell or range.\\n2. Go to the **Data** tab, click **Data Validation**, and choose the criteria (e.g., whole numbers, lists).\\nThis feature can prevent errors and maintain consistency in your datasets.\\n\\n### 4. Conditional Formatting\\nConditional formatting allows you to highlight cells based on specific conditions, making it easier to visualize important data. To apply conditional formatting:\\n1. Select the range of cells.\\n2. Go to the **Home** tab and click **Conditional Formatting**.\\n3. Choose a rule type and set the criteria (e.g., highlight cells greater than a certain value).\\n\\n### 5. Using Pivot Tables\\nPivot tables are a powerful feature for summarizing and analyzing large datasets. To create a pivot table:\\n1. Select your data range.\\n2. Go to the **Insert** tab and click on **PivotTable**.\\n3. Choose where to place the pivot table and click **OK**.\\nFrom there, you can drag and drop fields to summarize data quickly and create insightful reports.\\n\\n### 6. Flash Fill\\nFlash Fill is a time-saving feature that automatically fills in values based on patterns it detects. To use Flash Fill, start typing the desired output next to your data, and Excel will suggest the rest. You can activate it by pressing **Ctrl + E** after typing a few examples.\\n\\n### 7. Using Templates\\nIf you frequently create similar spreadsheets, consider using or creating templates. You can save a workbook as a template by selecting **File** > **Save As**, and choosing the **Excel Template** format. This will allow you to quickly create new workbooks based on your predefined layout and formulas.\\n\\n### 8. Organizing with Groups and Outlines\\nOrganizing your data can be made easier by grouping rows or columns. Select the rows or columns you want to group, right-click, and select **Group**. This feature is beneficial for managing large datasets and improving readability.\\n\\n### 9. Comments and Notes\\nAdding comments to cells can help provide context or notes for yourself or others reviewing your spreadsheet. Right-click on a cell and select **New Comment** to add additional information without cluttering your data.\\n\\n### 10. Automation with Macros\\nIf you find yourself repeating the same actions, consider recording a macro to automate the task. Go to the **View** tab, click **Macros**, and choose **Record Macro**. Perform the actions you want to automate, then stop recording. You can run the macro anytime to replicate the steps.\\n\\n### Conclusion\\nBy implementing these productivity tips and tricks in Excel, you can enhance your efficiency and streamline your workflow. Whether you\'re a beginner or an advanced user, mastering these techniques can help you unlock Excel\'s full potential, making your data analysis tasks more manageable and effective.\"\r\n        }\r\n    }', '2024-09-28 09:35:00'),
(21, 102, 3, 'Google Sheets for Excel Users', 'https://youtu.be/tCVNiIvHqZM?si=ArH5_xPzVg6mN_DS', '{\r\n        \"title\": \"Google Sheets for Excel Users\",\r\n        \"content\": {\r\n            \"introduction\": \"Google Sheets is a powerful, cloud-based spreadsheet application that offers many similar functionalities to Microsoft Excel. This article aims to help Excel users transition to Google Sheets by highlighting key features, differences, and productivity tips to enhance your spreadsheet skills.\",\r\n            \"main_content\": \"### 1. Interface Overview\\nGoogle Sheets has a user-friendly interface that resembles Excel. The menu bar includes options for file management, editing, and formatting, while the toolbar provides quick access to frequently used features. Familiarize yourself with the layout to ease the transition.\\n\\n### 2. File Management\\nIn Google Sheets, your work is automatically saved in Google Drive, eliminating the need for manual saving. You can easily access your files from any device with internet connectivity. To create a new sheet, click on the **+ New** button in Google Drive and select **Google Sheets**.\\n\\n### 3. Data Entry and Formulas\\nData entry in Google Sheets is similar to Excel. Click on a cell to enter data, and use formulas by typing `=` followed by the function name. Common functions such as `SUM`, `AVERAGE`, and `VLOOKUP` work similarly in both applications. However, Google Sheets supports some unique functions like `GOOGLEFINANCE` for real-time stock data.\\n\\n### 4. Collaboration Features\\nOne of the key advantages of Google Sheets is its collaboration features. You can share your sheets with others by clicking the **Share** button in the top right corner. Collaborators can edit, comment, or view your sheet in real-time, making it ideal for team projects.\\n\\n### 5. Add-ons and Extensions\\nGoogle Sheets offers a wide variety of add-ons to enhance functionality. You can access these by clicking on **Extensions** in the menu and selecting **Add-ons**. Popular add-ons include tools for advanced analytics, data visualization, and project management.\\n\\n### 6. Data Validation and Conditional Formatting\\nSimilar to Excel, Google Sheets allows you to set data validation rules and apply conditional formatting. To access these features, navigate to the **Data** menu and select **Data validation** or **Conditional formatting**. These tools help maintain data integrity and improve visual analysis.\\n\\n### 7. Keyboard Shortcuts\\nFamiliarize yourself with Google Sheets keyboard shortcuts to enhance productivity. Some useful shortcuts include:\\n- **Ctrl + / (forward slash):** Opens the shortcut menu.\\n- **Ctrl + Shift + V:** Paste values only.\\n- **Ctrl + Alt + Shift + H:** Show/hide the formula bar.\\n- **Ctrl + K:** Insert a link.\\n\\n### 8. Importing and Exporting Files\\nYou can easily import Excel files into Google Sheets by selecting **File** > **Import** and uploading your Excel document. Conversely, to export your Google Sheet as an Excel file, go to **File** > **Download** > **Microsoft Excel (.xlsx)**.\\n\\n### 9. Charts and Graphs\\nCreating charts in Google Sheets is straightforward. Select your data, click on **Insert** > **Chart**, and choose the chart type that suits your data analysis. Google Sheets also offers various customization options for your charts.\\n\\n### 10. Google Apps Integration\\nGoogle Sheets integrates seamlessly with other Google apps like Google Docs, Google Forms, and Google Slides. You can easily link data between these applications for comprehensive project management and reporting.\\n\\n### Conclusion\\nTransitioning from Excel to Google Sheets can be smooth with an understanding of the similarities and differences. By leveraging Google Sheets collaborative features, unique functions, and cloud-based convenience, you can enhance your productivity and streamline your data management tasks.\"\r\n        }\r\n    }', '2024-09-28 09:40:00'),
(22, 102, 1, 'Excel 2019 Beginner', 'https://youtu.be/6JnEYGxxd8w?si=gpjhs6IRHXFpqFKg', '{\r\n        \"title\": \"Excel 2019 Beginner\",\r\n        \"content\": {\r\n            \"introduction\": \"Excel 2019 is a powerful spreadsheet application that is part of the Microsoft Office Suite. It provides a range of features and tools that allow users to organize, analyze, and visualize data effectively. This article will guide beginners through the fundamental aspects of Excel 2019.\",\r\n            \"main_content\": \"### 1. Getting Started with Excel 2019\\nExcel 2019 features an intuitive interface with a ribbon at the top, which organizes tools and functions into tabs. To start using Excel, open the application, and you will see a blank workbook where you can begin entering data.\\n\\n### 2. Understanding Workbooks and Worksheets\\n- **Workbooks**: An Excel file is referred to as a workbook. Each workbook can contain multiple worksheets.\\n- **Worksheets**: These are individual sheets within a workbook, organized into rows and columns.\\n\\n### 3. Entering Data\\nTo enter data, click on a cell (the intersection of a row and column) and begin typing. You can input text, numbers, dates, or formulas. To edit a cell, double-click on it or press **F2**.\\n\\n### 4. Basic Formatting\\nExcel 2019 allows you to format your data to improve readability and presentation:\\n- **Font Styles**: Change font type, size, and color from the Home tab.\\n- **Cell Styles**: Apply cell styles to format entire cells, including borders and background colors.\\n- **Alignment**: Adjust text alignment within cells for better organization.\\n\\n### 5. Formulas and Functions\\nExcel 2019 enables you to perform calculations using formulas and functions. A formula starts with an equal sign `=`. For example, to add values in cells A1 and A2, type `=A1+A2`. Common functions include:\\n- **SUM**: Adds a range of cells.\\n- **AVERAGE**: Calculates the average of a range.\\n- **COUNT**: Counts the number of cells containing numbers.\\n\\n### 6. Creating Charts\\nCharts are a great way to visualize data. To create a chart:\\n1. Select the data you want to visualize.\\n2. Go to the Insert tab.\\n3. Choose the chart type you want, such as a column, line, or pie chart.\\n4. Customize the chart using the Chart Tools that appear in the ribbon.\\n\\n### 7. Saving Your Work\\nTo save your workbook, go to **File** > **Save As**. Choose a location on your computer or OneDrive and give your file a name. Excel files are saved with a `.xlsx` extension by default.\\n\\n### 8. Printing and Sharing\\nYou can print your worksheet by going to **File** > **Print**. Adjust settings such as orientation and scaling before printing. To share your workbook, use the **Share** button to send it via email or to share it with others via OneDrive.\\n\\n### 9. Basic Data Analysis Tools\\nExcel 2019 includes basic data analysis tools such as:\\n- **Sorting**: Organize data in ascending or descending order.\\n- **Filtering**: Display only the rows that meet specific criteria.\\n- **Conditional Formatting**: Apply formatting to cells that meet certain conditions, helping to highlight important data.\\n\\n### 10. Learning Resources\\nTo improve your Excel skills, utilize the built-in help feature, explore online tutorials, or consider taking a formal course. Microsoft also offers a variety of resources to help users learn Excel 2019 at their own pace.\\n\\n### Conclusion\\nExcel 2019 provides a user-friendly environment for beginners to learn data management and analysis. By mastering the basics, you can enhance your productivity and leverage Excel\'s powerful features for various personal and professional tasks.\"\r\n        }\r\n    }', '2024-09-28 09:45:00');
INSERT INTO `excel_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(23, 102, 2, 'Excel 2019 Advanced', 'https://youtu.be/bezV5U0dlbo?si=ivo1aHNp3hBUx-uG', '{\r\n        \"title\": \"Excel 2019 Advanced\",\r\n        \"content\": {\r\n            \"introduction\": \"Excel 2019 offers a wide array of advanced features that enhance data analysis, visualization, and automation capabilities. This article is designed for users who are familiar with the basics of Excel and are ready to dive deeper into its powerful tools and functions.\",\r\n            \"main_content\": \"### 1. Advanced Formulas and Functions\\nExcel 2019 provides several advanced functions that can help you manipulate and analyze data more effectively:\\n- **IF Statements**: Utilize conditional logic to perform different actions based on criteria. For example:\\n  ```excel\\n  =IF(A1 > 10, \\\"Above 10\\\", \\\"10 or below\\\")\\n  ```\\n- **VLOOKUP and HLOOKUP**: These functions are essential for searching data within tables. VLOOKUP searches vertically, while HLOOKUP searches horizontally.\\n- **INDEX and MATCH**: A powerful combination that offers more flexibility than VLOOKUP. Example:\\n  ```excel\\n  =INDEX(B1:B10, MATCH(\\\"Value\\\", A1:A10, 0))\\n  ```\\n\\n### 2. Data Validation\\nEnsure data integrity with data validation techniques:\\n- **Drop-down Lists**: Create drop-down lists for cells to restrict entries to predefined values.\\n- **Custom Validation Rules**: Set specific criteria that data must meet to be entered into a cell, enhancing data accuracy.\\n\\n### 3. Advanced Charting Techniques\\nVisualizing data can be enhanced with advanced charting techniques:\\n- **Combo Charts**: Combine different chart types (e.g., line and bar) to represent different data sets.\\n- **Dynamic Charts**: Use named ranges and the OFFSET function to create charts that update automatically as data changes.\\n\\n### 4. PivotTables and PivotCharts\\nPivotTables are an essential tool for data analysis:\\n- **Creating PivotTables**: Quickly summarize large datasets by dragging and dropping fields into rows and columns.\\n- **Using Slicers**: Enhance interactivity with slicers, which allow users to filter PivotTable data visually.\\n- **PivotCharts**: Create charts based on PivotTables for dynamic visual representations of summarized data.\\n\\n### 5. Advanced Conditional Formatting\\nConditional formatting helps highlight important trends and data points:\\n- **Data Bars**: Use data bars to provide a visual representation of values in cells.\\n- **Color Scales**: Apply color gradients to represent values in a range, making it easy to identify high and low values at a glance.\\n- **Icon Sets**: Use icons to indicate performance against benchmarks.\\n\\n### 6. Introduction to Macros and VBA\\nAutomate repetitive tasks with Macros:\\n- **Recording Macros**: Use the Macro Recorder to capture a series of actions and replay them.\\n- **Editing Macros with VBA**: Learn basic Visual Basic for Applications (VBA) to customize your macros and create more complex automation.\\n\\n### 7. Using Power Query\\nPower Query is a powerful tool for data transformation:\\n- **Importing Data**: Bring in data from various sources, including databases and web services.\\n- **Transforming Data**: Clean and reshape your data with functions like merging, splitting, and aggregating.\\n\\n### 8. Power Pivot for Data Modeling\\nPower Pivot allows you to build complex data models:\\n- **Creating Relationships**: Establish relationships between different tables in your data model for comprehensive analysis.\\n- **DAX Formulas**: Use Data Analysis Expressions (DAX) to create calculated columns and measures, enabling advanced calculations on your data.\\n\\n### 9. Advanced Data Analysis Tools\\nUtilize tools for complex data analysis:\\n- **What-If Analysis**: Use Goal Seek and Data Tables to explore different scenarios in your data.\\n- **Solver**: A powerful tool for optimization problems that can help you find the best solution for your data.\\n\\n### 10. Collaborating and Sharing Workbooks\\nExcel 2019 offers features for collaboration:\\n- **Co-authoring**: Work on the same workbook simultaneously with others using OneDrive or SharePoint.\\n- **Comments and Notes**: Add comments to cells to provide context or ask questions, making collaboration more efficient.\\n\\n### Conclusion\\nExcel 2019 advanced features allow users to perform complex data analysis, automate tasks, and collaborate effectively. By mastering these tools, you can significantly enhance your productivity and the value of your data insights.\"\r\n        }\r\n    }', '2024-09-28 09:50:00'),
(24, 102, 3, 'Excel 2019 Expert', 'https://youtu.be/sm9rSD8IXgM?si=ej-aEwzf9kfRq7Dx', '{\r\n        \"title\": \"Excel 2019 Expert\",\r\n        \"content\": {\r\n            \"introduction\": \"Excel 2019 offers advanced features and capabilities that enable expert users to perform complex data analysis, automate tasks, and visualize data effectively. This article will cover expert-level techniques and tools that will enhance your Excel proficiency and productivity.\",\r\n            \"main_content\": \"### 1. Mastering Advanced Formulas\\nExpert users should be familiar with complex formulas and functions:\\n- **Array Formulas**: Use array formulas to perform multiple calculations on one or more items in an array. Example:\\n  ```excel\\n  {=SUM(IF(A1:A10>10, B1:B10, 0))}\\n  ```\\n- **Advanced Text Functions**: Functions like TEXTJOIN, CONCAT, and TEXTSPLIT for manipulating text strings.\\n\\n### 2. Power Query for Advanced Data Manipulation\\nUtilize Power Query to clean and transform data effectively:\\n- **Advanced Transformations**: Learn to perform grouping, pivoting, and unpivoting of data to prepare it for analysis.\\n- **M Language**: Understand the M language for more advanced data transformations and custom functions.\\n\\n### 3. Complex Data Models with Power Pivot\\nLeverage Power Pivot to create sophisticated data models:\\n- **Managing Relationships**: Create and manage complex relationships between multiple tables in your data model.\\n- **DAX Advanced Functions**: Utilize advanced DAX functions like CALCULATE, FILTER, and ALL for creating insightful measures and calculated columns.\\n\\n### 4. Advanced PivotTables and PivotCharts\\nExpert users can take full advantage of PivotTables:\\n- **Calculated Fields and Items**: Add calculated fields and items within PivotTables for dynamic calculations.\\n- **Slicers and Timelines**: Use slicers and timelines for better data filtering and visualization in PivotCharts.\\n\\n### 5. Automating Tasks with Macros and VBA\\nExcel experts often automate repetitive tasks:\\n- **Advanced VBA Programming**: Write complex VBA scripts to automate workflows, customize forms, and interact with other applications.\\n- **User-Defined Functions (UDFs)**: Create custom functions using VBA that can be used like native Excel functions.\\n\\n### 6. Advanced Data Analysis Techniques\\nEmploy sophisticated techniques for data analysis:\\n- **Scenario Manager**: Use the Scenario Manager to create and analyze different financial models or scenarios.\\n- **Data Tables for Sensitivity Analysis**: Create one-variable and two-variable data tables for in-depth analysis of how changes affect outcomes.\\n\\n### 7. Dashboards and Reporting\\nExpert users often create interactive dashboards:\\n- **Dynamic Charts and Reports**: Use dynamic charts linked to slicers and dropdowns for interactive reporting.\\n- **Using Sparklines**: Add sparklines to show trends within a single cell in reports.\\n\\n### 8. Collaborating and Sharing\\nCollaboration is crucial in expert-level Excel usage:\\n- **Using Comments and Notes Effectively**: Use comments for collaboration and documentation in shared workbooks.\\n- **Protecting Worksheets and Workbooks**: Learn to apply protection to specific ranges, worksheets, or entire workbooks to secure sensitive information.\\n\\n### 9. Advanced Visualizations\\nCreate compelling visual representations of data:\\n- **Custom Chart Types**: Explore custom chart types and techniques, such as waterfall charts and Gantt charts.\\n- **Using Map Charts**: Visualize geographic data using Map charts for location-based insights.\\n\\n### 10. Leveraging External Data Sources\\nConnect Excel to external data sources for enhanced analytics:\\n- **SQL Database Integration**: Import data directly from SQL databases using Microsoft Query.\\n- **Using Web Queries**: Extract data from websites using web queries to keep data up-to-date automatically.\\n\\n### Conclusion\\nExcel 2019 provides a wealth of features for expert users looking to maximize their productivity and analytical capabilities. Mastering these advanced techniques will not only enhance your Excel skills but also empower you to derive deeper insights from your data.\"\r\n        }\r\n    }', '2024-09-28 09:55:00'),
(25, 102, 3, 'Excel 2019 Pivot Tables', 'https://youtu.be/Q1UzraY0yXg?si=DWqHjFUDz-JOzFLo', '{\r\n        \"title\": \"Excel 2019 Pivot Tables\",\r\n        \"content\": {\r\n            \"introduction\": \"Pivot Tables in Excel 2019 are powerful tools that allow users to summarize, analyze, explore, and present their data in a concise and tabular format. They enable quick data manipulation and provide insights into complex datasets without needing to write formulas.\",\r\n            \"main_content\": \"### 1. What is a Pivot Table?\\nA Pivot Table is a data processing tool that helps you summarize large amounts of data quickly. It allows you to rearrange and filter data to gain insights, making it an essential feature for data analysis.\\n\\n### 2. Creating a Pivot Table\\nTo create a Pivot Table in Excel 2019:\\n- **Select Your Data**: Click on any cell with your data set.\\n- **Choose Where to Place the Pivot Table**: You can place it in a new worksheet or in an existing worksheet.\\n- **Build Your Pivot Table**: Drag and drop fields into the Rows and Columns areas to organize your data.\"\r\n        }\r\n    }', '2024-10-02 21:45:54'),
(26, 102, 2, 'Excel 2019 Power User', 'https://youtu.be/wUO6PhnzcBQ?si=OcEFPfbBZd00vtbv', '{\r\n        \"title\": \"Excel 2019 Power User\",\r\n        \"content\": {\r\n            \"introduction\": \"Excel 2019 offers powerful features that enable users to maximize their productivity and efficiency in data analysis and management. As a Power User, you will leverage advanced functionalities, automate tasks, and implement sophisticated data modeling techniques to gain insights and make informed decisions.\",\r\n            \"main_content\": \"### 1. Advanced Functions and Formulas\\nAs a Power User, you should be proficient in using advanced functions like:\\n- **INDEX & MATCH**: A more flexible alternative to VLOOKUP for looking up values.\\n- **IFERROR**: To manage errors in formulas and return a custom message or alternative result.\\n- **SUMIFS**: For summing data based on multiple criteria.\\n- **ARRAY FORMULAS**: Use curly braces `{}` to perform multiple calculations at once.\\n\\n### 2. Data Validation\\nImplementing data validation helps ensure data integrity:\\n- **Set Validation Rules**: Go to the Data tab, click on \'Data Validation\' to set rules for data entry.\\n- **Create Drop-Down Lists**: Restrict user input to specific values, enhancing data consistency.\\n\\n### 3. Advanced Charting Techniques\\nVisual representation of data is crucial for analysis:\\n- **Combination Charts**: Combine different chart types to convey complex data relationships.\\n- **Dynamic Charts**: Create charts that update automatically based on data changes.\\n- **Custom Chart Templates**: Save time by creating and reusing custom chart formats.\\n\\n### 4. Power Query\\nPower Query is an essential tool for data transformation and preparation:\\n- **Importing Data**: Pull data from various sources, including databases, web pages, and other Excel files.\\n- **Transforming Data**: Clean and reshape data using Power Query’s user-friendly interface.\\n- **Merging Queries**: Combine data from different sources seamlessly.\\n\\n### 5. Pivot Tables and Power Pivot\\nEnhance your data analysis with Pivot Tables and Power Pivot:\\n- **Creating Pivot Tables**: Quickly summarize large datasets to extract insights.\\n- **Using Power Pivot**: Manage and analyze data from multiple sources, and create relationships between tables for comprehensive analysis.\\n- **DAX (Data Analysis Expressions)**: Use DAX formulas for creating calculated columns and measures in Power Pivot.\\n\\n### 6. Macros and VBA\\nAutomate repetitive tasks and enhance functionality using Macros and VBA:\\n- **Recording Macros**: Record a series of actions to automate repetitive tasks easily.\\n- **Editing Macros in VBA**: Access the Visual Basic for Applications editor to customize your macros and create more complex automation.\\n- **Creating User-Defined Functions**: Write custom functions to perform specific calculations not available in Excel by default.\\n\\n### 7. Collaborating and Sharing\\nExcel 2019 offers tools for collaboration:\\n- **Sharing Workbooks**: Collaborate with colleagues in real-time using OneDrive or SharePoint.\\n- **Comments and Notes**: Use comments to provide feedback and facilitate discussions directly in the spreadsheet.\\n- **Track Changes**: Monitor modifications made by different users to ensure data integrity.\\n\\n### 8. Tips for Power Users\\n- **Keyboard Shortcuts**: Learn keyboard shortcuts to navigate and execute commands quickly.\\n- **Conditional Formatting**: Use conditional formatting to highlight trends and anomalies in your data visually.\\n- **Explore New Excel Features**: Stay updated with new features introduced in Excel 2019 for continual improvement.\\n\\n### Conclusion\\nBecoming an Excel 2019 Power User involves mastering advanced functionalities and employing them effectively to analyze and manage data. With these skills, you can significantly enhance your productivity, provide valuable insights, and make data-driven decisions that can positively impact your organization.\"\r\n        }\r\n    }', '2024-09-28 10:05:00'),
(27, 102, 3, 'Excel 2019 Intro to Data Analysis', 'https://youtu.be/M6miEypg6Mo?si=TDxgHV5RTgCbUCV0', '{\r\n        \"title\": \"Excel 2019 Intro to Data Analysis\",\r\n        \"content\": {\r\n            \"introduction\": \"Data analysis is a crucial skill in today\'s data-driven world, and Excel 2019 provides powerful tools to help users analyze and interpret data effectively. This introductory guide covers the essential features and techniques for conducting data analysis using Excel.\",\r\n            \"main_content\": \"### 1. Understanding Data Analysis\\nData analysis involves inspecting, cleaning, and modeling data to discover useful information and support decision-making. Excel serves as a versatile tool for performing various types of analysis, including descriptive statistics, trend analysis, and forecasting.\\n\\n### 2. Preparing Your Data\\nBefore analysis, it is essential to prepare your data:\\n- **Data Cleaning**: Remove duplicates, correct errors, and handle missing values to ensure data accuracy.\\n- **Data Organization**: Structure your data in tables with clear headers and consistent formatting.\\n\\n### 3. Descriptive Statistics\\nDescriptive statistics summarize your data:\\n- **Using Functions**: Utilize Excel functions like AVERAGE, MEDIAN, MIN, MAX, and COUNT to obtain basic statistical metrics.\\n- **Data Analysis ToolPak**: Enable the Data Analysis ToolPak add-in to access more advanced statistical tools, including descriptive statistics and histograms.\\n\\n### 4. Visualizing Data\\nData visualization is key to understanding trends and patterns:\\n- **Charts and Graphs**: Create various charts (e.g., bar, line, pie) to visually represent your data and make comparisons easier.\\n- **Conditional Formatting**: Use conditional formatting to highlight significant data points and trends directly within your spreadsheet.\\n\\n### 5. Trend Analysis\\nAnalyze trends over time to make predictions:\\n- **Using Sparklines**: Insert sparklines to show trends in a compact form within cells.\\n- **Creating Line Charts**: Use line charts to display data points over time, making it easier to spot trends and fluctuations.\\n\\n### 6. What-If Analysis\\nWhat-if analysis helps you explore different scenarios:\\n- **Scenario Manager**: Use Scenario Manager to create and compare multiple scenarios based on different inputs.\\n- **Data Tables**: Create one-variable or two-variable data tables to analyze how changes in input variables affect output results.\\n- **Goal Seek**: Use Goal Seek to find the necessary input value to achieve a desired result in a formula.\\n\\n### 7. Forecasting\\nExcel provides tools for forecasting future trends:\\n- **Using the Forecast Sheet**: Generate a forecast for your data by creating a forecast sheet that includes historical data and future predictions.\\n- **Exponential Smoothing**: Apply exponential smoothing methods for a more advanced forecasting approach, useful for time series data.\\n\\n### 8. Pivot Tables for Data Analysis\\nPivot Tables are a powerful feature for summarizing and analyzing data:\\n- **Creating Pivot Tables**: Learn to create Pivot Tables to quickly analyze large datasets by summarizing and grouping data.\\n- **Filtering and Sorting**: Use filters and sorting options within Pivot Tables to focus on specific data subsets and insights.\\n\\n### Conclusion\\nExcel 2019 offers a robust suite of tools for data analysis, enabling users to make informed decisions based on their data. By mastering these introductory techniques, you can enhance your analytical skills and apply them to various professional scenarios, from finance to marketing and beyond.\"\r\n        }\r\n    }', '2024-09-28 10:10:00'),
(28, 102, 2, 'Excel 2019 VBA Intermediate', 'https://youtu.be/WZnRDPFz75U?si=zQ9J1CHHlh_faVDR', '{\r\n        \"title\": \"Excel 2019 VBA Intermediate\",\r\n        \"content\": {\r\n            \"introduction\": \"Visual Basic for Applications (VBA) is a powerful programming language integrated into Excel that allows users to automate repetitive tasks, create custom functions, and develop sophisticated data processing solutions. This intermediate guide explores more advanced VBA concepts and techniques to enhance your Excel automation skills.\",\r\n            \"main_content\": \"### 1. Understanding VBA Basics\\nVBA is an event-driven programming language that allows you to create macros to automate tasks in Excel. Understanding the fundamental building blocks of VBA is crucial for intermediate programming.\\n\\n### 2. Working with Variables and Data Types\\n- **Declaring Variables**: Use `Dim` statements to declare variables and specify their data types (e.g., `Dim total As Double`).\\n- **Scope of Variables**: Learn about different variable scopes, such as local, module-level, and global variables, to manage data effectively.\\n\\n### 3. Control Structures\\nControl structures allow you to direct the flow of your program:\\n- **Conditional Statements**: Implement `If...Then...Else` and `Select Case` statements to execute code based on certain conditions.\\n- **Loops**: Use `For...Next`, `Do...Loop`, and `While...Wend` loops to repeat actions until a specific condition is met.\\n\\n### 4. Working with Arrays\\nArrays are essential for handling multiple values:\\n- **Declaring Arrays**: Create static and dynamic arrays to store collections of data (e.g., `Dim scores(1 To 10) As Integer`).\\n- **Looping Through Arrays**: Use loops to iterate through array elements and perform calculations or operations.\\n\\n### 5. User Forms and Controls\\nCreating user forms enhances user interaction:\\n- **Designing User Forms**: Learn to create user forms for data entry, utilizing controls like text boxes, combo boxes, and command buttons.\\n- **Handling Events**: Understand how to write event procedures for controls to capture user actions and respond accordingly.\\n\\n### 6. Working with Excel Objects\\nUnderstanding Excel’s object model is crucial for effective automation:\\n- **Workbook and Worksheet Objects**: Learn how to reference and manipulate workbooks and worksheets using VBA (e.g., `Worksheets(\"Sheet1\").Range(\"A1\").Value = \"Hello\").\\n- **Range Objects**: Master the use of Range objects to read, write, and format data in cells.\\n\\n### 7. Error Handling\\nEffective error handling ensures robust code:\\n- **Using `On Error` Statements**: Implement error handling using `On Error Resume Next` and `On Error GoTo` to manage runtime errors gracefully.\\n- **Error Trapping**: Learn to capture errors and provide meaningful feedback to users.\\n\\n### 8. Advanced Procedures and Functions\\nEnhance your automation capabilities with custom procedures:\\n- **Creating Functions**: Develop user-defined functions (UDFs) to perform calculations or operations that are not available in Excel’s built-in functions.\\n- **Calling Procedures**: Learn how to call procedures from other procedures, creating modular and reusable code.\\n\\n### Conclusion\\nMastering intermediate VBA techniques will significantly enhance your ability to automate tasks in Excel 2019. By understanding the core concepts and tools available, you can create powerful macros and applications that save time and increase productivity. With further practice and exploration, you can develop advanced skills that will allow you to tackle more complex automation projects.\"\r\n        }\r\n    }', '2024-09-28 10:15:00'),
(29, 102, 3, 'Excel 2019 VBA Advanced', 'https://youtu.be/No3oudCEdls?si=zg_RBd98kgklyNF_', '{\r\n        \"title\": \"Excel 2019 VBA Advanced\",\r\n        \"content\": {\r\n            \"introduction\": \"Visual Basic for Applications (VBA) in Excel 2019 allows users to automate complex tasks and develop advanced solutions tailored to their needs. This advanced guide dives deep into sophisticated programming techniques, performance optimization, and integration with other applications.\",\r\n            \"main_content\": \"### 1. Advanced Data Structures\\n- **Collections**: Learn to utilize collection objects for managing groups of related items dynamically.\\n- **Dictionaries**: Use dictionaries for key-value pair storage, allowing for efficient data retrieval and manipulation.\\n\\n### 2. Class Modules\\n- **Creating Class Modules**: Understand how to create custom classes to encapsulate related properties and methods, enhancing code organization and reusability.\\n- **Object-Oriented Programming**: Dive into object-oriented programming concepts, including encapsulation, inheritance, and polymorphism in VBA.\\n\\n### 3. Error Handling Techniques\\n- **Advanced Error Handling**: Implement error handling techniques such as `Err` object properties to manage different error types effectively.\\n- **Logging Errors**: Create an error logging mechanism to record and troubleshoot errors in your VBA projects.\\n\\n### 4. Advanced Procedures and Functions\\n- **Recursive Functions**: Learn to write recursive functions that call themselves to solve problems more efficiently.\\n- **Parameter Passing**: Explore different ways to pass parameters to procedures and functions, including ByRef and ByVal.\\n\\n### 5. Working with External Data\\n- **Connecting to Databases**: Use ADO (ActiveX Data Objects) to connect to external databases, execute SQL queries, and retrieve data.\\n- **Importing and Exporting Data**: Automate the import and export of data from various sources like CSV files, text files, and other Excel workbooks.\\n\\n### 6. Automation with Other Applications\\n- **Integrating with Outlook**: Learn to automate email tasks in Outlook, including sending emails with attachments from Excel.\\n- **Controlling PowerPoint**: Discover how to manipulate PowerPoint presentations directly from Excel using VBA.\\n\\n### 7. Performance Optimization\\n- **Code Optimization**: Learn techniques to optimize your VBA code for faster execution, including avoiding unnecessary calculations and using efficient data structures.\\n- **Memory Management**: Understand how to manage memory usage in VBA to prevent memory leaks and enhance performance.\\n\\n### 8. User-Defined Events\\n- **Creating Custom Events**: Explore how to create and handle custom events in VBA to enhance interactivity in your applications.\\n- **Event-Driven Programming**: Understand the principles of event-driven programming and how to apply them effectively in Excel VBA.\\n\\n### Conclusion\\nMastering advanced VBA techniques will empower you to create highly efficient, scalable, and user-friendly applications in Excel 2019. By leveraging advanced programming concepts, you can significantly enhance productivity and streamline processes, ultimately leading to more robust data management solutions.\"\r\n        }\r\n    }', '2024-09-28 10:20:00'),
(30, 102, 3, 'Excel 2019 VBA Expert', 'https://youtu.be/ezHWpbeq-gc?si=02fUApRu-3nLh_3q', '{\r\n        \"title\": \"Excel 2019 VBA Expert\",\r\n        \"content\": {\r\n            \"introduction\": \"Excel 2019 VBA Expert level provides advanced users with the skills needed to develop sophisticated applications, customize Excel functionalities, and integrate with other Microsoft Office applications. This guide covers expert techniques for building robust VBA solutions.\",\r\n            \"main_content\": \"### 1. Advanced UserForms\\n- **Creating Complex UserForms**: Design and implement advanced UserForms with controls like combo boxes, list boxes, and multi-page forms to enhance user interaction.\\n- **Dynamic Control Creation**: Learn how to create controls dynamically at runtime based on user input or data conditions.\\n\\n### 2. Advanced API Calls\\n- **Calling Windows APIs**: Use Windows API functions to extend Excel capabilities, such as accessing system functions and enhancing performance.\\n- **Error Handling in API Calls**: Implement robust error handling strategies when interacting with external APIs to ensure application stability.\\n\\n### 3. Comprehensive Automation\\n- **Automating Multiple Applications**: Master techniques for automating tasks across Excel, Word, Outlook, and Access to create seamless workflows.\\n- **Building an Integrated Application**: Create an integrated solution that leverages multiple Office applications to solve complex business problems.\\n\\n### 4. Advanced Data Analysis\\n- **Custom Functions for Data Analysis**: Develop user-defined functions (UDFs) for specialized calculations that go beyond Excel built-in functions.\\n- **Integration with Power Query**: Learn how to use Power Query to automate data extraction, transformation, and loading processes, enhancing data analysis capabilities.\\n\\n### 5. Advanced Error Management\\n- **Creating Custom Error Messages**: Design custom error handling strategies and user-friendly error messages to guide users through common issues.\\n- **Debugging Techniques**: Utilize advanced debugging techniques, including breakpoints, watches, and immediate window commands, to troubleshoot complex VBA code.\\n\\n### 6. Performance Enhancement\\n- **Optimizing Workbook Performance**: Learn methods to optimize Excel workbooks for speed and efficiency, including minimizing the use of volatile functions and reducing screen updating.\\n- **Using Arrays for Data Processing**: Implement array processing to handle large datasets more efficiently compared to traditional loops.\\n\\n### 7. Security and Protection\\n- **Securing VBA Code**: Understand how to protect your VBA code from unauthorized access by using password protection and obfuscation techniques.\\n- **Data Validation and Protection**: Implement data validation techniques to maintain data integrity and protect sensitive information within your Excel applications.\\n\\n### 8. Deployment and Distribution\\n- **Creating Add-ins**: Learn how to package your VBA applications as Excel add-ins for easy distribution and use by other users.\\n- **Documentation and Support**: Develop comprehensive documentation and user manuals to support your applications, ensuring users can effectively leverage your solutions.\\n\\n### Conclusion\\nAchieving expert-level proficiency in Excel 2019 VBA empowers you to create highly customized, efficient, and powerful applications. By mastering the advanced techniques discussed in this guide, you can significantly enhance your productivity and solve complex business challenges effectively.\"\r\n        }\r\n    }', '2024-09-28 10:25:00');

-- --------------------------------------------------------

--
-- Table structure for table `excel_qna`
--

CREATE TABLE `excel_qna` (
  `id` int(11) NOT NULL,
  `questions` varchar(255) NOT NULL,
  `option_1` varchar(255) NOT NULL,
  `option_2` varchar(255) NOT NULL,
  `option_3` varchar(255) NOT NULL,
  `option_4` varchar(255) NOT NULL,
  `correct_option` varchar(255) NOT NULL,
  `level` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Table structure for table `level`
--

CREATE TABLE `level` (
  `C_ID` int(11) NOT NULL,
  `levels` int(11) NOT NULL,
  `beginner` varchar(400) NOT NULL,
  `intermediate` varchar(400) NOT NULL,
  `advance` varchar(400) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `level`
--

INSERT INTO `level` (`C_ID`, `levels`, `beginner`, `intermediate`, `advance`) VALUES
(101, 3, '\"Understanding syntax\",\"Variables and data types\",\"Basic operators\",\"Control flow (if statements)\",\"Functions\"', '\"Object-oriented programming\",\"Error handling and exceptions\",\"File I/O\",\"Modules and packages\",\"Basic data structures (lists, dictionaries)\"', '\"Decorators and generators\",\"Concurrency and parallelism\",\"Advanced data structures (sets, tuples)\",\"Testing and debugging\",\"Frameworks (Django, Flask)\"'),
(102, 3, 'beginner skills', 'intermediate skills', 'advance skills'),
(103, 2, 'beginner skills', '', 'advance skills');

-- --------------------------------------------------------

--
-- Table structure for table `profiles`
--

CREATE TABLE `profiles` (
  `id` int(11) NOT NULL,
  `email_id` varchar(280) NOT NULL,
  `course_title` varchar(240) NOT NULL,
  `level` varchar(240) NOT NULL,
  `chapters_completed` int(11) NOT NULL,
  `last_update_date` varchar(250) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Table structure for table `python_course`
--

CREATE TABLE `python_course` (
  `id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `level` int(11) NOT NULL,
  `topic_name` varchar(400) NOT NULL,
  `video_url` varchar(280) NOT NULL,
  `articles` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `created_at` varchar(240) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `python_course`
--

INSERT INTO `python_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(1, 101, 1, 'Introduction to Python', 'https://www.youtube.com/watch?v=W8KRzm6V32Q', '[{\r\n  \"title\": \"Introduction to Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Python is a high-level, interpreted programming language.\",\r\n    \"features\": \"It is known for its easy readability and simplicity.\",\r\n    \"usage\": \"Python is widely used in web development, data analysis, artificial intelligence, and more.\",\r\n    \"conclusion\": \"Learning Python can open doors to many programming opportunities.\"\r\n  }\r\n}]', '2024-09-28 03:45:00'),
(2, 101, 1, 'Downloading and Installing Python', 'https://www.youtube.com/watch?v=La1BdF_sunw', '[{\r\n  \"title\": \"Downloading and Installing Python\",\r\n  \"content\": {\r\n    \"steps\": {\r\n      \"step_1\": \"Go to the official Python website.\",\r\n      \"step_2\": \"Choose the version suitable for your OS.\",\r\n      \"step_3\": \"Run the installer and follow the instructions.\"\r\n    },\r\n    \"conclusion\": \"After installation, you are ready to start coding in Python.\"\r\n  }\r\n}]', '2024-09-28 03:50:00'),
(3, 101, 1, 'Basic Syntax', 'https://www.youtube.com/watch?v=7X4k9gFHTB8', '[{\r\n  \"title\": \"Basic Syntax in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Python syntax is known for its readability.\",\r\n    \"key_elements\": {\r\n      \"print_statements\": \"Use print() to output data.\",\r\n      \"comments\": \"Use # for single line comments.\"\r\n    },\r\n    \"conclusion\": \"Understanding syntax is crucial for writing clean code.\"\r\n  }\r\n}]', '2024-09-28 03:55:00'),
(4, 101, 1, 'Variables and Data Types', 'https://www.youtube.com/watch?v=1UzSDMJRh8c', '[{\r\n  \"title\": \"Variables and Data Types\",\r\n  \"content\": {\r\n    \"introduction\": \"Variables are used to store information.\",\r\n    \"data_types\": {\r\n      \"int\": \"Integer data type.\",\r\n      \"float\": \"Floating-point data type.\",\r\n      \"str\": \"String data type.\"\r\n    },\r\n    \"conclusion\": \"Choosing the right data type is important for efficient coding.\"\r\n  }\r\n}]', '2024-09-28 04:00:00'),
(5, 101, 1, 'Operators in Python', 'https://www.youtube.com/watch?v=3u8H7I43ZV8', '[{\r\n  \"title\": \"Operators in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Operators perform operations on variables and values.\",\r\n    \"types\": {\r\n      \"arithmetic\": \"+ , - , * , /\",\r\n      \"comparison\": \"== , != , > , <\"\r\n    },\r\n    \"conclusion\": \"Understanding operators is essential for building logic in your programs.\"\r\n  }\r\n}]', '2024-09-28 04:05:00'),
(6, 101, 1, 'Control Flow Statements', 'https://www.youtube.com/watch?v=whW0qf0qL5Q', '[{\r\n  \"title\": \"Control Flow Statements\",\r\n  \"content\": {\r\n    \"introduction\": \"Control flow statements determine the flow of execution.\",\r\n    \"if_statements\": \"if, elif, else statements handle decision making.\",\r\n    \"loops\": {\r\n      \"for_loops\": \"for loop iterates over a sequence.\",\r\n      \"while_loops\": \"while loop executes as long as a condition is true.\"\r\n    },\r\n    \"conclusion\": \"Mastering control flow is critical for logical programming.\"\r\n  }\r\n}]', '2024-09-28 04:10:00'),
(7, 101, 1, 'Functions in Python', 'https://www.youtube.com/watch?v=_uQrJ0TkLu', '[{\r\n  \"title\": \"Functions in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Functions are blocks of reusable code.\",\r\n    \"defining_functions\": \"Use def keyword to define a function.\",\r\n    \"calling_functions\": \"Call a function using its name followed by parentheses.\",\r\n    \"conclusion\": \"Functions help organize code and make it modular.\"\r\n  }\r\n}]', '2024-09-28 04:15:00'),
(8, 101, 1, 'Lists in Python', 'https://www.youtube.com/watch?v=ohCDWZgNIU0', '[{\r\n  \"title\": \"Lists in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Lists store multiple items in a single variable.\",\r\n    \"creating_lists\": \"Use square brackets to create a list.\",\r\n    \"accessing_elements\": \"Access elements using their index.\",\r\n    \"conclusion\": \"Lists are versatile and commonly used data structures.\"\r\n  }\r\n}]', '2024-09-28 04:20:00'),
(9, 101, 1, 'Dictionaries in Python', 'https://www.youtube.com/watch?v=daefaLgNkw0', '[{\r\n  \"title\": \"Dictionaries in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Dictionaries are used to store data values in key:value pairs.\",\r\n    \"creating_dictionaries\": \"Use curly braces to create a dictionary.\",\r\n    \"accessing_values\": \"Access values using their corresponding keys.\",\r\n    \"conclusion\": \"Dictionaries are useful for structured data storage.\"\r\n  }\r\n}]', '2024-09-28 04:25:00'),
(10, 101, 1, 'Tuples in Python', 'https://www.youtube.com/watch?v=W8KRzm6V32Q', '[{\r\n  \"title\": \"Tuples in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Tuples are similar to lists but are immutable.\",\r\n    \"creating_tuples\": \"Use parentheses to create a tuple.\",\r\n    \"conclusion\": \"Tuples are used when you want to ensure data cannot be changed.\"\r\n  }\r\n}]', '2024-09-28 04:30:00'),
(11, 101, 1, 'Set in Python', 'https://www.youtube.com/watch?v=sBvaPopWOmQ', '[{\r\n  \"title\": \"Set in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Sets are collections of unique elements.\",\r\n    \"creating_sets\": \"Use curly braces or the set() function.\",\r\n    \"properties\": \"Sets do not allow duplicates and are unordered.\",\r\n    \"conclusion\": \"Sets are useful for membership testing and eliminating duplicates.\"\r\n  }\r\n}]', '2024-09-28 04:35:00'),
(12, 101, 1, 'String Methods', 'https://www.youtube.com/watch?v=6pK6U6z77b8', '[{\r\n  \"title\": \"String Methods\",\r\n  \"content\": {\r\n    \"introduction\": \"Python provides many built-in string methods.\",\r\n    \"examples\": {\r\n      \"upper\": \"Converts a string to uppercase.\",\r\n      \"lower\": \"Converts a string to lowercase.\",\r\n      \"strip\": \"Removes whitespace from the beginning and end.\"\r\n    },\r\n    \"conclusion\": \"Understanding string methods is essential for text manipulation.\"\r\n  }\r\n}]', '2024-09-28 04:40:00'),
(13, 101, 1, 'File Handling', 'https://www.youtube.com/watch?v=Uh2ebFW8gMI', '[{\r\n  \"title\": \"File Handling\",\r\n  \"content\": {\r\n    \"introduction\": \"Python allows you to read and write files.\",\r\n    \"methods\": {\r\n      \"open\": \"Open a file using open().\",\r\n      \"read\": \"Read contents using read() or readlines().\",\r\n      \"write\": \"Write to a file using write().\"\r\n    },\r\n    \"conclusion\": \"File handling is important for data persistence.\"\r\n  }\r\n}]', '2024-09-28 04:45:00'),
(14, 101, 1, 'Error Handling', 'https://www.youtube.com/watch?v=NIWwJbo-9_8', '[{\r\n  \"title\": \"Error Handling\",\r\n  \"content\": {\r\n    \"introduction\": \"Error handling is crucial for robust applications.\",\r\n    \"try_except\": \"Use try and except to handle exceptions.\",\r\n    \"finally\": \"The finally block executes code regardless of an exception.\",\r\n    \"conclusion\": \"Proper error handling improves program reliability.\"\r\n  }\r\n}]', '2024-09-28 04:50:00'),
(15, 101, 1, 'Python Modules', 'https://www.youtube.com/watch?v=sugvnHA7ElY', '[{\r\n  \"title\": \"Python Modules\",\r\n  \"content\": {\r\n    \"introduction\": \"Modules are Python files that contain functions and variables.\",\r\n    \"importing_modules\": \"Use import statement to include a module.\",\r\n    \"creating_modules\": \"Create your own module by saving functions in a .py file.\",\r\n    \"conclusion\": \"Modules help organize code and promote reuse.\"\r\n  }\r\n}]', '2024-09-28 04:55:00'),
(16, 101, 1, 'Introduction to OOP', 'https://www.youtube.com/watch?v=JeznW_7DlB0', '[{\r\n  \"title\": \"Introduction to OOP\",\r\n  \"content\": {\r\n    \"introduction\": \"Object-Oriented Programming (OOP) is a programming paradigm.\",\r\n    \"key_concepts\": {\r\n      \"classes\": \"Blueprints for creating objects.\",\r\n      \"objects\": \"Instances of classes.\"\r\n    },\r\n    \"conclusion\": \"OOP helps structure code and enhance reusability.\"\r\n  }\r\n}]', '2024-09-28 05:00:00'),
(17, 101, 1, 'Classes and Objects', 'https://www.youtube.com/watch?v=apACNr7DC_s', '[{\r\n  \"title\": \"Classes and Objects\",\r\n  \"content\": {\r\n    \"introduction\": \"Classes define the properties and behaviors of objects.\",\r\n    \"creating_classes\": \"Use class keyword to define a class.\",\r\n    \"instantiating_objects\": \"Create objects using the class name followed by parentheses.\",\r\n    \"conclusion\": \"Understanding classes and objects is fundamental to OOP.\"\r\n  }\r\n}]', '2024-09-28 05:05:00'),
(18, 101, 1, 'Inheritance', 'https://www.youtube.com/watch?v=RSl87lqOXDE', '[{\r\n  \"title\": \"Inheritance\",\r\n  \"content\": {\r\n    \"introduction\": \"Inheritance allows one class to inherit the attributes and methods of another class.\",\r\n    \"benefits\": \"Promotes code reuse and reduces redundancy.\",\r\n    \"types\": \"Single, Multiple, and Multilevel inheritance.\",\r\n    \"conclusion\": \"Inheritance is a key feature of OOP for extending functionality.\"\r\n  }\r\n}]', '2024-09-28 05:10:00'),
(19, 101, 1, 'Polymorphism', 'https://www.youtube.com/watch?v=JZ3JaH0Y3Jg', '[{\r\n  \"title\": \"Polymorphism\",\r\n  \"content\": {\r\n    \"introduction\": \"Polymorphism allows methods to do different things based on the object.\\r\\n\", \r\n    \"example\": \"The same function name can be used for different types.\",\r\n    \"conclusion\": \"Polymorphism increases flexibility and scalability in your programs.\"\r\n  }\r\n}]', '2024-09-28 05:15:00'),
(20, 101, 1, 'Encapsulation', 'https://www.youtube.com/watch?v=1sZTFvFRP0c', '[{\r\n  \"title\": \"Encapsulation\",\r\n  \"content\": {\r\n    \"introduction\": \"Encapsulation restricts access to certain components of an object.\",\r\n    \"methods\": \"Use private and public access modifiers to define access levels.\",\r\n    \"benefits\": \"Enhances security and hides the internal state of an object.\",\r\n    \"conclusion\": \"Encapsulation is a fundamental concept in OOP that helps maintain data integrity.\"\r\n  }\r\n}]', '2024-09-28 05:20:00'),
(21, 101, 1, 'Data Structures in Python', 'https://www.youtube.com/watch?v=4tA-1YxCBOo', '[{\r\n  \"title\": \"Data Structures in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Python has several built-in data structures.\",\r\n    \"types\": {\r\n      \"lists\": \"Ordered and mutable collection.\",\r\n      \"tuples\": \"Ordered and immutable collection.\",\r\n      \"dictionaries\": \"Key-value pairs, unordered and mutable.\",\r\n      \"sets\": \"Unordered collection of unique elements.\"\r\n    },\r\n    \"conclusion\": \"Choosing the right data structure is crucial for efficiency.\"\r\n  }\r\n}]', '2024-09-28 05:25:00'),
(22, 101, 1, 'List Comprehensions', 'https://www.youtube.com/watch?v=3dt4oGRwHu0', '[{\r\n  \"title\": \"List Comprehensions\",\r\n  \"content\": {\r\n    \"introduction\": \"List comprehensions provide a concise way to create lists.\",\r\n    \"syntax\": \"[expression for item in iterable if condition]\",\r\n    \"example\": \"Squares of numbers: [x**2 for x in range(10)]\",\r\n    \"conclusion\": \"List comprehensions are more readable and faster than traditional loops.\"\r\n  }\r\n}]', '2024-09-28 05:30:00'),
(23, 101, 1, 'Lambda Functions', 'https://www.youtube.com/watch?v=hYzwCsKGRz8', '[{\r\n  \"title\": \"Lambda Functions\",\r\n  \"content\": {\r\n    \"introduction\": \"Lambda functions are small anonymous functions.\",\r\n    \"syntax\": \"lambda arguments: expression\",\r\n    \"example\": \"Square a number: lambda x: x**2\",\r\n    \"conclusion\": \"Useful for short operations without formal function definition.\"\r\n  }\r\n}]', '2024-09-28 05:35:00'),
(24, 101, 1, 'Decorators', 'https://www.youtube.com/watch?v=FsAPt_9BfRg', '[{\r\n  \"title\": \"Decorators\",\r\n  \"content\": {\r\n    \"introduction\": \"Decorators allow you to modify functions or methods.\\r\\n\", \r\n    \"syntax\": \"@decorator_name\\r\\nfunction function_name():\",\r\n    \"example\": \"@my_decorator def my_function():\",\r\n    \"conclusion\": \"Decorators are a powerful tool for enhancing functionality without changing the original code.\"\r\n  }\r\n}]', '2024-09-28 05:40:00'),
(25, 101, 1, 'Generators', 'https://www.youtube.com/watch?v=bD05uGo_sVI', '[{\r\n  \"title\": \"Generators\",\r\n  \"content\": {\r\n    \"introduction\": \"Generators provide a way to create iterators in a simple way.\",\r\n    \"yield_keyword\": \"Use yield to return values without losing function state.\",\r\n    \"example\": \"def my_generator(): yield value\",\r\n    \"conclusion\": \"Generators are memory efficient and allow lazy evaluation.\"\r\n  }\r\n}]', '2024-09-28 05:45:00'),
(26, 101, 1, 'Regular Expressions', 'https://www.youtube.com/watch?v=K8V7cQH1A0Q', '[{\r\n  \"title\": \"Regular Expressions\",\r\n  \"content\": {\r\n    \"introduction\": \"Regular expressions are used for pattern matching in strings.\",\r\n    \"re_module\": \"Use the re module to work with regex in Python.\",\r\n    \"common_methods\": {\r\n      \"search\": \"Find a pattern in a string.\",\r\n      \"match\": \"Check if the pattern matches at the start.\",\r\n      \"findall\": \"Find all occurrences of a pattern.\"\r\n    },\r\n    \"conclusion\": \"Regex is a powerful tool for string manipulation and searching.\"\r\n  }\r\n}]', '2024-09-28 05:50:00'),
(27, 101, 1, 'Understanding Scope', 'https://www.youtube.com/watch?v=9u9iTg5nUEY', '[{\r\n  \"title\": \"Understanding Scope\",\r\n  \"content\": {\r\n    \"introduction\": \"Scope defines the visibility of variables in Python.\",\r\n    \"types\": {\r\n      \"local\": \"Variables defined in a function.\",\r\n      \"global\": \"Variables defined at the top level of a script.\",\r\n      \"nonlocal\": \"Variables in a nested function.\"\r\n    },\r\n    \"conclusion\": \"Understanding scope is essential for writing effective Python code.\"\r\n  }\r\n}]', '2024-09-28 05:55:00'),
(28, 101, 1, 'Working with JSON', 'https://www.youtube.com/watch?v=9N6a-VLBa2I', '[{\r\n  \"title\": \"Working with JSON\",\r\n  \"content\": {\r\n    \"introduction\": \"JSON (JavaScript Object Notation) is a lightweight data interchange format.\",\r\n    \"json_module\": \"Use json module to parse JSON data in Python.\",\r\n    \"common_methods\": {\r\n      \"load\": \"Load JSON from a file.\",\r\n      \"loads\": \"Load JSON from a string.\",\r\n      \"dump\": \"Write JSON to a file.\",\r\n      \"dumps\": \"Convert Python objects to JSON strings.\"\r\n    },\r\n    \"conclusion\": \"JSON is widely used for data exchange in web applications.\"\r\n  }\r\n}]', '2024-09-28 06:00:00'),
(29, 101, 1, 'Unit Testing', 'https://www.youtube.com/watch?v=6tNS--WetLI', '[{\r\n  \"title\": \"Unit Testing\",\r\n  \"content\": {\r\n    \"introduction\": \"Unit testing is essential for ensuring code reliability.\",\r\n    \"unittest_module\": \"Pythons built-in unittest module helps in creating tests.\",\r\n    \"writing_tests\": \"Define test cases using the TestCase class.\",\r\n    \"conclusion\": \"Testing helps catch bugs early and improve code quality.\"\r\n  }\r\n}]', '2024-09-28 06:05:00'),
(30, 101, 1, 'Debugging Techniques', 'https://www.youtube.com/watch?v=OJ7H4B2k7F0', '[{\r\n  \"title\": \"Debugging Techniques\",\r\n  \"content\": {\r\n    \"introduction\": \"Debugging is the process of finding and fixing bugs in code.\",\r\n    \"techniques\": {\r\n      \"print_statements\": \"Using print() to track variable values.\",\r\n      \"pdb\": \"Pythons built-in debugger for step-by-step execution.\"\r\n    },\r\n    \"conclusion\": \"Effective debugging is key to developing reliable software.\"\r\n  }\r\n}]', '2024-09-28 06:10:00'),
(31, 101, 1, 'File Handling in Python', 'https://www.youtube.com/watch?v=Uh2ebFW8gM0', '[{\r\n  \"title\": \"File Handling in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"File handling is crucial for reading and writing files.\",\r\n    \"methods\": {\r\n      \"open\": \"Open a file using open() function.\",\r\n      \"read\": \"Read the contents of a file.\",\r\n      \"write\": \"Write data to a file.\",\r\n      \"close\": \"Close the file after operations.\"\r\n    },\r\n    \"conclusion\": \"Proper file handling ensures data integrity and resource management.\"\r\n  }\r\n}]', '2024-09-28 06:15:00'),
(32, 101, 1, 'Exception Handling', 'https://www.youtube.com/watch?v=NIWwJbo-9_8', '[{\r\n  \"title\": \"Exception Handling\",\r\n  \"content\": {\r\n    \"introduction\": \"Exceptions are events that disrupt the normal flow of execution.\",\r\n    \"try_except\": \"Use try and except blocks to handle exceptions.\",\r\n    \"finally_block\": \"Code in the finally block always executes.\",\r\n    \"conclusion\": \"Exception handling is vital for building robust applications.\"\r\n  }\r\n}]', '2024-09-28 06:20:00'),
(33, 101, 1, 'Virtual Environments', 'https://www.youtube.com/watch?v=K7V2tF08ZsE', '[{\r\n  \"title\": \"Virtual Environments\",\r\n  \"content\": {\r\n    \"introduction\": \"Virtual environments help manage dependencies for different projects.\",\r\n    \"creation\": \"Use venv module to create virtual environments.\",\r\n    \"activation\": \"Activate the environment using source or activate command.\",\r\n    \"conclusion\": \"Virtual environments prevent dependency conflicts.\"\r\n  }\r\n}]', '2024-09-28 06:25:00'),
(34, 101, 1, 'Working with CSV Files', 'https://www.youtube.com/watch?v=9kx5N2cT5PE', '[{\r\n  \"title\": \"Working with CSV Files\",\r\n  \"content\": {\r\n    \"introduction\": \"CSV (Comma-Separated Values) files are commonly used for data storage.\",\r\n    \"csv_module\": \"Use csv module for reading and writing CSV files.\",\r\n    \"example\": \"reader = csv.reader(open(\"file.csv\"))\",\r\n    \"conclusion\": \"CSV files are easy to handle and widely supported.\"\r\n  }\r\n}]', '2024-09-28 06:30:00'),
(35, 101, 1, 'Web Scraping with Beautiful Soup', 'https://www.youtube.com/watch?v=ng2o98k983k', '[{\r\n  \"title\": \"Web Scraping with Beautiful Soup\",\r\n  \"content\": {\r\n    \"introduction\": \"Beautiful Soup is a library for pulling data out of HTML and XML files.\",\r\n    \"installation\": \"Install using pip: pip install beautifulsoup4\",\r\n    \"usage\": \"from bs4 import BeautifulSoup\",\r\n    \"conclusion\": \"Web scraping is useful for collecting data from the web.\"\r\n  }\r\n}]', '2024-09-28 06:35:00'),
(36, 101, 1, 'Introduction to Pandas', 'https://www.youtube.com/watch?v=zmdjNSmRXF4', '[{\r\n  \"title\": \"Introduction to Pandas\",\r\n  \"content\": {\r\n    \"introduction\": \"Pandas is a powerful data analysis and manipulation library.\",\r\n    \"dataframes\": \"The primary data structure in Pandas is the DataFrame.\",\r\n    \"example\": \"import pandas as pd; df = pd.DataFrame(data)\",\r\n    \"conclusion\": \"Pandas is essential for data analysis in Python.\"\r\n  }\r\n}]', '2024-09-28 06:40:00'),
(37, 101, 1, 'Introduction to NumPy', 'https://www.youtube.com/watch?v=QUT1i0xn_8I', '[{\r\n  \"title\": \"Introduction to NumPy\",\r\n  \"content\": {\r\n    \"introduction\": \"NumPy is a library for numerical computations in Python.\",\r\n    \"ndarrays\": \"The core data structure is the ndarray (n-dimensional array).\",\r\n    \"example\": \"import numpy as np; arr = np.array([1, 2, 3])\",\r\n    \"conclusion\": \"NumPy is fundamental for scientific computing in Python.\"\r\n  }\r\n}]', '2024-09-28 06:45:00'),
(38, 101, 1, 'Data Visualization with Matplotlib', 'https://www.youtube.com/watch?v=3Xc3CA655Y4', '[{\r\n  \"title\": \"Data Visualization with Matplotlib\",\r\n  \"content\": {\r\n    \"introduction\": \"Matplotlib is a plotting library for the Python programming language.\",\r\n    \"basic_plotting\": \"Use plt.plot() for basic plotting.\",\r\n    \"example\": \"import matplotlib.pyplot as plt; plt.plot(x, y)\",\r\n    \"conclusion\": \"Data visualization is key for interpreting data insights.\"\r\n  }\r\n}]', '2024-09-28 06:50:00'),
(39, 101, 1, 'Introduction to Seaborn', 'https://www.youtube.com/watch?v=6GUZXGi6gcI', '[{\r\n  \"title\": \"Introduction to Seaborn\",\r\n  \"content\": {\r\n    \"introduction\": \"Seaborn is a statistical data visualization library based on Matplotlib.\",\r\n    \"installation\": \"Install using pip: pip install seaborn\",\r\n    \"example\": \"import seaborn as sns; sns.scatterplot(x, y)\",\r\n    \"conclusion\": \"Seaborn makes it easier to create beautiful visualizations.\"\r\n  }\r\n}]', '2024-09-28 06:55:00'),
(40, 101, 1, 'Introduction to Machine Learning', 'https://www.youtube.com/watch?v=GwIo3gOz8H8', '[{\r\n  \"title\": \"Introduction to Machine Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Machine learning is a subset of artificial intelligence that involves training models to make predictions.\",\r\n    \"types\": {\r\n      \"supervised\": \"Learning with labeled data.\",\r\n      \"unsupervised\": \"Learning with unlabeled data.\"\r\n    },\r\n    \"conclusion\": \"Machine learning is transforming industries and applications.\"\r\n  }\r\n}]', '2024-09-28 07:00:00'),
(41, 101, 1, 'Introduction to Flask', 'https://www.youtube.com/watch?v=Z1RJmh_OqeA', '[{\r\n  \"title\": \"Introduction to Flask\",\r\n  \"content\": {\r\n    \"introduction\": \"Flask is a micro web framework for Python.\",\r\n    \"installation\": \"Install using pip: pip install Flask\",\r\n    \"basic_app\": \"Create a basic Flask app to serve web pages.\",\r\n    \"conclusion\": \"Flask is lightweight and easy to get started with web development.\"\r\n  }\r\n}]', '2024-09-28 07:05:00'),
(42, 101, 1, 'Introduction to Django', 'https://www.youtube.com/watch?v=UmljXZIypDc', '[{\r\n  \"title\": \"Introduction to Django\",\r\n  \"content\": {\r\n    \"introduction\": \"Django is a high-level Python web framework that encourages rapid development.\",\r\n    \"features\": \"Built-in admin interface, ORM, and security features.\",\r\n    \"getting_started\": \"Use django-admin startproject to create a new project.\",\r\n    \"conclusion\": \"Django is powerful for building complex web applications.\"\r\n  }\r\n}]', '2024-09-28 07:10:00'),
(43, 101, 1, 'APIs with Flask', 'https://www.youtube.com/watch?v=sbwQmS7H4U0', '[{\r\n  \"title\": \"APIs with Flask\",\r\n  \"content\": {\r\n    \"introduction\": \"Flask makes it easy to build RESTful APIs.\",\r\n    \"routing\": \"Define routes to handle different API endpoints.\",\r\n    \"returning_json\": \"Use jsonify to return JSON responses.\",\r\n    \"conclusion\": \"Flask is a great choice for API development.\"\r\n  }\r\n}]', '2024-09-28 07:15:00'),
(44, 101, 1, 'Django Models', 'https://www.youtube.com/watch?v=6iF8Xb7Z3wQ', '[{\r\n  \"title\": \"Django Models\",\r\n  \"content\": {\r\n    \"introduction\": \"Models are Python classes that define the structure of your database.\",\r\n    \"creating_models\": \"Define models using Django’s ORM.\",\r\n    \"migrations\": \"Run migrations to apply changes to the database.\",\r\n    \"conclusion\": \"Django models simplify database interactions.\"\r\n  }\r\n}]', '2024-09-28 07:20:00'),
(45, 101, 1, 'Flask Templating', 'https://www.youtube.com/watch?v=Z1RJmh_OqeA&t=138s', '[{\r\n  \"title\": \"Flask Templating\",\r\n  \"content\": {\r\n    \"introduction\": \"Jinja2 is the templating engine used by Flask.\",\r\n    \"render_template\": \"Use render_template to serve HTML with dynamic content.\",\r\n    \"example\": \"return render_template(\"index.html\", name=\"World\")\",\r\n    \"conclusion\": \"Templating allows for dynamic web pages.\"\r\n  }\r\n}]', '2024-09-28 07:25:00'),
(46, 101, 1, 'Django Views', 'https://www.youtube.com/watch?v=UmljXZIypDc&t=195s', '[{\r\n  \"title\": \"Django Views\",\r\n  \"content\": {\r\n    \"introduction\": \"Views control the logic behind what data is displayed in a web application.\",\r\n    \"function_based_views\": \"Define views as functions that take a request and return a response.\",\r\n    \"class_based_views\": \"Use classes for more complex views.\",\r\n    \"conclusion\": \"Views are essential for handling user requests.\"\r\n  }\r\n}]', '2024-09-28 07:30:00'),
(47, 101, 1, 'Flask Forms', 'https://www.youtube.com/watch?v=Hf4MJH0jDb8', '[{\r\n  \"title\": \"Flask Forms\",\r\n  \"content\": {\r\n    \"introduction\": \"Flask-WTF is an extension for handling forms.\",\r\n    \"form_validation\": \"Validate form data to ensure it meets certain criteria.\",\r\n    \"example\": \"form = MyForm() if form.validate_on_submit():\",\r\n    \"conclusion\": \"Forms are vital for user input in web applications.\"\r\n  }\r\n}]', '2024-09-28 07:35:00'),
(48, 101, 1, 'Django Admin Interface', 'https://www.youtube.com/watch?v=8W6B1BrJ4bY', '[{\r\n  \"title\": \"Django Admin Interface\",\r\n  \"content\": {\r\n    \"introduction\": \"Django comes with a built-in admin interface for managing models.\",\r\n    \"customization\": \"Customize the admin interface to fit your needs.\",\r\n    \"usage\": \"Access it at /admin after creating a superuser.\",\r\n    \"conclusion\": \"The admin interface is powerful for managing data.\"\r\n  }\r\n}]', '2024-09-28 07:40:00'),
(49, 101, 1, 'RESTful APIs with Django REST Framework', 'https://www.youtube.com/watch?v=YkJ9H2vC5IU', '[{\r\n  \"title\": \"RESTful APIs with Django REST Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Django REST framework simplifies building APIs in Django.\",\r\n    \"serialization\": \"Convert complex data types to native Python data types.\",\r\n    \"viewsets\": \"Use viewsets for handling API endpoints.\",\r\n    \"conclusion\": \"Django REST framework is essential for API development.\"\r\n  }\r\n}]', '2024-09-28 07:45:00'),
(50, 101, 1, 'Introduction to Testing in Python', 'https://www.youtube.com/watch?v=6tNS--WetLI', '[{\r\n  \"title\": \"Introduction to Testing in Python\",\r\n  \"content\": {\r\n    \"introduction\": \"Testing is critical for ensuring your code works as expected.\",\r\n    \"unittest\": \"Use the unittest module for writing and running tests.\",\r\n    \"example\": \"import unittest; class TestMyFunction(unittest.TestCase):\",\r\n    \"conclusion\": \"Testing improves code quality and reduces bugs.\"\r\n  }\r\n}]', '2024-09-28 07:50:00'),
(51, 101, 2, 'Advanced Flask Features', 'https://www.youtube.com/watch?v=9K1lZz5qOEY', '[{\r\n  \"title\": \"Advanced Flask Features\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore advanced features such as blueprints and custom error pages.\",\r\n    \"blueprints\": \"Organize your Flask application using blueprints.\",\r\n    \"error_handling\": \"Create custom error pages for a better user experience.\",\r\n    \"conclusion\": \"Mastering these features enhances your Flask application.\",\r\n  }\r\n}]', '2024-09-28 08:00:00'),
(52, 101, 2, 'Django Middleware', 'https://www.youtube.com/watch?v=WaI4f5tU8dM', '[{\r\n  \"title\": \"Django Middleware\",\r\n  \"content\": {\r\n    \"introduction\": \"Middleware is a way to process requests globally before they reach the view.\",\r\n    \"custom_middleware\": \"Create custom middleware for logging or authentication.\",\r\n    \"usage\": \"Add middleware classes to the MIDDLEWARE setting.\",\r\n    \"conclusion\": \"Middleware can be used for a variety of tasks in Django.\",\r\n  }\r\n}]', '2024-09-28 08:05:00'),
(53, 101, 2, 'Flask Authentication', 'https://www.youtube.com/watch?v=Z1RJmh_OqeA&t=300s', '[{\r\n  \"title\": \"Flask Authentication\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement user authentication in Flask applications.\",\r\n    \"session_management\": \"Manage user sessions securely with Flask-Login.\",\r\n    \"example\": \"Use decorators to protect routes from unauthorized access.\",\r\n    \"conclusion\": \"Implementing authentication enhances the security of your application.\",\r\n  }\r\n}]', '2024-09-28 08:10:00'),
(54, 101, 2, 'Django Forms', 'https://www.youtube.com/watch?v=5fUlJpD5OUU', '[{\r\n  \"title\": \"Django Forms\",\r\n  \"content\": {\r\n    \"introduction\": \"Forms in Django allow you to handle user input easily.\",\r\n    \"creating_forms\": \"Define forms using Django’s Form class.\",\r\n    \"validation\": \"Add validation methods to ensure data integrity.\",\r\n    \"conclusion\": \"Forms are integral to user interaction in web applications.\",\r\n  }\r\n}]', '2024-09-28 08:15:00'),
(55, 101, 2, 'Building APIs with Django REST Framework', 'https://www.youtube.com/watch?v=4nq6P9gZwUw', '[{\r\n  \"title\": \"Building APIs with Django REST Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to build robust APIs using Django REST Framework.\",\r\n    \"viewsets\": \"Utilize viewsets for efficient API endpoint management.\",\r\n    \"serialization\": \"Understand how to serialize data effectively.\",\r\n    \"conclusion\": \"Django REST Framework is essential for modern web applications.\",\r\n  }\r\n}]', '2024-09-28 08:20:00'),
(56, 101, 2, 'Unit Testing in Django', 'https://www.youtube.com/watch?v=8j_zpY8OVSw', '[{\r\n  \"title\": \"Unit Testing in Django\",\r\n  \"content\": {\r\n    \"introduction\": \"Testing is critical for maintaining code quality.\",\r\n    \"test_cases\": \"Write test cases for your Django applications to ensure functionality.\",\r\n    \"testing_views\": \"Learn how to test views and templates.\",\r\n    \"conclusion\": \"Regular testing improves the reliability of your application.\",\r\n  }\r\n}]', '2024-09-28 08:25:00'),
(57, 101, 2, 'Flask and SQLAlchemy', 'https://www.youtube.com/watch?v=G4qVXyV0hb8', '[{\r\n  \"title\": \"Flask and SQLAlchemy\",\r\n  \"content\": {\r\n    \"introduction\": \"Integrate SQLAlchemy for database interactions in Flask applications.\",\r\n    \"models\": \"Define models using SQLAlchemy ORM features.\",\r\n    \"queries\": \"Learn how to perform queries and handle results.\",\r\n    \"conclusion\": \"SQLAlchemy simplifies database management in Flask.\",\r\n  }\r\n}]', '2024-09-28 08:30:00'),
(58, 101, 2, 'Django REST Framework Serializers', 'https://www.youtube.com/watch?v=s1HTAYnVfrU', '[{\r\n  \"title\": \"Django REST Framework Serializers\",\r\n  \"content\": {\r\n    \"introduction\": \"Serializers convert complex data types to native Python data types.\",\r\n    \"usage\": \"Use serializers to validate and save data.\",\r\n    \"example\": \"Define serializers for your Django models.\",\r\n    \"conclusion\": \"Serializers are crucial for API development in Django.\",\r\n  }\r\n}]', '2024-09-28 08:35:00'),
(59, 101, 2, 'Flask RESTful API', 'https://www.youtube.com/watch?v=fX4c6iZ3SHI', '[{\r\n  \"title\": \"Flask RESTful API\",\r\n  \"content\": {\r\n    \"introduction\": \"Build a RESTful API with Flask and Flask-RESTful.\",\r\n    \"resources\": \"Define resources and set up API routes.\",\r\n    \"testing\": \"Test your API endpoints with Postman.\",\r\n    \"conclusion\": \"Creating RESTful APIs is straightforward with Flask.\",\r\n  }\r\n}]', '2024-09-28 08:40:00'),
(60, 101, 2, 'Django Testing Framework', 'https://www.youtube.com/watch?v=xklQEVmgqxQ', '[{\r\n  \"title\": \"Django Testing Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to utilize the Django testing framework for unit tests.\",\r\n    \"set_up\": \"Set up test cases for your Django applications.\",\r\n    \"assertions\": \"Use assertions to verify expected outcomes.\",\r\n    \"conclusion\": \"Django’s testing framework aids in maintaining code quality.\",\r\n  }\r\n}]', '2024-09-28 08:45:00'),
(61, 101, 2, 'Building APIs with Django REST Framework', 'https://www.youtube.com/watch?v=4nq6P9gZwUw', '[{\r\n  \"title\": \"Building APIs with Django REST Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to build robust APIs using Django REST Framework.\",\r\n    \"viewsets\": \"Utilize viewsets for efficient API endpoint management.\",\r\n    \"serialization\": \"Understand how to serialize data effectively.\",\r\n    \"conclusion\": \"Django REST Framework is essential for modern web applications.\",\r\n  }\r\n}]', '2024-09-28 08:20:00'),
(62, 101, 2, 'Unit Testing in Django', 'https://www.youtube.com/watch?v=8j_zpY8OVSw', '[{\r\n  \"title\": \"Unit Testing in Django\",\r\n  \"content\": {\r\n    \"introduction\": \"Testing is critical for maintaining code quality.\",\r\n    \"test_cases\": \"Write test cases for your Django applications to ensure functionality.\",\r\n    \"testing_views\": \"Learn how to test views and templates.\",\r\n    \"conclusion\": \"Regular testing improves the reliability of your application.\",\r\n  }\r\n}]', '2024-09-28 08:25:00'),
(63, 101, 2, 'Flask and SQLAlchemy', 'https://www.youtube.com/watch?v=G4qVXyV0hb8', '[{\r\n  \"title\": \"Flask and SQLAlchemy\",\r\n  \"content\": {\r\n    \"introduction\": \"Integrate SQLAlchemy for database interactions in Flask applications.\",\r\n    \"models\": \"Define models using SQLAlchemy ORM features.\",\r\n    \"queries\": \"Learn how to perform queries and handle results.\",\r\n    \"conclusion\": \"SQLAlchemy simplifies database management in Flask.\",\r\n  }\r\n}]', '2024-09-28 08:30:00'),
(64, 101, 2, 'Django REST Framework Serializers', 'https://www.youtube.com/watch?v=s1HTAYnVfrU', '[{\r\n  \"title\": \"Django REST Framework Serializers\",\r\n  \"content\": {\r\n    \"introduction\": \"Serializers convert complex data types to native Python data types.\",\r\n    \"usage\": \"Use serializers to validate and save data.\",\r\n    \"example\": \"Define serializers for your Django models.\",\r\n    \"conclusion\": \"Serializers are crucial for API development in Django.\",\r\n  }\r\n}]', '2024-09-28 08:35:00'),
(65, 101, 2, 'Flask RESTful API', 'https://www.youtube.com/watch?v=fX4c6iZ3SHI', '[{\r\n  \"title\": \"Flask RESTful API\",\r\n  \"content\": {\r\n    \"introduction\": \"Build a RESTful API with Flask and Flask-RESTful.\",\r\n    \"resources\": \"Define resources and set up API routes.\",\r\n    \"testing\": \"Test your API endpoints with Postman.\",\r\n    \"conclusion\": \"Creating RESTful APIs is straightforward with Flask.\",\r\n  }\r\n}]', '2024-09-28 08:40:00'),
(66, 101, 2, 'Django Testing Framework', 'https://www.youtube.com/watch?v=xklQEVmgqxQ', '[{\r\n  \"title\": \"Django Testing Framework\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to utilize the Django testing framework for unit tests.\",\r\n    \"set_up\": \"Set up test cases for your Django applications.\",\r\n    \"assertions\": \"Use assertions to verify expected outcomes.\",\r\n    \"conclusion\": \"Django’s testing framework aids in maintaining code quality.\",\r\n  }\r\n}]', '2024-09-28 08:45:00'),
(67, 101, 2, 'Asynchronous Programming in Django', 'https://www.youtube.com/watch?v=Zjkd6_BNhA4', '[{\r\n  \"title\": \"Asynchronous Programming in Django\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement asynchronous views and tasks in Django.\",\r\n    \"async_views\": \"Define asynchronous views to handle requests efficiently.\",\r\n    \"tasks\": \"Use Celery for background task processing.\",\r\n    \"conclusion\": \"Asynchronous programming improves performance in web applications.\",\r\n  }\r\n}]', '2024-09-28 08:50:00'),
(68, 101, 2, 'Flask CORS Handling', 'https://www.youtube.com/watch?v=J-KuZW_pn0I', '[{\r\n  \"title\": \"Flask CORS Handling\",\r\n  \"content\": {\r\n    \"introduction\": \"Understand how to handle Cross-Origin Resource Sharing (CORS) in Flask.\",\r\n    \"configuration\": \"Set up CORS to allow cross-origin requests.\",\r\n    \"security\": \"Understand the security implications of CORS.\",\r\n    \"conclusion\": \"Proper CORS handling is essential for web applications.\",\r\n  }\r\n}]', '2024-09-28 08:55:00'),
(69, 101, 2, 'Django Admin Customization', 'https://www.youtube.com/watch?v=WeZ9k4gwh34', '[{\r\n  \"title\": \"Django Admin Customization\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to customize the Django admin interface.\",\r\n    \"admin_views\": \"Create custom admin views for better management.\",\r\n    \"styling\": \"Use CSS and JavaScript to style the admin panel.\",\r\n    \"conclusion\": \"Customizing the admin enhances usability for administrators.\",\r\n  }\r\n}]', '2024-09-28 09:00:00'),
(70, 101, 2, 'Integrating Flask with GraphQL', 'https://www.youtube.com/watch?v=K2_fB2yI_9U', '[{\r\n  \"title\": \"Integrating Flask with GraphQL\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement GraphQL in your Flask applications.\",\r\n    \"setup\": \"Set up Flask-GraphQL for easier API development.\",\r\n    \"queries_mutations\": \"Define queries and mutations for your API.\",\r\n    \"conclusion\": \"GraphQL provides a more flexible alternative to REST.\",\r\n  }\r\n}]', '2024-09-28 09:05:00'),
(71, 101, 2, 'Flask File Uploads', 'https://www.youtube.com/watch?v=8k1L0WLYeHo', '[{\r\n  \"title\": \"Flask File Uploads\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to handle file uploads in Flask applications.\",\r\n    \"file_storage\": \"Use Flask’s file storage features to manage uploaded files.\",\r\n    \"validation\": \"Implement file validation to ensure security.\",\r\n    \"conclusion\": \"Proper file upload handling is crucial for web applications.\",\r\n  }\r\n}]', '2024-09-28 09:10:00'),
(72, 101, 2, 'Using Redis with Flask', 'https://www.youtube.com/watch?v=JZLhA5rjTnE', '[{\r\n  \"title\": \"Using Redis with Flask\",\r\n  \"content\": {\r\n    \"introduction\": \"Integrate Redis as a caching mechanism for Flask applications.\",\r\n    \"setup\": \"Configure Redis for your Flask project.\",\r\n    \"caching\": \"Implement caching strategies to improve performance.\",\r\n    \"conclusion\": \"Using Redis effectively boosts application speed.\",\r\n  }\r\n}]', '2024-09-28 09:15:00'),
(73, 101, 2, 'Django Signals', 'https://www.youtube.com/watch?v=3I6sTqWqC4Y', '[{\r\n  \"title\": \"Django Signals\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to use signals in Django for decoupled applications.\",\r\n    \"usage\": \"Create and connect signal handlers for events.\",\r\n    \"examples\": \"Explore common signals like post_save and pre_delete.\",\r\n    \"conclusion\": \"Signals facilitate better application architecture.\",\r\n  }\r\n}]', '2024-09-28 09:20:00'),
(74, 101, 2, 'Flask JWT Authentication', 'https://www.youtube.com/watch?v=zO-T_oGEO1I', '[{\r\n  \"title\": \"Flask JWT Authentication\",\r\n  \"content\": {\r\n    \"introduction\": \"Implement JSON Web Token (JWT) authentication in Flask.\",\r\n    \"setup\": \"Configure Flask-JWT-Extended for secure authentication.\",\r\n    \"protect_routes\": \"Learn how to protect your routes using JWT.\",\r\n    \"conclusion\": \"JWT is a modern approach to secure APIs.\",\r\n  }\r\n}]', '2024-09-28 09:25:00'),
(75, 101, 2, 'Creating Custom Django Management Commands', 'https://www.youtube.com/watch?v=ZMx6CS0AdP8', '[{\r\n  \"title\": \"Creating Custom Django Management Commands\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to create custom management commands in Django.\",\r\n    \"setup\": \"Define your commands in the management/commands directory.\",\r\n    \"usage\": \"Run your custom commands using the Django manage.py script.\",\r\n    \"conclusion\": \"Custom commands can simplify repetitive tasks.\",\r\n  }\r\n}]', '2024-09-28 09:30:00'),
(76, 101, 2, 'Django Rest Framework Authentication', 'https://www.youtube.com/watch?v=OE25uAIcU6o', '[{\r\n  \"title\": \"Django Rest Framework Authentication\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore different authentication methods in DRF.\",\r\n    \"methods\": \"Implement Token, Session, and JWT authentication.\",\r\n    \"setup\": \"Configure your authentication classes in settings.py.\",\r\n    \"conclusion\": \"Choosing the right authentication method is vital for security.\",\r\n  }\r\n}]', '2024-09-28 09:35:00'),
(77, 101, 2, 'Flask Blueprints', 'https://www.youtube.com/watch?v=1c1-ZFipZgE', '[{\r\n  \"title\": \"Flask Blueprints\",\r\n  \"content\": {\r\n    \"introduction\": \"Organize your Flask application with blueprints.\",\r\n    \"setup\": \"Create and register blueprints for modular applications.\",\r\n    \"examples\": \"Use blueprints for separating features and functionalities.\",\r\n    \"conclusion\": \"Blueprints enhance the organization of your codebase.\",\r\n  }\r\n}]', '2024-09-28 09:40:00'),
(78, 101, 2, 'Django Pagination', 'https://www.youtube.com/watch?v=5gZwA0cnH4Y', '[{\r\n  \"title\": \"Django Pagination\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement pagination in your Django applications.\",\r\n    \"class_based\": \"Utilize Django’s built-in pagination classes.\",\r\n    \"example\": \"Create paginated views for better user experience.\",\r\n    \"conclusion\": \"Pagination is crucial for displaying large datasets.\",\r\n  }\r\n}]', '2024-09-28 09:45:00'),
(79, 101, 2, 'Integrating Flask with Celery', 'https://www.youtube.com/watch?v=PMjzD4Rby8s', '[{\r\n  \"title\": \"Integrating Flask with Celery\",\r\n  \"content\": {\r\n    \"introduction\": \"Use Celery for handling asynchronous tasks in Flask.\",\r\n    \"setup\": \"Configure Celery with Flask for background job processing.\",\r\n    \"examples\": \"Create tasks that run asynchronously to improve performance.\",\r\n    \"conclusion\": \"Asynchronous processing enhances application responsiveness.\",\r\n  }\r\n}]', '2024-09-28 09:50:00'),
(80, 101, 2, 'Django Custom Managers', 'https://www.youtube.com/watch?v=xAsC_YfYf6M', '[{\r\n  \"title\": \"Django Custom Managers\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to create custom managers in Django models.\",\r\n    \"setup\": \"Define custom methods for your model managers.\",\r\n    \"usage\": \"Utilize managers for complex query logic.\",\r\n    \"conclusion\": \"Custom managers streamline your data access logic.\",\r\n  }\r\n}]', '2024-09-28 09:55:00'),
(81, 101, 2, 'Flask SQLAlchemy Migrations', 'https://www.youtube.com/watch?v=gZ6SbTuYxkU', '[{\r\n  \"title\": \"Flask SQLAlchemy Migrations\",\r\n  \"content\": {\r\n    \"introduction\": \"Manage database migrations in Flask using Flask-Migrate.\",\r\n    \"setup\": \"Install and configure Flask-Migrate in your application.\",\r\n    \"commands\": \"Use migration commands to create and apply migrations.\",\r\n    \"conclusion\": \"Migrations help maintain database integrity during development.\",\r\n  }\r\n}]', '2024-09-28 10:00:00'),
(82, 101, 2, 'Django Model Relationships', 'https://www.youtube.com/watch?v=5L52cPwAORU', '[{\r\n  \"title\": \"Django Model Relationships\",\r\n  \"content\": {\r\n    \"introduction\": \"Understand how to define relationships between Django models.\",\r\n    \"types\": \"Explore one-to-one, one-to-many, and many-to-many relationships.\",\r\n    \"usage\": \"Use ForeignKey and ManyToManyField in your models.\",\r\n    \"conclusion\": \"Proper model relationships are essential for complex data structures.\",\r\n  }\r\n}]', '2024-09-28 10:05:00'),
(83, 101, 2, 'Flask Mail', 'https://www.youtube.com/watch?v=33QmmLwsHto', '[{\r\n  \"title\": \"Flask Mail\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to send emails from your Flask applications.\",\r\n    \"setup\": \"Configure Flask-Mail for email services.\",\r\n    \"examples\": \"Send different types of emails, including HTML and plain text.\",\r\n    \"conclusion\": \"Email functionality enhances user communication in web applications.\",\r\n  }\r\n}]', '2024-09-28 10:10:00'),
(84, 101, 2, 'Django QuerySet Methods', 'https://www.youtube.com/watch?v=F8b6F9f3eAo', '[{\r\n  \"title\": \"Django QuerySet Methods\",\r\n  \"content\": {\r\n    \"introduction\": \"Master the various QuerySet methods available in Django.\",\r\n    \"filtering\": \"Use filtering methods to retrieve specific records.\",\r\n    \"aggregation\": \"Learn about aggregation methods for data analysis.\",\r\n    \"conclusion\": \"Effective QuerySet methods improve data manipulation and retrieval.\",\r\n  }\r\n}]', '2024-09-28 10:15:00'),
(85, 101, 2, 'Flask Sessions', 'https://www.youtube.com/watch?v=HgW7Xf9W9PA', '[{\r\n  \"title\": \"Flask Sessions\",\r\n  \"content\": {\r\n    \"introduction\": \"Manage user sessions in Flask applications for state persistence.\",\r\n    \"setup\": \"Configure session handling using Flask’s session feature.\",\r\n    \"examples\": \"Store and retrieve data from user sessions.\",\r\n    \"conclusion\": \"Sessions are essential for personalized user experiences.\",\r\n  }\r\n}]', '2024-09-28 10:20:00'),
(86, 101, 2, 'Django Middleware Customization', 'https://www.youtube.com/watch?v=TTos3pPdv8s', '[{\r\n  \"title\": \"Django Middleware Customization\",\r\n  \"content\": {\r\n    \"introduction\": \"Create custom middleware to handle requests and responses in Django.\",\r\n    \"setup\": \"Define middleware classes for different purposes.\",\r\n    \"examples\": \"Implement middleware for logging and authentication.\",\r\n    \"conclusion\": \"Custom middleware enhances functionality and control over requests.\",\r\n  }\r\n}]', '2024-09-28 10:25:00'),
(87, 101, 2, 'Flask Application Factory', 'https://www.youtube.com/watch?v=9TR1f_wn15M', '[{\r\n  \"title\": \"Flask Application Factory\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn about the application factory pattern for structuring Flask apps.\",\r\n    \"setup\": \"Create a factory function to instantiate your Flask app.\",\r\n    \"usage\": \"Manage application configurations and blueprints efficiently.\",\r\n    \"conclusion\": \"The application factory pattern improves code organization and testing.\",\r\n  }\r\n}]', '2024-09-28 10:30:00'),
(88, 101, 2, 'Django Caching', 'https://www.youtube.com/watch?v=V2P_pnFljH8', '[{\r\n  \"title\": \"Django Caching\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore caching strategies to improve Django app performance.\",\r\n    \"setup\": \"Configure caching backends in your Django settings.\",\r\n    \"examples\": \"Use cache decorators and template caching.\",\r\n    \"conclusion\": \"Caching significantly reduces load times and database queries.\",\r\n  }\r\n}]', '2024-09-28 10:35:00'),
(89, 101, 2, 'Flask API Development Best Practices', 'https://www.youtube.com/watch?v=pYwqD4cSENM', '[{\r\n  \"title\": \"Flask API Development Best Practices\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn best practices for developing RESTful APIs with Flask.\",\r\n    \"documentation\": \"Use Swagger for API documentation.\",\r\n    \"error_handling\": \"Implement proper error handling and response formats.\",\r\n    \"conclusion\": \"Adhering to best practices ensures maintainable and scalable APIs.\",\r\n  }\r\n}]', '2024-09-28 10:40:00'),
(90, 101, 2, 'Django Signals in Action', 'https://www.youtube.com/watch?v=B4S6E9rU7E4', '[{\r\n  \"title\": \"Django Signals in Action\",\r\n  \"content\": {\r\n    \"introduction\": \"Practical examples of using signals in Django applications.\",\r\n    \"usage\": \"Implement post-save and pre-delete signals for model actions.\",\r\n    \"case_studies\": \"Explore real-world use cases for signals.\",\r\n    \"conclusion\": \"Signals provide a powerful way to decouple application logic.\",\r\n  }\r\n}]', '2024-09-28 10:45:00'),
(91, 101, 2, 'Flask WebSocket', 'https://www.youtube.com/watch?v=R4D1Bwx9MRY', '[{\r\n  \"title\": \"Flask WebSocket\",\r\n  \"content\": {\r\n    \"introduction\": \"Implement real-time communication in Flask using WebSockets.\",\r\n    \"setup\": \"Configure Flask-SocketIO for WebSocket support.\",\r\n    \"examples\": \"Create chat applications with real-time message updates.\",\r\n    \"conclusion\": \"WebSockets enhance interactivity in web applications.\",\r\n  }\r\n}]', '2024-09-28 10:50:00'),
(92, 101, 2, 'Django REST Framework Authentication', 'https://www.youtube.com/watch?v=W_vw09M3w2s', '[{\r\n  \"title\": \"Django REST Framework Authentication\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore authentication methods in Django REST Framework.\",\r\n    \"token_auth\": \"Implement token-based authentication for your APIs.\",\r\n    \"jwt_auth\": \"Use JWT for stateless authentication in your applications.\",\r\n    \"conclusion\": \"Secure APIs with robust authentication mechanisms.\",\r\n  }\r\n}]', '2024-09-28 10:55:00'),
(93, 101, 2, 'Flask REST API Pagination', 'https://www.youtube.com/watch?v=K6pEDT76r9M', '[{\r\n  \"title\": \"Flask REST API Pagination\",\r\n  \"content\": {\r\n    \"introduction\": \"Implement pagination in Flask APIs to handle large datasets.\",\r\n    \"setup\": \"Use Flask-RESTful to add pagination features easily.\",\r\n    \"examples\": \"Return paginated results in your API endpoints.\",\r\n    \"conclusion\": \"Pagination improves performance and user experience in APIs.\",\r\n  }\r\n}]', '2024-09-28 11:00:00'),
(94, 101, 2, 'Django Admin Customization', 'https://www.youtube.com/watch?v=8_f9z7m1pC0', '[{\r\n  \"title\": \"Django Admin Customization\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to customize the Django admin interface.\",\r\n    \"custom_models\": \"Register and customize your models in the admin panel.\",\r\n    \"admin_actions\": \"Add custom actions to your admin views.\",\r\n    \"conclusion\": \"Customizing admin enhances the usability of the backend.\",\r\n  }\r\n}]', '2024-09-28 11:05:00');
INSERT INTO `python_course` (`id`, `course_id`, `level`, `topic_name`, `video_url`, `articles`, `created_at`) VALUES
(95, 101, 2, 'Flask Blueprint Structure', 'https://www.youtube.com/watch?v=w0OwB0B9Tlg', '[{\r\n  \"title\": \"Flask Blueprint Structure\",\r\n  \"content\": {\r\n    \"introduction\": \"Organize your Flask application using blueprints for modular design.\",\r\n    \"setup\": \"Create and register blueprints in your app factory.\",\r\n    \"examples\": \"Utilize blueprints for routing and views.\",\r\n    \"conclusion\": \"Blueprints facilitate a clean and maintainable codebase.\",\r\n  }\r\n}]', '2024-09-28 11:10:00'),
(96, 101, 2, 'Django Query Optimization', 'https://www.youtube.com/watch?v=IoGXiG_z7k4', '[{\r\n  \"title\": \"Django Query Optimization\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn techniques for optimizing database queries in Django.\",\r\n    \"select_related\": \"Use select_related and prefetch_related to reduce queries.\",\r\n    \"query_tuning\": \"Analyze and tune your queries for better performance.\",\r\n    \"conclusion\": \"Optimized queries lead to faster applications and lower database load.\",\r\n  }\r\n}]', '2024-09-28 11:15:00'),
(97, 101, 2, 'Flask JSON API', 'https://www.youtube.com/watch?v=I5V2ZpU4gx4', '[{\r\n  \"title\": \"Flask JSON API\",\r\n  \"content\": {\r\n    \"introduction\": \"Create a JSON API with Flask and Flask-RESTful.\",\r\n    \"setup\": \"Define API routes to serve JSON responses.\",\r\n    \"examples\": \"Implement CRUD operations in your API.\",\r\n    \"conclusion\": \"JSON APIs are essential for modern web applications.\",\r\n  }\r\n}]', '2024-09-28 11:20:00'),
(98, 101, 2, 'Django Filters', 'https://www.youtube.com/watch?v=G_G9cGg0iAo', '[{\r\n  \"title\": \"Django Filters\",\r\n  \"content\": {\r\n    \"introduction\": \"Utilize Django filters for dynamic query handling.\",\r\n    \"setup\": \"Install and configure Django-filter library.\",\r\n    \"examples\": \"Implement filtering in your Django views.\",\r\n    \"conclusion\": \"Filters enhance data retrieval and user interaction.\",\r\n  }\r\n}]', '2024-09-28 11:25:00'),
(99, 101, 2, 'Flask Deployment Strategies', 'https://www.youtube.com/watch?v=2cS2fSBq4tM', '[{\r\n  \"title\": \"Flask Deployment Strategies\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore various strategies for deploying Flask applications.\",\r\n    \"platforms\": \"Learn about popular hosting platforms like Heroku and AWS.\",\r\n    \"best_practices\": \"Follow best practices for a successful deployment.\",\r\n    \"conclusion\": \"Proper deployment ensures your application is accessible and scalable.\",\r\n  }\r\n}]', '2024-09-28 11:30:00'),
(100, 101, 2, 'Django Security Practices', 'https://www.youtube.com/watch?v=LKe17GqlqMI', '[{\r\n  \"title\": \"Django Security Practices\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn essential security practices for Django applications.\",\r\n    \"vulnerabilities\": \"Understand common vulnerabilities and how to mitigate them.\",\r\n    \"secure_auth\": \"Implement secure authentication and authorization measures.\",\r\n    \"conclusion\": \"Security is critical for maintaining user trust and application integrity.\",\r\n  }\r\n}]', '2024-09-28 11:35:00'),
(101, 101, 3, 'Introduction to Machine Learning', 'https://www.youtube.com/watch?v=Gv9_4yMHFhI', '[{\r\n  \"title\": \"Introduction to Machine Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn the basics of machine learning, its applications, and algorithms.\",\r\n    \"types\": \"Understand supervised and unsupervised learning.\",\r\n    \"algorithms\": \"Explore common algorithms like linear regression and decision trees.\",\r\n    \"conclusion\": \"Machine learning is transforming industries by enabling data-driven decisions.\"\r\n  }\r\n}]', '2024-09-28 09:00:00'),
(102, 101, 3, 'Data Preprocessing Techniques', 'https://www.youtube.com/watch?v=8K32cE8aBz0', '[{\r\n  \"title\": \"Data Preprocessing Techniques\",\r\n  \"content\": {\r\n    \"introduction\": \"Data preprocessing is essential for preparing data for machine learning models.\",\r\n    \"steps\": \"Learn about cleaning, normalization, and feature scaling.\",\r\n    \"tools\": \"Familiarize yourself with libraries like Pandas and NumPy.\",\r\n    \"conclusion\": \"Proper preprocessing can significantly improve model performance.\"\r\n  }\r\n}]', '2024-09-28 09:05:00'),
(103, 101, 3, 'Introduction to Neural Networks', 'https://www.youtube.com/watch?v=aircAkgeS10', '[{\r\n  \"title\": \"Introduction to Neural Networks\",\r\n  \"content\": {\r\n    \"introduction\": \"Dive into the basics of neural networks and their architecture.\",\r\n    \"layers\": \"Understand input, hidden, and output layers.\",\r\n    \"activation_functions\": \"Explore different activation functions and their significance.\",\r\n    \"conclusion\": \"Neural networks are foundational to deep learning applications.\"\r\n  }\r\n}]', '2024-09-28 09:10:00'),
(104, 101, 3, 'Deep Learning Fundamentals', 'https://www.youtube.com/watch?v=2_OE0Tz_4hI', '[{\r\n  \"title\": \"Deep Learning Fundamentals\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn about deep learning and how it differs from traditional machine learning.\",\r\n    \"architecture\": \"Explore popular architectures like CNNs and RNNs.\",\r\n    \"frameworks\": \"Get introduced to frameworks like TensorFlow and Keras.\",\r\n    \"conclusion\": \"Deep learning has revolutionized fields such as computer vision and NLP.\"\r\n  }\r\n}]', '2024-09-28 09:15:00'),
(105, 101, 3, 'Understanding Convolutional Neural Networks (CNNs)', 'https://www.youtube.com/watch?v=YzqfVwAqE0o', '[{\r\n  \"title\": \"Understanding Convolutional Neural Networks (CNNs)\",\r\n  \"content\": {\r\n    \"introduction\": \"CNNs are crucial for image processing tasks. Learn their architecture.\",\r\n    \"layers\": \"Understand convolutional, pooling, and fully connected layers.\",\r\n    \"applications\": \"Explore applications in image classification and recognition.\",\r\n    \"conclusion\": \"CNNs have led to breakthroughs in computer vision.\"\r\n  }\r\n}]', '2024-09-28 09:20:00'),
(106, 101, 3, 'Natural Language Processing (NLP) Basics', 'https://www.youtube.com/watch?v=Oevr7ViES90', '[{\r\n  \"title\": \"Natural Language Processing (NLP) Basics\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the fundamentals of NLP and its applications in AI.\",\r\n    \"text_processing\": \"Learn about text preprocessing techniques such as tokenization.\",\r\n    \"nlp_tools\": \"Familiarize yourself with libraries like NLTK and spaCy.\",\r\n    \"conclusion\": \"NLP is essential for building intelligent systems that understand human language.\"\r\n  }\r\n}]', '2024-09-28 09:25:00'),
(107, 101, 3, 'Implementing Machine Learning Algorithms', 'https://www.youtube.com/watch?v=K_qEq0gI3Ck', '[{\r\n  \"title\": \"Implementing Machine Learning Algorithms\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to implement algorithms like decision trees and SVMs in Python.\",\r\n    \"libraries\": \"Utilize scikit-learn for building and evaluating models.\",\r\n    \"examples\": \"Explore practical examples and coding tutorials.\",\r\n    \"conclusion\": \"Hands-on experience is crucial for mastering machine learning.\"\r\n  }\r\n}]', '2024-09-28 09:30:00'),
(108, 101, 3, 'Model Evaluation and Hyperparameter Tuning', 'https://www.youtube.com/watch?v=2RjZK0ZDj6o', '[{\r\n  \"title\": \"Model Evaluation and Hyperparameter Tuning\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn the importance of evaluating machine learning models.\",\r\n    \"metrics\": \"Explore evaluation metrics like accuracy, precision, and recall.\",\r\n    \"tuning\": \"Understand techniques for hyperparameter tuning, such as Grid Search.\",\r\n    \"conclusion\": \"Effective evaluation and tuning lead to better model performance.\"\r\n  }\r\n}]', '2024-09-28 09:35:00'),
(109, 101, 3, 'Deploying Machine Learning Models', 'https://www.youtube.com/watch?v=IR2gB2H-DhU', '[{\r\n  \"title\": \"Deploying Machine Learning Models\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to deploy machine learning models into production environments.\",\r\n    \"tools\": \"Explore tools and platforms like Docker and AWS for deployment.\",\r\n    \"best_practices\": \"Understand best practices for maintaining and updating models.\",\r\n    \"conclusion\": \"Deployment is a critical step in the machine learning lifecycle.\"\r\n  }\r\n}]', '2024-09-28 09:40:00'),
(110, 101, 3, 'Introduction to Reinforcement Learning', 'https://www.youtube.com/watch?v=2pY4u9GgE70', '[{\r\n  \"title\": \"Introduction to Reinforcement Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the concepts of reinforcement learning and its applications.\",\r\n    \"agents\": \"Understand the role of agents, environments, and rewards.\",\r\n    \"algorithms\": \"Learn about Q-learning and deep Q-networks.\",\r\n    \"conclusion\": \"Reinforcement learning is a powerful approach for decision-making problems.\"\r\n  }\r\n}]', '2024-09-28 09:45:00'),
(111, 101, 3, 'Introduction to Computer Vision', 'https://www.youtube.com/watch?v=Hf2K6Ewr1JY', '[{\r\n  \"title\": \"Introduction to Computer Vision\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the basics of computer vision and its significance in AI.\",\r\n    \"techniques\": \"Learn about image processing techniques and their applications.\",\r\n    \"tools\": \"Familiarize yourself with OpenCV and other libraries.\",\r\n    \"conclusion\": \"Computer vision is key to enabling machines to understand visual data.\"\r\n  }\r\n}]', '2024-09-28 09:50:00'),
(112, 101, 3, 'Image Classification with CNNs', 'https://www.youtube.com/watch?v=H8bKRGytb40', '[{\r\n  \"title\": \"Image Classification with CNNs\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to classify images using convolutional neural networks.\",\r\n    \"dataset\": \"Utilize datasets like CIFAR-10 for training models.\",\r\n    \"implementation\": \"Follow step-by-step coding tutorials for image classification tasks.\",\r\n    \"conclusion\": \"Image classification is a fundamental task in computer vision.\"\r\n  }\r\n}]', '2024-09-28 09:55:00'),
(113, 101, 3, 'Object Detection Techniques', 'https://www.youtube.com/watch?v=ZIcC7EoA4ZA', '[{\r\n  \"title\": \"Object Detection Techniques\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore different techniques for detecting objects in images.\",\r\n    \"algorithms\": \"Learn about YOLO and SSD for real-time object detection.\",\r\n    \"applications\": \"Understand the applications of object detection in various industries.\",\r\n    \"conclusion\": \"Object detection is critical for applications like surveillance and autonomous vehicles.\"\r\n  }\r\n}]', '2024-09-28 10:00:00'),
(114, 101, 3, 'Face Recognition Systems', 'https://www.youtube.com/watch?v=2B1f1HpuZ8g', '[{\r\n  \"title\": \"Face Recognition Systems\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn the fundamentals of building face recognition systems.\",\r\n    \"techniques\": \"Explore feature extraction and matching techniques.\",\r\n    \"libraries\": \"Utilize libraries like face_recognition for implementation.\",\r\n    \"conclusion\": \"Face recognition is widely used in security and identification applications.\"\r\n  }\r\n}]', '2024-09-28 10:05:00'),
(115, 101, 3, 'Natural Language Processing with Transformers', 'https://www.youtube.com/watch?v=8gxS1A8pM5s', '[{\r\n  \"title\": \"Natural Language Processing with Transformers\",\r\n  \"content\": {\r\n    \"introduction\": \"Discover how transformers revolutionized NLP tasks.\",\r\n    \"architecture\": \"Understand the architecture of transformer models like BERT and GPT.\",\r\n    \"applications\": \"Explore applications in translation, summarization, and text generation.\",\r\n    \"conclusion\": \"Transformers are setting new standards in natural language understanding.\"\r\n  }\r\n}]', '2024-09-28 10:10:00'),
(116, 101, 3, 'Building Chatbots with NLP', 'https://www.youtube.com/watch?v=ugvI_B_rG4o', '[{\r\n  \"title\": \"Building Chatbots with NLP\",\r\n  \"content\": {\r\n    \"introduction\": \"Learn how to build intelligent chatbots using NLP techniques.\",\r\n    \"frameworks\": \"Utilize frameworks like Rasa or Dialogflow for chatbot development.\",\r\n    \"dialog_management\": \"Explore how to manage conversation flow effectively.\",\r\n    \"conclusion\": \"Chatbots are increasingly used in customer service and engagement.\"\r\n  }\r\n}]', '2024-09-28 10:15:00'),
(117, 101, 3, 'Time Series Analysis', 'https://www.youtube.com/watch?v=9xKBYd_0LPg', '[{\r\n  \"title\": \"Time Series Analysis\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the concepts and techniques for analyzing time series data.\",\r\n    \"methods\": \"Learn about ARIMA models and seasonal decomposition.\",\r\n    \"applications\": \"Understand applications in finance, sales forecasting, and more.\",\r\n    \"conclusion\": \"Time series analysis is crucial for making informed predictions.\"\r\n  }\r\n}]', '2024-09-28 10:20:00'),
(118, 101, 3, 'Reinforcement Learning Applications', 'https://www.youtube.com/watch?v=HWB-nDDhb4U', '[{\r\n  \"title\": \"Reinforcement Learning Applications\",\r\n  \"content\": {\r\n    \"introduction\": \"Discover various applications of reinforcement learning in real-world scenarios.\",\r\n    \"domains\": \"Explore its use in robotics, gaming, and autonomous systems.\",\r\n    \"challenges\": \"Understand the challenges and considerations in RL implementations.\",\r\n    \"conclusion\": \"Reinforcement learning is a promising area with vast potential.\"\r\n  }\r\n}]', '2024-09-28 10:25:00'),
(119, 101, 3, 'Ethics in AI and Machine Learning', 'https://www.youtube.com/watch?v=q7vATF_78CA', '[{\r\n  \"title\": \"Ethics in AI and Machine Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Explore the ethical implications of AI and machine learning technologies.\",\r\n    \"bias\": \"Learn about bias in algorithms and its societal impacts.\",\r\n    \"responsibility\": \"Understand the importance of responsible AI development.\",\r\n    \"conclusion\": \"Ethics is crucial for ensuring technology benefits everyone.\"\r\n  }\r\n}]', '2024-09-28 10:30:00'),
(120, 101, 3, 'Future Trends in AI and Machine Learning', 'https://www.youtube.com/watch?v=3GQZ8XDX0lA', '[{\r\n  \"title\": \"Future Trends in AI and Machine Learning\",\r\n  \"content\": {\r\n    \"introduction\": \"Discover the emerging trends shaping the future of AI and machine learning.\",\r\n    \"innovations\": \"Explore innovations in AI technology and applications.\",\r\n    \"predictions\": \"Understand predictions for AI\"s impact on various industries.\",\r\n    \"conclusion\": \"The future of AI is bright, with endless possibilities.\"\r\n  }\r\n}]', '2024-09-28 10:35:00'),
(121, 101, 3, 'Hands-on Project: Building an AI Application', 'https://www.youtube.com/watch?v=lYixu6PpK-M', '[{\r\n  \"title\": \"Hands-on Project: Building an AI Application\",\r\n  \"content\": {\r\n    \"introduction\": \"Apply your knowledge to build a complete AI application from scratch.\",\r\n    \"planning\": \"Learn how to plan and design your project effectively.\",\r\n    \"implementation\": \"Follow step-by-step instructions to implement your AI application.\",\r\n    \"conclusion\": \"Hands-on projects reinforce learning and build practical skills.\"\r\n  }\r\n}]', '2024-09-28 10:40:00'),
(122, 101, 3, 'Capstone Project Overview', 'https://www.youtube.com/watch?v=0kX4er7U_4E', '[{\r\n  \"title\": \"Capstone Project Overview\",\r\n  \"content\": {\r\n    \"introduction\": \"Prepare for your final project by reviewing requirements and expectations.\",\r\n    \"guidelines\": \"Understand the guidelines for your capstone project.\",\r\n    \"submission\": \"Learn about the submission process and evaluation criteria.\",\r\n    \"conclusion\": \"The capstone project is a key milestone in your learning journey.\"\r\n  }\r\n}]', '2024-09-28 10:45:00'),
(123, 101, 3, 'Project Presentations', 'https://www.youtube.com/watch?v=2t6HBeQ8x50', '[{\r\n  \"title\": \"Project Presentations\",\r\n  \"content\": {\r\n    \"introduction\": \"Present your project to the class and showcase your work.\",\r\n    \"feedback\": \"Receive feedback from instructors and peers.\",\r\n    \"improvements\": \"Learn how to improve your project based on feedback received.\",\r\n    \"conclusion\": \"Presenting your work is an essential skill in any field.\"\r\n  }\r\n}]', '2024-09-28 10:50:00'),
(124, 101, 3, 'Course Summary and Next Steps', 'https://www.youtube.com/watch?v=7RZLQgi8n2A', '[{\r\n  \"title\": \"Course Summary and Next Steps\",\r\n  \"content\": {\r\n    \"introduction\": \"Reflect on what you have learned throughout the course.\",\r\n    \"resources\": \"Explore additional resources for further learning.\",\r\n    \"career\": \"Discuss potential career paths in AI and machine learning.\",\r\n    \"conclusion\": \"Continue your learning journey and stay updated in this rapidly evolving field.\"\r\n  }\r\n}]', '2024-09-28 10:55:00'),
(125, 101, 3, 'Final Thoughts and Farewell', 'https://www.youtube.com/watch?v=G-dBTT_SeLw', '[{\r\n  \"title\": \"Final Thoughts and Farewell\",\r\n  \"content\": {\r\n    \"introduction\": \"Wrap up the course with final thoughts and reflections.\",\r\n    \"journey\": \"Share your learning journey and experiences with the class.\",\r\n    \"future\": \"Encourage continued learning and exploration in AI and machine learning.\",\r\n    \"conclusion\": \"Thank you for participating and best of luck in your future endeavors!\"\r\n  }\r\n}]', '2024-09-28 11:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `python_qna`
--

CREATE TABLE `python_qna` (
  `id` int(11) NOT NULL,
  `questions` varchar(255) NOT NULL,
  `option_1` varchar(255) NOT NULL,
  `option_2` varchar(255) NOT NULL,
  `option_3` varchar(255) NOT NULL,
  `option_4` varchar(255) NOT NULL,
  `correct_option` varchar(255) NOT NULL,
  `level` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `python_qna`
--

INSERT INTO `python_qna` (`id`, `questions`, `option_1`, `option_2`, `option_3`, `option_4`, `correct_option`, `level`) VALUES
(1, 'Which of the function is use for print statement in Python?', 'print()', 'echo', 'cout<<', 'system.out.print()', 'print()', 1),
(2, 'What is the output of the following code: `print(type([]))`?', '<class \'list\'>', '<class \'tuple\'>', '<class \'dict\'>', '<class \'set\'>', '<class \'list\'>', 2),
(3, 'How do you start a comment in Python?', '/* Comment */', '// Comment', '# Comment', '-- Comment', '# Comment', 1),
(4, 'Which of the following is used to create an anonymous function in Python?', 'def', 'lambda', 'anonymous', 'func', 'lambda', 3),
(5, 'What is Python?', 'A high-level programming language', 'A type of database', 'A web development framework\r\n', 'A markup language', 'A high-level programming language', 1),
(6, 'Which of the following data types is immutable in Python?', 'List', 'Dictionary', 'Set', 'Tuple', 'Tuple', 1),
(7, 'What is the correct syntax to check if a variable x is equal to 10 in Python?', 'if x == 10:', 'if (x = 10):', 'if x := 10', 'if x === 10', 'if x == 10:', 1),
(8, 'Which of the following is used to define a list in Python?', '[]', '()', '{}', '<>', '[]', 1),
(9, 'Which operator is used for exponentiation in Python?', '^', '**', '*', '//', '**', 1),
(10, 'Which operator is used for floor division in Python?', '/', '%', '//', '^', '//', 1),
(11, 'What does the == operator do in Python?', 'Assigns a value', 'Checks for equality', 'Compares two strings', 'Increments a value', 'Checks for equality', 1),
(12, 'What will be the output of the following code?\r\nx = 10\r\ny = 3\r\nprint(x % y)', '0', '2', '1', '3', '1', 1);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `email_id` varchar(280) NOT NULL,
  `course_title` varchar(240) NOT NULL,
  `level` varchar(200) NOT NULL,
  `datentime` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `email_id`, `course_title`, `level`, `datentime`) VALUES
(1, 'edumindsup20@gmail.com', 'Python', 'Intermediate', '2024-10-02 22:40:50'),
(3, 'edumindsup20@gmail.com', 'Data Analysis', 'Beginner', '2024-10-02 23:10:01'),
(4, 'akkii77580@gg.co', 'Excel', 'Beginner', '2024-10-02 23:19:32'),
(5, 'akkii77580@gg.co', 'Excel', 'Beginner', '2024-10-02 23:19:34'),
(6, 'akkii77580@gg.co', 'Excel', 'Beginner', '2024-10-02 23:23:17');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `courses`
--
ALTER TABLE `courses`
  ADD PRIMARY KEY (`c_id`);

--
-- Indexes for table `data_analytics_course`
--
ALTER TABLE `data_analytics_course`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `excel_course`
--
ALTER TABLE `excel_course`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `excel_qna`
--
ALTER TABLE `excel_qna`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `level`
--
ALTER TABLE `level`
  ADD PRIMARY KEY (`C_ID`);

--
-- Indexes for table `profiles`
--
ALTER TABLE `profiles`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `python_course`
--
ALTER TABLE `python_course`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `python_qna`
--
ALTER TABLE `python_qna`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
